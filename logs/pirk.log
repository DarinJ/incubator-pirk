2016-08-10 18:20:39,112 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-10 18:20:39,135 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-10 18:20:39,138 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-10 18:20:39,152 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 18:20:39,152 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 18:20:39,153 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 18:20:39,153 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-10 18:20:39,154 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-10 18:20:39,162 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-10 18:20:39,163 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-10 18:20:39,163 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-10 18:20:39,163 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-10 18:20:39,164 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-10 18:20:39,164 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-10 18:20:39,165 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-10 18:20:39,165 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-10 18:20:39,166 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-10 18:20:39,166 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-10 18:20:39,167 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-10 18:20:39,167 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-10 18:20:39,168 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-10 18:20:39,168 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-10 18:20:39,168 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 18:20:39,272 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 18:20:39,272 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 18:20:39,272 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 18:20:39,273 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 18:20:39,273 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 18:20:39,273 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 18:20:39,274 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 18:20:39,279 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-10 18:20:39,280 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-10 18:20:39,283 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 18:20:39,284 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 18:20:39,285 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 18:20:39,286 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:20:39,287 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:20:39,289 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-10 18:20:39,327 INFO  encryption.Paillier  [] - Parameters = p = 1134472071 q = 943869107 N = 598475621 NSquared = 767788505 lambdaN = -739932778 bitLength = 201
2016-08-10 18:20:39,382 INFO  general.PaillierTest  [] - encM1 = -1107330513 encM2 = 1406534256
2016-08-10 18:20:39,383 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:20:39,383 INFO  general.PaillierTest  [] - encM1_times_encM2 = 245986304 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:20:41,119 INFO  encryption.Paillier  [] - Parameters = p = 1602001547 q = -654064567 N = 1132166563 NSquared = 1246401993 lambdaN = -685122952 bitLength = 3072
2016-08-10 18:20:41,241 INFO  general.PaillierTest  [] - encM1 = 178508453 encM2 = -865213226
2016-08-10 18:20:41,361 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:20:41,418 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2018899547 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:20:42,700 INFO  encryption.Paillier  [] - Parameters = p = -1909036715 q = 618140345 N = 1819416685 NSquared = -1150771607 lambdaN = -1369905384 bitLength = 4116
2016-08-10 18:20:42,978 INFO  general.PaillierTest  [] - encM1 = 334462122 encM2 = 781194109
2016-08-10 18:20:43,257 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:20:43,396 INFO  general.PaillierTest  [] - encM1_times_encM2 = -870076460 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:20:43,397 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:20:43,397 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:20:43,401 INFO  encryption.Paillier  [] - testBit true
 N = 11001101001011110111011110001110110011101101011110001001111011101110101011011100010111111111001010010110100100011000000110111010110111100001001111001011101100110010100000000111100100101000101101101011
2016-08-10 18:20:43,402 INFO  encryption.Paillier  [] - Parameters = p = -1693309461 q = 1572622465 N = 127044459 NSquared = 737763001 lambdaN = -2023617920 bitLength = 201
2016-08-10 18:20:43,402 INFO  general.PaillierTest  [] - encM1 = -1219924730 encM2 = 1890454996
2016-08-10 18:20:43,403 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:20:43,403 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1547285242 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:20:45,354 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:20:45,358 INFO  encryption.Paillier  [] - Parameters = p = 1669806695 q = 2003668253 N = -2141759317 NSquared = 1659896377 lambdaN = -760133484 bitLength = 3072
2016-08-10 18:20:45,481 INFO  general.PaillierTest  [] - encM1 = 1019377893 encM2 = 1055663241
2016-08-10 18:20:45,596 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:20:45,654 INFO  general.PaillierTest  [] - encM1_times_encM2 = 937883820 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:20:59,396 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:20:59,399 INFO  encryption.Paillier  [] - Parameters = p = 1210896959 q = 2001904833 N = -1045897857 NSquared = -195787519 lambdaN = -2129349824 bitLength = 4603
2016-08-10 18:20:59,790 INFO  general.PaillierTest  [] - encM1 = -929276951 encM2 = -265217915
2016-08-10 18:21:00,163 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:21:00,353 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1015257502 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:21:00,353 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:21:00,353 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:21:00,358 INFO  encryption.Paillier  [] - Parameters = p = -2085525625 q = -1966342377 N = 1763493409 NSquared = 42930241 lambdaN = 1870026330 bitLength = 201
2016-08-10 18:21:00,359 INFO  general.PaillierTest  [] - encM1 = -1669261374 encM2 = -1605623984
2016-08-10 18:21:00,359 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:21:00,359 INFO  general.PaillierTest  [] - encM1_times_encM2 = -824465778 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:21:01,203 INFO  encryption.Paillier  [] - Parameters = p = -2040122749 q = -384742789 N = -1285086479 NSquared = 682813153 lambdaN = -1577594118 bitLength = 3072
2016-08-10 18:21:01,331 INFO  general.PaillierTest  [] - encM1 = -1447725257 encM2 = -1098676429
2016-08-10 18:21:01,442 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:21:01,497 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2122299224 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:21:44,026 INFO  encryption.Paillier  [] - Parameters = p = -600136087 q = -1564260445 N = -1317399589 NSquared = -1002029735 lambdaN = -1633287224 bitLength = 6867
2016-08-10 18:21:45,268 INFO  general.PaillierTest  [] - encM1 = -63686731 encM2 = -1798219961
2016-08-10 18:21:46,515 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:21:47,131 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1841969921 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:21:47,131 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:21:47,131 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:21:47,141 INFO  encryption.Paillier  [] - testBit false
 N = 11101010101101011011111011001010000110110010101010110000001011100101110001101010110111110110101101111101010101101011111010100101100001001001101000111010000110011001010010001001101101000000010101010001
2016-08-10 18:21:47,148 INFO  encryption.Paillier  [] - testBit true
 N = 10010100001111110110001100101111100001100001110011000100101111011100110010111101011100111001001100100010001100010101000110001001000111111110000111001000100111010110000110000011010001000111100101111111
2016-08-10 18:21:47,149 INFO  encryption.Paillier  [] - Parameters = p = 337334133 q = -1112335709 N = -2092664449 NSquared = -1088336639 lambdaN = 1488652212 bitLength = 201
2016-08-10 18:21:47,149 INFO  general.PaillierTest  [] - encM1 = -910752929 encM2 = 504466400
2016-08-10 18:21:47,150 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:21:47,150 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1109665449 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:21:49,124 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:21:49,126 INFO  encryption.Paillier  [] - Parameters = p = 2005303017 q = 833987607 N = 975153903 NSquared = 604261153 lambdaN = 1089483320 bitLength = 3072
2016-08-10 18:21:49,249 INFO  general.PaillierTest  [] - encM1 = 1485490063 encM2 = -1313491400
2016-08-10 18:21:49,373 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:21:49,435 INFO  general.PaillierTest  [] - encM1_times_encM2 = -79471080 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:22:07,159 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:22:31,590 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:22:36,899 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:22:36,904 INFO  encryption.Paillier  [] - Parameters = p = -826630709 q = 1487977995 N = -1498320455 NSquared = 1616304049 lambdaN = 1067649778 bitLength = 5265
2016-08-10 18:22:37,485 INFO  general.PaillierTest  [] - encM1 = -853948859 encM2 = -1130641895
2016-08-10 18:22:38,062 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:22:38,351 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1547907461 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:22:38,351 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:22:38,351 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:22:38,357 INFO  encryption.Paillier  [] - Parameters = p = -38187791 q = 1468739307 N = -490213573 NSquared = -112642151 lambdaN = -960382544 bitLength = 201
2016-08-10 18:22:38,357 INFO  general.PaillierTest  [] - encM1 = -431919827 encM2 = 1422829832
2016-08-10 18:22:38,358 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:22:38,360 INFO  general.PaillierTest  [] - encM1_times_encM2 = 518444078 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:22:40,182 INFO  encryption.Paillier  [] - Parameters = p = 59583483 q = -723443991 N = 1245671795 NSquared = -2065647191 lambdaN = 318255384 bitLength = 3072
2016-08-10 18:22:40,304 INFO  general.PaillierTest  [] - encM1 = -1404035045 encM2 = 1512642526
2016-08-10 18:22:40,418 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:22:40,480 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1993989905 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:23:03,362 INFO  encryption.Paillier  [] - Parameters = p = 1957394257 q = -1900977693 N = -650019373 NSquared = -654459927 lambdaN = -353217968 bitLength = 5877
2016-08-10 18:23:04,149 INFO  general.PaillierTest  [] - encM1 = -1788572703 encM2 = 1672298139
2016-08-10 18:23:04,912 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:23:05,303 INFO  general.PaillierTest  [] - encM1_times_encM2 = 672140566 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:23:05,304 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:23:05,304 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:23:05,307 INFO  encryption.Paillier  [] - testBit false
 N = 10110000100011001110011110001000111101001010101100010000000000100111001100011011101101110010110100010010101111110011000111001111010001101000100111000010110100111010000011111010001111100111111001011101
2016-08-10 18:23:05,311 INFO  encryption.Paillier  [] - testBit true
 N = 10010001001101101001111011100100010001000000111000011010111101110110000110111101100110101001011000010000001010111110010000100101110101011001010111000100100101001111010111111110010011000000000001101011
2016-08-10 18:23:05,311 INFO  encryption.Paillier  [] - Parameters = p = -1975814629 q = -1564048399 N = -28573589 NSquared = -1819792199 lambdaN = -391838928 bitLength = 201
2016-08-10 18:23:05,311 INFO  general.PaillierTest  [] - encM1 = 627200857 encM2 = 1544107996
2016-08-10 18:23:05,312 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:23:05,312 INFO  general.PaillierTest  [] - encM1_times_encM2 = 272315900 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:23:06,200 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:23:09,828 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:23:09,830 INFO  encryption.Paillier  [] - Parameters = p = 697705705 q = -2033221345 N = -2144411337 NSquared = -1243235887 lambdaN = 1743035800 bitLength = 3072
2016-08-10 18:23:09,950 INFO  general.PaillierTest  [] - encM1 = 600986332 encM2 = 1802965137
2016-08-10 18:23:10,070 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:23:10,127 INFO  general.PaillierTest  [] - encM1_times_encM2 = -978524860 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:23:11,014 INFO  encryption.Paillier  [] - testBit false
 N = 1001110111000001000101111011100001010010010001011001010101000000100001111100110001111101001000110000001100011010101100010000100010011110000000000110000111100000011101110110011111110010101100001000111100010101111011101001001111111011001000011000101110111001100000001000000101001101001011100010000100110010101011000101001011001010111101001001110011111011001110111011101110101001010110000111100101100010010010110101100001100010000101011100101011001100101110001011100001110001101111100101101001111000100000100101110101111000011110010001001000011001110110011111111110010000101100100000001100011101101000111011000100001001000010011011011000001001111111111110110001100101011011110000000111010011110011000100100101110110011101100001001010000110110101110011011011100111110001111100010011111001001100101010011110100101011000100000101101110000101001000010100111101000101010101101110100110111000011011100010100111100001010000101010100110110100011111110010010000000111000101000101001101010101001010001101011010001000011001010010001001111010011111010100010001100110101000111001101011110110111000110111100011101001011000001001010011001001110111111110111011001010010000111010101111011101010011011011100110101100011110010101100001001010100101000111101111111010000101001000111111100010100011001011100000101010111011001010110000110011111011001001011100101111000000100001010011011000001000100101111000000010000101000010000100111101001101001101111111011101011001100111100100011111100011101101100111001010101101001000100011010000101111001101010011001001001110100000111101101110111010011001010010101001101110000011111001100101110111001101010101011000001110100111000000001000111010100000000000011100011001110110100000010110000011101001001011100011111011101011000100011111110010101000110110101011100000110011101100000100001110001110011010111010100011001011111100101111101110010101110011100001011100001110010011100100000011111111001100110010100001000000010110111100110101110001100111100110011110110000101101100111000010110011101100101001000100001011110001011101000000100100000111110011100111111111111111100011001010101011101110100111110001011010110111000010000100100111000110000010010100010101011001100100010011011101001110100011000011101100101111001100001110011110111100100101110100110101011110001011110101110001100000011001101100110100111111000111000100101110101111001111010110010011101001110111000000100111100110100010010011111110110000100001010000011111111110001011010001111111110001010011001100100001010110100001110110110010001110111101011010001100001011000000001000111000001111000101111010010010100110110101100010110000011001101100100010011010111000100011100011000001100110111001010011011000100101101110011101001111010111001101010000101001101101100100110010110111010100100100111001100101000000101010100111000111111101101001000001100110100010010101001101111100111111001010110001011011010111010000001110011100101001000001001011010011001000110010001010010110011000101010011100011111001111101110001010010110111110001110001111111100101000010011001110010101101101011001010101011111101000101001000111111010010011100110101111100010100001001011100110101010111001011100000010110101011110011101111010011110000000000011001001001001010011100101110001010000000111000010010101101011000101010100100111100110000100100111101101100010000010000010001010000101010000001111111000100101010100000101001011111110000101010101011100100101011011110000010100101001001001101101001110001000100111110011100011001011010110010000110111110010011100101111100001010000100000100001101100111001010011000111101001001000010100001100101101111010011101100010101010001101110100111101000110000110010011011110011010110101011000100011000100011110110111011100100101100101101101100010111000010101111101010110110001111011000111110100101011110000000100110101100011010000101101101100101111110011100010100110001110100101100001111110100100110111011011010011011011001001100101001110111001111001000001100001110111001101010000110011001100101111101110100110010100100101000100011010100111010111100100010001011101100101101011011011010000011010111101111110101110000000010101011101110111101100100111010101101111001011001110011100010011001111000001011011000110011010000100011110001001110101010011110111101111000100011110011001010001011001001011111110001111101111111001101011111010110001101001001100010111011101110011101111110001000000100100111010001101101010110111110011110001100101010100011101100101011001101011110101110010101001111010101110000111110000000001110100101001000000111
2016-08-10 18:23:24,692 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:23:24,695 INFO  encryption.Paillier  [] - Parameters = p = 575675035 q = -181107717 N = 1621321465 NSquared = 176250417 lambdaN = -511368858 bitLength = 4498
2016-08-10 18:23:25,048 INFO  general.PaillierTest  [] - encM1 = -1405666089 encM2 = -532629119
2016-08-10 18:23:25,416 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:23:25,598 INFO  general.PaillierTest  [] - encM1_times_encM2 = -880089576 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:23:25,599 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:23:25,599 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:23:25,601 INFO  encryption.Paillier  [] - Parameters = p = -1701804789 q = 614541619 N = 671368241 NSquared = -2085482143 lambdaN = 879315706 bitLength = 201
2016-08-10 18:23:25,601 INFO  general.PaillierTest  [] - encM1 = -1881791119 encM2 = 1154693781
2016-08-10 18:23:25,601 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:23:25,601 INFO  general.PaillierTest  [] - encM1_times_encM2 = 111169629 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:23:27,089 INFO  encryption.Paillier  [] - Parameters = p = 1524746799 q = -1141239481 N = -101567991 NSquared = 617317457 lambdaN = 1904945994 bitLength = 3072
2016-08-10 18:23:27,204 INFO  general.PaillierTest  [] - encM1 = -1200692208 encM2 = -908028467
2016-08-10 18:23:27,323 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:23:27,382 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1486961128 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:24:32,157 INFO  encryption.Paillier  [] - Parameters = p = 330895119 q = -462530415 N = -1653559425 NSquared = -848371455 lambdaN = -760962064 bitLength = 6899
2016-08-10 18:24:33,427 INFO  general.PaillierTest  [] - encM1 = -1045510526 encM2 = 2029033919
2016-08-10 18:24:34,670 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:24:35,312 INFO  general.PaillierTest  [] - encM1_times_encM2 = 426264363 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:24:35,312 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:24:35,312 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:24:35,315 INFO  encryption.Paillier  [] - testBit false
 N = 10011000110000001100101111000101010011010011000011010110011111001010111010001000001101001111011111000011001010101101000010001000000010011000111000101101110001011000101011001011011110101000110001010011
2016-08-10 18:24:35,317 INFO  encryption.Paillier  [] - testBit false
 N = 11001101101000110010101010110000000011100100101001000001101000111101111011110011001000110110011000001000101001001111100000111101100000001100000101011111011100101110110101100011011110111000110011010111
2016-08-10 18:24:35,319 INFO  encryption.Paillier  [] - testBit true
 N = 10101100111100100101011101000001111011011000101001110011100010001110001111100010100101000011110101101111111111101110011100000010111011010110111101110111000010111000111011100101100110110000001101111111
2016-08-10 18:24:35,319 INFO  encryption.Paillier  [] - Parameters = p = -1210963155 q = 1498211547 N = -442825857 NSquared = 1909864705 lambdaN = 1782446524 bitLength = 201
2016-08-10 18:24:35,319 INFO  general.PaillierTest  [] - encM1 = 304765381 encM2 = -1893589908
2016-08-10 18:24:35,319 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:24:35,320 INFO  general.PaillierTest  [] - encM1_times_encM2 = 776068106 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:24:35,548 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:24:39,558 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:24:39,561 INFO  encryption.Paillier  [] - Parameters = p = -486944845 q = 251419747 N = -881613255 NSquared = 690223281 lambdaN = 1824439570 bitLength = 3072
2016-08-10 18:24:39,693 INFO  general.PaillierTest  [] - encM1 = 1249863384 encM2 = -756750498
2016-08-10 18:24:39,810 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:24:39,868 INFO  general.PaillierTest  [] - encM1_times_encM2 = -942520899 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:24:42,081 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:24:42,421 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:24:43,738 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:24:44,638 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:24:45,634 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:24:48,578 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:24:51,546 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:24:55,161 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:24:55,164 INFO  encryption.Paillier  [] - Parameters = p = -1710681345 q = -2093388911 N = -1042589841 NSquared = 331784737 lambdaN = -1687236912 bitLength = 3505
2016-08-10 18:24:55,338 INFO  general.PaillierTest  [] - encM1 = -2007009871 encM2 = 1414958576
2016-08-10 18:24:55,507 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:24:55,594 INFO  general.PaillierTest  [] - encM1_times_encM2 = -747686550 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:24:55,594 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 18:24:55,595 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 18:24:55,595 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 18:24:55,596 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-10 18:24:55,600 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 18:24:55,603 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 18:24:55,604 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-10 18:24:55,605 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 18:24:55,606 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-10 18:24:55,606 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:24:55,606 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-10 18:24:55,606 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-10 18:24:55,608 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-10 18:24:55,613 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-10 18:24:55,613 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-10 18:24:55,617 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-10 18:24:55,617 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-10 18:24:55,618 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-10 18:24:55,619 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-10 18:24:55,620 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-10 18:24:55,629 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7728327201527800888.xml
2016-08-10 18:24:55,696 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-10 18:24:55,697 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7728327201527800888.xml hdfs = false
2016-08-10 18:24:55,697 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7728327201527800888.xml
2016-08-10 18:24:55,701 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,704 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:24:55,705 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:24:55,705 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,706 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,706 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,706 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,706 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,707 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,707 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7728327201527800888.xml hdfs = false
2016-08-10 18:24:55,707 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7728327201527800888.xml
2016-08-10 18:24:55,710 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,711 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:24:55,711 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:24:55,711 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,712 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,712 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,712 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,712 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,713 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,713 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 18:24:55,714 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml
2016-08-10 18:24:55,714 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml
2016-08-10 18:24:55,715 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 18:24:55,716 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:24:55,716 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:55,716 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 18:24:55,716 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 18:24:55,717 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:24:55,718 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 18:24:55,719 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3641652737811941706.xml
2016-08-10 18:24:55,719 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3641652737811941706.xml
2016-08-10 18:24:55,721 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:24:55,721 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:55,721 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:24:55,723 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 18:24:55,723 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3341337014220148442.xml
2016-08-10 18:24:55,724 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3641652737811941706.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3341337014220148442.xml
2016-08-10 18:24:55,726 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:24:55,726 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:24:55,726 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:55,728 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 18:24:55,728 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4148997523079839278.xml
2016-08-10 18:24:55,729 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3641652737811941706.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3341337014220148442.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4148997523079839278.xml
2016-08-10 18:24:55,730 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:24:55,731 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:55,731 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:24:55,733 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 18:24:55,733 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5602314946452114505.xml
2016-08-10 18:24:55,733 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3641652737811941706.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3341337014220148442.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4148997523079839278.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5602314946452114505.xml
2016-08-10 18:24:55,735 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:24:55,735 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:55,736 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:24:55,739 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-10 18:24:55,739 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml
2016-08-10 18:24:55,740 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml
2016-08-10 18:24:55,743 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,743 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:24:55,743 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,744 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:24:55,744 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:24:55,744 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:24:55,744 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,745 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:55,745 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,745 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:24:55,745 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,746 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:24:55,746 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,746 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:24:55,746 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,746 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:24:55,747 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3641652737811941706.xml
2016-08-10 18:24:55,747 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3641652737811941706.xml
2016-08-10 18:24:55,749 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,750 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:24:55,750 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,750 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:24:55,751 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,751 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:24:55,751 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,751 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:24:55,751 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,752 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:24:55,752 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3341337014220148442.xml
2016-08-10 18:24:55,752 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3341337014220148442.xml
2016-08-10 18:24:55,754 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,754 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:24:55,755 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,755 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:24:55,755 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,755 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:24:55,756 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,756 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:55,756 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,756 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:24:55,756 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4148997523079839278.xml
2016-08-10 18:24:55,757 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4148997523079839278.xml
2016-08-10 18:24:55,759 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,759 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:24:55,760 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,760 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:24:55,760 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,760 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:24:55,760 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,761 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:55,761 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,761 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:24:55,761 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5602314946452114505.xml
2016-08-10 18:24:55,761 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5602314946452114505.xml
2016-08-10 18:24:55,764 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,765 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:24:55,765 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,765 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:24:55,765 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,766 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:24:55,766 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,766 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:55,766 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,766 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:24:55,767 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml
2016-08-10 18:24:55,767 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4592336621593017336.xml
2016-08-10 18:24:55,769 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,770 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:24:55,770 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,770 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:24:55,770 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:24:55,770 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:24:55,770 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,771 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:55,771 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,771 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:24:55,771 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,771 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:24:55,772 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,772 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:24:55,772 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,772 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:24:55,772 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3641652737811941706.xml
2016-08-10 18:24:55,773 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3641652737811941706.xml
2016-08-10 18:24:55,775 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,776 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:24:55,776 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,776 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:24:55,776 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,776 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:24:55,777 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,777 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:24:55,777 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,777 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:24:55,777 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3341337014220148442.xml
2016-08-10 18:24:55,778 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3341337014220148442.xml
2016-08-10 18:24:55,780 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,781 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:24:55,781 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,781 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:24:55,781 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,782 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:24:55,782 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,782 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:55,782 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,783 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:24:55,783 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4148997523079839278.xml
2016-08-10 18:24:55,783 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4148997523079839278.xml
2016-08-10 18:24:55,785 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,785 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:24:55,785 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,786 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:24:55,786 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,786 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:24:55,786 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,787 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:55,787 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,787 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:24:55,787 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5602314946452114505.xml
2016-08-10 18:24:55,787 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5602314946452114505.xml
2016-08-10 18:24:55,789 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:55,790 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:24:55,790 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:55,790 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:24:55,790 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:55,791 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:24:55,791 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,791 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:55,791 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:55,791 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:24:55,855 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,856 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,856 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,856 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,858 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,859 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 18:24:55,859 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,859 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 18:24:55,860 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,860 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 18:24:55,860 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,861 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 18:24:55,861 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,862 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 18:24:55,862 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,862 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 18:24:55,863 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,863 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 18:24:55,863 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,863 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 18:24:55,864 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,864 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,864 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,864 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,865 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,865 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 18:24:55,866 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,866 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 18:24:55,867 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,867 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,867 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,867 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,868 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,869 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 18:24:55,869 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,869 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 18:24:55,870 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,870 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 18:24:55,870 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,871 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 18:24:55,871 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,871 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 18:24:55,871 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,872 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 18:24:55,872 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,873 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 18:24:55,873 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,873 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 18:24:55,875 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,876 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,876 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,878 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,879 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,879 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 18:24:55,879 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,879 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 18:24:55,880 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,880 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,880 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,881 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,881 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,881 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 18:24:55,882 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,882 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 18:24:55,882 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,882 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 18:24:55,882 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,883 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 18:24:55,883 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,883 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 18:24:55,884 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,884 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 18:24:55,884 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,884 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 18:24:55,885 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,885 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 18:24:55,885 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,886 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,886 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,886 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,886 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,886 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 18:24:55,887 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,888 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 18:24:55,897 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 18:24:55,898 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 18:24:55,898 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 18:24:55,898 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 18:24:55,899 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 18:24:55,900 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 18:24:55,900 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 18:24:55,901 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 18:24:55,901 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 18:24:55,901 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 18:24:55,902 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 18:24:55,905 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 18:24:55,905 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 18:24:55,906 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 18:24:55,909 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 18:24:55,910 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 18:24:55,910 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 18:24:55,911 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 18:24:55,911 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 18:24:55,912 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 18:24:55,912 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 18:24:55,912 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 18:24:55,913 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 18:24:55,913 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,913 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,914 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,914 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,914 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,914 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,915 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 18:24:55,915 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 18:24:55,915 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:24:55,915 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,916 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,916 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,916 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,916 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,916 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,916 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,917 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 18:24:55,917 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 18:24:55,917 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,918 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,918 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,918 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,918 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,919 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,919 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 18:24:55,921 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 18:24:55,921 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 18:24:55,922 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 18:24:55,923 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,923 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:24:55,923 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 18:24:55,923 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,923 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:24:55,923 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 18:24:55,924 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,924 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:24:55,924 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 18:24:55,924 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:24:55,925 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 18:24:55,927 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:24:55,929 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 18:24:55,930 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 18:24:55,931 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 18:24:55,931 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 18:24:55,931 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 18:24:55,932 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 18:24:55,932 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 18:24:55,932 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 18:24:55,933 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,933 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,933 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,933 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,933 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,933 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,933 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 18:24:55,934 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 18:24:55,934 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:24:55,934 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,934 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,934 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,934 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,934 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,935 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,935 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,935 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 18:24:55,935 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 18:24:55,935 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,936 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,936 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,936 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,936 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,936 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,936 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 18:24:55,936 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 18:24:55,937 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 18:24:55,937 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 18:24:55,937 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,937 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:24:55,937 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 18:24:55,938 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,938 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:24:55,938 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 18:24:55,938 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,938 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:24:55,938 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 18:24:55,938 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:24:55,939 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 18:24:55,939 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:24:55,939 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 18:24:55,939 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:24:55,940 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:24:55,940 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,940 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:24:55,940 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,940 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:24:55,940 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,941 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:24:55,941 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:24:55,941 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 18:24:55,941 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:24:55,942 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:24:55,942 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,942 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:24:55,942 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,942 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:24:55,943 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,943 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:24:55,943 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 18:24:55,944 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 18:24:55,944 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 18:24:55,944 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 18:24:55,945 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 18:24:55,945 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 18:24:55,945 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 18:24:55,945 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 18:24:55,946 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,946 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,946 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,946 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,946 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,946 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,947 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 18:24:55,947 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 18:24:55,947 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:24:55,947 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,948 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,948 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,948 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,948 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,948 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,948 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,949 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 18:24:55,949 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 18:24:55,949 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,949 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,950 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,950 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,950 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:24:55,950 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,950 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 18:24:55,950 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 18:24:55,951 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 18:24:55,951 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 18:24:55,951 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,951 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:24:55,951 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 18:24:55,952 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,952 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:24:55,952 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 18:24:55,952 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,952 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:24:55,953 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 18:24:55,953 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:24:55,954 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 18:24:55,954 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:24:55,954 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 18:24:55,955 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:24:55,955 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:24:55,955 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,955 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:24:55,956 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,956 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:24:55,956 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,956 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:24:55,956 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:24:55,956 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 18:24:55,956 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:24:55,957 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:24:55,957 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,957 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:24:55,958 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,958 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:24:55,958 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:24:55,958 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:24:55,959 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,960 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,960 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,961 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,961 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,962 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,962 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,962 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,963 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,966 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,966 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,967 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,968 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,969 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,969 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,969 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,970 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,970 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,970 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,971 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,971 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,972 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,972 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,972 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,973 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,974 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,974 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,974 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,975 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,975 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,977 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,978 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,979 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,979 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,979 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,980 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,980 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,980 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,981 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,981 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,982 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,982 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,982 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,982 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:24:55,984 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-10 18:24:55,985 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-10 18:24:55,987 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-10 18:24:55,989 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-10 18:24:55,996 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner2722253187216986909.xml
2016-08-10 18:24:55,999 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner2722253187216986909.xml hdfs = false
2016-08-10 18:24:56,000 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner2722253187216986909.xml
2016-08-10 18:24:56,002 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,002 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:24:56,004 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2107487329672832652.xml
2016-08-10 18:24:56,008 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2107487329672832652.xml hdfs = false
2016-08-10 18:24:56,009 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2107487329672832652.xml
2016-08-10 18:24:56,011 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,012 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:24:56,012 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,012 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,012 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,014 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType8409040897144949182.xml
2016-08-10 18:24:56,019 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType8409040897144949182.xml hdfs = false
2016-08-10 18:24:56,019 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType8409040897144949182.xml
2016-08-10 18:24:56,021 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,022 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:24:56,033 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-10 18:24:56,033 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:24:56,034 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5817110524150800986.xml
2016-08-10 18:24:56,034 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5817110524150800986.xml
2016-08-10 18:24:56,036 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:24:56,036 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:24:56,037 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:24:56,038 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5817110524150800986.xml
2016-08-10 18:24:56,039 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5817110524150800986.xml
2016-08-10 18:24:56,040 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,041 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:24:56,041 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:24:56,041 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 18:24:56,041 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-10 18:24:56,042 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-10 18:24:56,042 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 18:24:56,043 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile2711350243378518237.tmp
2016-08-10 18:24:56,043 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8738613600400299108.xml
2016-08-10 18:24:56,046 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8738613600400299108.xml hdfs = false
2016-08-10 18:24:56,047 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8738613600400299108.xml
2016-08-10 18:24:56,049 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,049 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:24:56,049 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,049 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,050 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,050 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,051 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:24:56,051 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3934673333295524790.xml
2016-08-10 18:24:56,051 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3934673333295524790.xml
2016-08-10 18:24:56,052 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:24:56,052 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:24:56,052 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:24:56,053 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 18:24:56,054 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3934673333295524790.xml
2016-08-10 18:24:56,054 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3934673333295524790.xml
2016-08-10 18:24:56,056 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,057 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:24:56,057 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:24:56,057 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 18:24:56,058 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,058 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-10 18:24:56,058 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,058 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-10 18:24:56,058 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,059 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-10 18:24:56,059 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-10 18:24:56,355 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-10 18:24:56,613 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-10 18:24:56,614 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-10 18:24:56,614 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3316726770661678973.xml
2016-08-10 18:24:56,617 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3316726770661678973.xml hdfs = false
2016-08-10 18:24:56,617 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3316726770661678973.xml
2016-08-10 18:24:56,620 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,620 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:24:56,620 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,620 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,620 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,621 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,621 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:24:56,621 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7003623373570428313.xml
2016-08-10 18:24:56,621 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7003623373570428313.xml
2016-08-10 18:24:56,623 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:24:56,623 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:24:56,623 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:24:56,623 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 18:24:56,625 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7003623373570428313.xml
2016-08-10 18:24:56,625 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7003623373570428313.xml
2016-08-10 18:24:56,627 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,627 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:24:56,627 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:24:56,628 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 18:24:56,628 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-10 18:24:56,629 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1708256768150423072.xml
2016-08-10 18:24:56,632 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1708256768150423072.xml hdfs = false
2016-08-10 18:24:56,633 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1708256768150423072.xml
2016-08-10 18:24:56,635 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,635 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:24:56,635 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,636 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,636 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,636 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,636 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:24:56,636 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile919940205988189378.xml
2016-08-10 18:24:56,637 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile919940205988189378.xml
2016-08-10 18:24:56,638 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:24:56,638 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:24:56,638 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:24:56,638 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 18:24:56,640 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile919940205988189378.xml
2016-08-10 18:24:56,641 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile919940205988189378.xml
2016-08-10 18:24:56,642 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,643 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:24:56,643 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:24:56,643 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 18:24:56,643 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-10 18:24:56,890 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 18:24:56,890 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile3546330004448828884.tmp
2016-08-10 18:24:56,890 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile3546330004448828884.tmp
2016-08-10 18:24:56,891 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8737769617398504582.xml
2016-08-10 18:24:56,894 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8737769617398504582.xml hdfs = false
2016-08-10 18:24:56,894 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8737769617398504582.xml
2016-08-10 18:24:56,896 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,896 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:24:56,897 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:24:56,897 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,897 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,897 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,898 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,898 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,898 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,898 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 18:24:56,898 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file205918203640305936.xml
2016-08-10 18:24:56,899 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file205918203640305936.xml
2016-08-10 18:24:56,900 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 18:24:56,900 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:24:56,900 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:56,900 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 18:24:56,901 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 18:24:56,901 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:24:56,901 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 18:24:56,903 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 18:24:56,903 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file5617010204317366745.xml
2016-08-10 18:24:56,904 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file205918203640305936.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file5617010204317366745.xml
2016-08-10 18:24:56,907 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:24:56,907 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:56,907 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:24:56,907 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 18:24:56,909 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 18:24:56,909 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file578777724831988378.xml
2016-08-10 18:24:56,910 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file205918203640305936.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file5617010204317366745.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file578777724831988378.xml
2016-08-10 18:24:56,914 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:24:56,914 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:24:56,914 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:56,914 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 18:24:56,915 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 18:24:56,916 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5413016509660880411.xml
2016-08-10 18:24:56,916 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file205918203640305936.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file5617010204317366745.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file578777724831988378.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5413016509660880411.xml
2016-08-10 18:24:56,917 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:24:56,918 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:56,918 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:24:56,918 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-10 18:24:56,918 INFO  utils.TestUtils    [] - filterName = ip
2016-08-10 18:24:56,920 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 18:24:56,920 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8999056793018721599.xml
2016-08-10 18:24:56,920 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file205918203640305936.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file5617010204317366745.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file578777724831988378.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5413016509660880411.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8999056793018721599.xml
2016-08-10 18:24:56,921 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:24:56,922 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:24:56,922 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:24:56,923 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file205918203640305936.xml
2016-08-10 18:24:56,923 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file205918203640305936.xml
2016-08-10 18:24:56,925 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,925 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:24:56,926 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:56,926 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:24:56,926 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:24:56,926 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:24:56,926 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,926 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:56,926 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,927 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:24:56,927 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,927 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:24:56,927 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:56,927 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:24:56,927 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,927 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:24:56,928 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:24:56,964 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file5617010204317366745.xml
2016-08-10 18:24:56,965 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file5617010204317366745.xml
2016-08-10 18:24:56,966 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:56,967 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:24:56,967 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:56,967 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:24:56,967 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,967 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:24:56,968 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,968 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:24:56,968 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:56,968 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:24:56,968 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:24:56,999 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file578777724831988378.xml
2016-08-10 18:24:57,000 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file578777724831988378.xml
2016-08-10 18:24:57,001 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:57,001 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:24:57,002 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:57,002 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:24:57,002 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:57,002 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:24:57,002 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:57,002 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:57,003 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:57,003 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:24:57,003 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:24:57,031 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5413016509660880411.xml
2016-08-10 18:24:57,032 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5413016509660880411.xml
2016-08-10 18:24:57,033 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:57,033 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:24:57,033 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:57,033 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:24:57,034 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:57,034 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:24:57,034 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:57,034 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:57,035 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:57,035 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:24:57,035 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-10 18:24:57,035 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-10 18:24:57,063 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8999056793018721599.xml
2016-08-10 18:24:57,063 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8999056793018721599.xml
2016-08-10 18:24:57,065 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:24:57,065 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:24:57,065 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:24:57,065 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:24:57,065 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:24:57,066 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:24:57,066 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:57,066 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:24:57,066 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:24:57,066 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:24:57,068 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:24:57,070 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:24:57,071 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8796141443553205507.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7206109557896422586.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7169585768902598096.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4307756146755551897.txt
2016-08-10 18:24:57,072 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:24:57,081 INFO  encryption.Paillier  [] - Parameters = p = -18890299 q = -461239521 N = 1417014747 NSquared = -13813415 lambdaN = 948572284 bitLength = 384
2016-08-10 18:24:57,081 INFO  encryption.Paillier  [] - Parameters = p = -18890299 q = -461239521 N = 1417014747 NSquared = -13813415 lambdaN = 948572284 bitLength = 384
2016-08-10 18:24:57,082 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:24:58,124 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:24:58,126 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:24:58,363 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:24:58,479 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:24:58,479 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:24:58,483 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:24:58,487 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:24:58,488 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:24:58,491 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:24:58,494 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:24:58,496 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:24:58,505 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:24:58,508 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:24:58,512 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:24:58,512 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:24:58,520 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:24:58,520 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:24:58,648 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:24:58,660 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:24:58,660 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:24:58,663 INFO  utils.BaseTests    [] - results:
2016-08-10 18:24:58,663 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:24:58,663 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:24:58,664 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:24:58,664 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:24:58,664 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:24:58,664 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:24:58,664 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:24:58,665 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:24:58,665 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:24:58,666 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:24:58,666 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:24:58,666 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:24:58,666 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:24:58,666 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:24:58,667 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:24:58,668 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:24:58,668 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 18:24:58,668 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:24:58,669 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2718853812818157014.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1884931048222843852.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3534840650090898005.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6806653518154849066.txt
2016-08-10 18:24:58,669 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:24:58,684 INFO  encryption.Paillier  [] - Parameters = p = -763833009 q = -1562223311 N = 2086438687 NSquared = 1838790081 lambdaN = -2127895696 bitLength = 384
2016-08-10 18:24:58,684 INFO  encryption.Paillier  [] - Parameters = p = -763833009 q = -1562223311 N = 2086438687 NSquared = 1838790081 lambdaN = -2127895696 bitLength = 384
2016-08-10 18:24:58,684 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:24:59,137 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:24:59,137 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:24:59,280 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:24:59,372 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:24:59,372 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:24:59,374 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 18:24:59,375 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 18:24:59,377 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 18:24:59,380 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 18:24:59,381 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 18:24:59,383 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 18:24:59,385 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:24:59,387 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:24:59,389 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:24:59,389 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:24:59,391 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:24:59,391 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:24:59,457 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:24:59,458 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:24:59,459 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:24:59,460 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:24:59,461 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:24:59,461 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:24:59,462 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:24:59,462 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 18:24:59,462 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:24:59,462 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:24:59,462 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:24:59,463 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 18:24:59,463 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 18:24:59,463 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:24:59,463 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier134739040259642053.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8762777041595220076.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8896107902199372050.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8404661609346583562.txt
2016-08-10 18:24:59,463 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:24:59,468 INFO  encryption.Paillier  [] - Parameters = p = 1591602743 q = -1021882983 N = -1086658081 NSquared = -1867272127 lambdaN = 1319294728 bitLength = 384
2016-08-10 18:24:59,468 INFO  encryption.Paillier  [] - Parameters = p = 1591602743 q = -1021882983 N = -1086658081 NSquared = -1867272127 lambdaN = 1319294728 bitLength = 384
2016-08-10 18:24:59,468 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:24:59,871 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:24:59,872 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:24:59,984 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:00,037 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:00,037 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 18:25:00,039 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:25:00,041 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 18:25:00,042 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 18:25:00,044 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:25:00,045 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:25:00,047 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 18:25:00,049 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:25:00,051 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:25:00,052 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:00,052 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:00,053 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:00,054 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:00,119 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:00,119 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:00,120 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:00,121 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:00,121 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:00,123 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:25:00,123 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:25:00,123 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:25:00,123 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 18:25:00,124 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 18:25:00,124 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 18:25:00,124 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 18:25:00,125 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 18:25:00,125 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:25:00,125 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4911193156997629815.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7033954703753461362.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4532079375369565388.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2094938061707541432.txt
2016-08-10 18:25:00,125 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:00,131 INFO  encryption.Paillier  [] - Parameters = p = -734878567 q = 1387449699 N = 298200107 NSquared = 270716729 lambdaN = 1970298136 bitLength = 384
2016-08-10 18:25:00,131 INFO  encryption.Paillier  [] - Parameters = p = -734878567 q = 1387449699 N = 298200107 NSquared = 270716729 lambdaN = 1970298136 bitLength = 384
2016-08-10 18:25:00,132 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:25:00,521 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:25:00,521 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:25:00,635 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:00,688 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:00,688 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:00,689 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:00,689 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:00,690 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:00,690 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:00,745 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:00,746 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:00,746 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:00,746 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:00,747 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:00,747 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:00,748 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 18:25:00,748 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 18:25:00,748 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:25:00,748 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:25:00,749 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2937729099387909035.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query809261452568633295.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5874502235941876997.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4352085513918820234.txt
2016-08-10 18:25:00,749 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:00,758 INFO  encryption.Paillier  [] - Parameters = p = -1935539691 q = 1742416137 N = 519991229 NSquared = 936472969 lambdaN = 178278696 bitLength = 384
2016-08-10 18:25:00,758 INFO  encryption.Paillier  [] - Parameters = p = -1935539691 q = 1742416137 N = 519991229 NSquared = 936472969 lambdaN = 178278696 bitLength = 384
2016-08-10 18:25:00,758 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:25:01,569 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:25:01,569 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:25:01,682 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:01,737 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:01,737 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:25:01,738 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:01,740 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:01,741 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:01,743 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:01,744 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:01,745 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:25:01,747 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:25:01,748 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:25:01,750 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:01,750 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:01,753 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:01,753 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:01,832 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:01,838 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:01,838 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:01,839 INFO  utils.BaseTests    [] - results:
2016-08-10 18:25:01,840 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:25:01,840 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:25:01,840 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:01,840 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:01,840 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:25:01,840 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:01,841 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:01,841 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:25:01,841 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:25:01,841 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:01,841 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:01,841 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:25:01,841 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:01,842 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:01,842 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:25:01,842 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:25:01,843 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:25:01,843 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:25:01,843 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4725030132283120988.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2420920361549926855.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5767929760441631736.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile103263064949547971.txt
2016-08-10 18:25:01,843 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:01,852 INFO  encryption.Paillier  [] - Parameters = p = 1580216297 q = 1839239901 N = -242467291 NSquared = -1316097703 lambdaN = -1686334728 bitLength = 384
2016-08-10 18:25:01,852 INFO  encryption.Paillier  [] - Parameters = p = 1580216297 q = 1839239901 N = -242467291 NSquared = -1316097703 lambdaN = -1686334728 bitLength = 384
2016-08-10 18:25:01,852 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:25:02,673 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:25:02,674 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:25:02,788 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:02,839 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:02,839 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:25:02,840 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:02,842 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:02,843 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:02,845 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:02,847 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:02,848 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:25:02,850 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:25:02,852 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:25:02,853 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:02,853 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:02,856 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:02,856 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:02,940 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:02,944 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:02,945 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:02,946 INFO  utils.BaseTests    [] - results:
2016-08-10 18:25:02,946 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:25:02,946 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:25:02,946 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:02,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:02,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:25:02,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:02,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:02,947 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:25:02,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:25:02,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:02,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:02,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:25:02,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:02,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:02,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:25:02,949 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:25:02,949 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:25:02,949 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:25:02,950 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5481328061500781920.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4812232695871988707.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4831669758764753986.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8991905891022825092.txt
2016-08-10 18:25:02,950 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:02,965 INFO  encryption.Paillier  [] - Parameters = p = 773168209 q = 1662950411 N = -894626949 NSquared = 1907981593 lambdaN = 482110864 bitLength = 384
2016-08-10 18:25:02,965 INFO  encryption.Paillier  [] - Parameters = p = 773168209 q = 1662950411 N = -894626949 NSquared = 1907981593 lambdaN = 482110864 bitLength = 384
2016-08-10 18:25:02,966 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:25:03,786 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:25:03,786 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:25:03,900 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:03,953 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:03,953 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:25:03,955 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:03,957 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:03,959 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:03,960 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:03,962 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:03,963 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:25:03,965 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:25:03,966 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:25:03,968 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:03,968 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:03,971 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:03,974 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:04,063 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:04,068 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:04,069 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:04,070 INFO  utils.BaseTests    [] - results:
2016-08-10 18:25:04,071 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:25:04,071 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:25:04,071 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:04,071 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:04,071 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:25:04,071 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:04,072 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:04,072 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:25:04,072 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:25:04,072 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:04,072 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:04,072 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:25:04,072 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:04,073 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:04,073 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:25:04,073 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:25:04,073 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:25:04,074 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:25:04,074 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier3524971935597570892.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4355124130440152008.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6343651303923682968.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5382082481846881609.txt
2016-08-10 18:25:04,074 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:04,081 INFO  encryption.Paillier  [] - Parameters = p = -1143826919 q = -259008565 N = 335742163 NSquared = 352929257 lambdaN = -924277928 bitLength = 384
2016-08-10 18:25:04,081 INFO  encryption.Paillier  [] - Parameters = p = -1143826919 q = -259008565 N = 335742163 NSquared = 352929257 lambdaN = -924277928 bitLength = 384
2016-08-10 18:25:04,081 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:25:04,908 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:25:04,909 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:25:05,016 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:05,069 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:05,069 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:25:05,070 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:05,072 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:05,074 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:05,075 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:05,076 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:05,079 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:25:05,081 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:25:05,082 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:25:05,083 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:05,083 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:05,086 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:05,086 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:05,164 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:05,173 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:05,174 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:05,176 INFO  utils.BaseTests    [] - results:
2016-08-10 18:25:05,176 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:25:05,176 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:25:05,176 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:05,177 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:05,177 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:25:05,177 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:05,177 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:05,177 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:25:05,177 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:25:05,178 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:05,178 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:05,178 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:25:05,178 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:05,178 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:05,179 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:25:05,179 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:25:05,179 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 18:25:05,179 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:25:05,180 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier467710358544001621.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4584048909672221463.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2779390976169138363.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4553817892869639787.txt
2016-08-10 18:25:05,180 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:05,190 INFO  encryption.Paillier  [] - Parameters = p = 1138789377 q = -1858171367 N = -1479263719 NSquared = -459843983 lambdaN = -1010615296 bitLength = 384
2016-08-10 18:25:05,190 INFO  encryption.Paillier  [] - Parameters = p = 1138789377 q = -1858171367 N = -1479263719 NSquared = -459843983 lambdaN = -1010615296 bitLength = 384
2016-08-10 18:25:05,190 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:25:05,615 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:25:05,616 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:25:05,726 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:05,779 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:05,779 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:25:05,780 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 18:25:05,781 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 18:25:05,782 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 18:25:05,784 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 18:25:05,785 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 18:25:05,786 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 18:25:05,787 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:25:05,788 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:25:05,789 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:05,789 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:05,790 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:05,790 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:05,850 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:05,851 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:05,852 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:05,852 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:05,853 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:25:05,853 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:25:05,853 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:25:05,853 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 18:25:05,854 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:25:05,854 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:25:05,854 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:25:05,854 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 18:25:05,854 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 18:25:05,854 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:25:05,855 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4617349317411855759.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4734456259762812012.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6989933603402022300.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2019065453297682743.txt
2016-08-10 18:25:05,855 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:05,863 INFO  encryption.Paillier  [] - Parameters = p = 1881733697 q = 1118134325 N = -1539756171 NSquared = 317074297 lambdaN = -1452043840 bitLength = 384
2016-08-10 18:25:05,863 INFO  encryption.Paillier  [] - Parameters = p = 1881733697 q = 1118134325 N = -1539756171 NSquared = 317074297 lambdaN = -1452043840 bitLength = 384
2016-08-10 18:25:05,863 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:25:06,261 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:25:06,262 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:25:06,372 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:06,426 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:06,427 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 18:25:06,428 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:25:06,428 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 18:25:06,429 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 18:25:06,430 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:25:06,431 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:25:06,431 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 18:25:06,432 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:25:06,433 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:25:06,434 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:06,434 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:06,435 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:06,435 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:06,494 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:06,494 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:06,495 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:06,496 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:06,496 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:06,497 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:25:06,497 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:25:06,497 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:25:06,497 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 18:25:06,497 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 18:25:06,497 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 18:25:06,498 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 18:25:06,498 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 18:25:06,498 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:25:06,498 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4818063167983561285.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3033600199114812965.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8149589925674735881.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1318635914005245416.txt
2016-08-10 18:25:06,499 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:06,506 INFO  encryption.Paillier  [] - Parameters = p = -1744637101 q = -861163225 N = -551521115 NSquared = -731516327 lambdaN = 1774035634 bitLength = 384
2016-08-10 18:25:06,506 INFO  encryption.Paillier  [] - Parameters = p = -1744637101 q = -861163225 N = -551521115 NSquared = -731516327 lambdaN = 1774035634 bitLength = 384
2016-08-10 18:25:06,506 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:25:06,890 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:25:06,890 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:25:07,001 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:07,053 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:07,053 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:07,054 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:07,054 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:07,055 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:07,055 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:07,106 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:07,107 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:07,107 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:07,107 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:25:07,108 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:07,108 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:07,109 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 18:25:07,109 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 18:25:07,109 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:25:07,109 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:25:07,109 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2119775763622366085.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7744571020234410848.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5568936758906913217.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1065719777659863545.txt
2016-08-10 18:25:07,110 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:07,114 INFO  encryption.Paillier  [] - Parameters = p = -1407000095 q = -56829393 N = 1876759119 NSquared = 531969121 lambdaN = 1670294304 bitLength = 384
2016-08-10 18:25:07,114 INFO  encryption.Paillier  [] - Parameters = p = -1407000095 q = -56829393 N = 1876759119 NSquared = 531969121 lambdaN = 1670294304 bitLength = 384
2016-08-10 18:25:07,114 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:25:07,960 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:25:07,961 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:25:07,961 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-10 18:25:08,073 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:25:08,124 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:25:08,124 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:25:08,126 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:08,127 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:08,129 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:08,133 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:08,134 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:25:08,136 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:25:08,139 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:25:08,141 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:25:08,142 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:25:08,142 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:25:08,145 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:25:08,145 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:25:08,226 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:25:08,230 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:25:08,230 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:25:08,232 INFO  utils.BaseTests    [] - results:
2016-08-10 18:25:08,232 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:25:08,232 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:25:08,233 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:08,234 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:25:08,234 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
