2016-07-31 16:04:36,627 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,636 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,638 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,639 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-07-31 16:04:36,639 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,639 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-07-31 16:04:36,639 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,640 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-07-31 16:04:36,640 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,640 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-07-31 16:04:36,640 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,641 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-07-31 16:04:36,641 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,641 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-07-31 16:04:36,642 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,643 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-07-31 16:04:36,643 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,643 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-07-31 16:04:36,644 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,644 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,644 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,644 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,645 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,646 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-07-31 16:04:36,646 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,646 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-07-31 16:04:36,646 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,647 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,647 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,647 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,647 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,648 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-07-31 16:04:36,648 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,648 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-07-31 16:04:36,648 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,648 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-07-31 16:04:36,649 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,649 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-07-31 16:04:36,649 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,650 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-07-31 16:04:36,650 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,650 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-07-31 16:04:36,650 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,651 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-07-31 16:04:36,651 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,651 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-07-31 16:04:36,651 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,652 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,652 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,652 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,652 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,652 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-07-31 16:04:36,653 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,653 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-07-31 16:04:36,653 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,653 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,653 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,654 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,654 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,654 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-07-31 16:04:36,654 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,654 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-07-31 16:04:36,655 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,655 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-07-31 16:04:36,655 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,655 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-07-31 16:04:36,656 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,656 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-07-31 16:04:36,656 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,656 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-07-31 16:04:36,657 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,657 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-07-31 16:04:36,657 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,657 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-07-31 16:04:36,658 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,658 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,658 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,659 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,659 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,660 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-07-31 16:04:36,660 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,660 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-07-31 16:04:36,665 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-07-31 16:04:36,666 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-07-31 16:04:36,666 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-07-31 16:04:36,667 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-07-31 16:04:36,667 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-07-31 16:04:36,667 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-07-31 16:04:36,667 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-07-31 16:04:36,668 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-07-31 16:04:36,668 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-07-31 16:04:36,668 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-07-31 16:04:36,669 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-07-31 16:04:36,669 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-07-31 16:04:36,669 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-07-31 16:04:36,669 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-07-31 16:04:36,670 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-07-31 16:04:36,670 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-07-31 16:04:36,670 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-07-31 16:04:36,671 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-07-31 16:04:36,671 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-07-31 16:04:36,671 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-07-31 16:04:36,671 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-07-31 16:04:36,672 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-07-31 16:04:36,672 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-07-31 16:04:36,672 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,672 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,672 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,672 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,673 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,673 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,673 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-07-31 16:04:36,673 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-07-31 16:04:36,673 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 16:04:36,674 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,674 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,674 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,674 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,674 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,674 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,674 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,675 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-07-31 16:04:36,675 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-07-31 16:04:36,675 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,675 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,675 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,675 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,675 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,675 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,676 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-07-31 16:04:36,676 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-07-31 16:04:36,676 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-07-31 16:04:36,676 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-07-31 16:04:36,676 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,677 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 16:04:36,677 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-07-31 16:04:36,677 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,677 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 16:04:36,677 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-07-31 16:04:36,677 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,677 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 16:04:36,677 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-07-31 16:04:36,677 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 16:04:36,678 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-07-31 16:04:36,678 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 16:04:36,679 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-07-31 16:04:36,679 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-07-31 16:04:36,679 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-07-31 16:04:36,679 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-07-31 16:04:36,679 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-07-31 16:04:36,679 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-07-31 16:04:36,680 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-07-31 16:04:36,680 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-07-31 16:04:36,680 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,680 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,680 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,680 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,680 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,680 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,681 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-07-31 16:04:36,681 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-07-31 16:04:36,681 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 16:04:36,681 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,681 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,681 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,682 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,682 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,682 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,682 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,682 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-07-31 16:04:36,682 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-07-31 16:04:36,682 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,682 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,683 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,683 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,683 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,683 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,683 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-07-31 16:04:36,683 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-07-31 16:04:36,683 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-07-31 16:04:36,683 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-07-31 16:04:36,684 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,684 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 16:04:36,684 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-07-31 16:04:36,684 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,684 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 16:04:36,684 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-07-31 16:04:36,685 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,685 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 16:04:36,685 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-07-31 16:04:36,685 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 16:04:36,685 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-07-31 16:04:36,685 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 16:04:36,685 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-07-31 16:04:36,686 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-07-31 16:04:36,686 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-07-31 16:04:36,686 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,686 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-07-31 16:04:36,686 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,686 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-07-31 16:04:36,686 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,687 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-07-31 16:04:36,687 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 16:04:36,687 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-07-31 16:04:36,687 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-07-31 16:04:36,687 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-07-31 16:04:36,687 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,687 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-07-31 16:04:36,688 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,688 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-07-31 16:04:36,688 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,688 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-07-31 16:04:36,688 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-07-31 16:04:36,688 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-07-31 16:04:36,688 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-07-31 16:04:36,689 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-07-31 16:04:36,689 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-07-31 16:04:36,689 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-07-31 16:04:36,689 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-07-31 16:04:36,690 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-07-31 16:04:36,690 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,690 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,690 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,690 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,691 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,691 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,691 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-07-31 16:04:36,691 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-07-31 16:04:36,692 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 16:04:36,692 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,692 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,692 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,692 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,692 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,692 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,693 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,693 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-07-31 16:04:36,693 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-07-31 16:04:36,693 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,694 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,694 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,694 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,694 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 16:04:36,694 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,694 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-07-31 16:04:36,695 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-07-31 16:04:36,695 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-07-31 16:04:36,695 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-07-31 16:04:36,695 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,695 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 16:04:36,695 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-07-31 16:04:36,696 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,696 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 16:04:36,696 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-07-31 16:04:36,696 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,696 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 16:04:36,696 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-07-31 16:04:36,697 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 16:04:36,697 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-07-31 16:04:36,697 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 16:04:36,697 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-07-31 16:04:36,698 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-07-31 16:04:36,698 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-07-31 16:04:36,698 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,698 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-07-31 16:04:36,698 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,699 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-07-31 16:04:36,699 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,699 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-07-31 16:04:36,699 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 16:04:36,699 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-07-31 16:04:36,699 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-07-31 16:04:36,700 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-07-31 16:04:36,700 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,700 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-07-31 16:04:36,700 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,700 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-07-31 16:04:36,700 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 16:04:36,701 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-07-31 16:04:36,701 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,702 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,702 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,702 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,703 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,703 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,703 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,703 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,704 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,704 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,704 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,704 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,706 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,706 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,706 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,706 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,707 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,707 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,707 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,707 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,708 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,708 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,708 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,708 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,709 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,709 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,710 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,710 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,711 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,712 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,712 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,712 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,712 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,713 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,713 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,713 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,713 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,714 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,714 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,714 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,715 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,715 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,715 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,715 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 16:04:36,716 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-07-31 16:04:36,717 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-07-31 16:04:36,718 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-07-31 16:04:36,719 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-07-31 16:04:36,721 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner1459194865794100086.xml
2016-07-31 16:04:36,724 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner1459194865794100086.xml hdfs = false
2016-07-31 16:04:36,724 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner1459194865794100086.xml
2016-07-31 16:04:36,726 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 16:04:36,726 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 16:04:36,727 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2830101429157015145.xml
2016-07-31 16:04:36,729 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2830101429157015145.xml hdfs = false
2016-07-31 16:04:36,729 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2830101429157015145.xml
2016-07-31 16:04:36,731 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 16:04:36,732 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 16:04:36,732 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:36,732 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:36,732 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 16:04:36,733 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType5700283596842294457.xml
2016-07-31 16:04:36,736 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType5700283596842294457.xml hdfs = false
2016-07-31 16:04:36,736 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType5700283596842294457.xml
2016-07-31 16:04:36,737 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 16:04:36,737 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 16:04:36,739 INFO  data.LoadDataSchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-07-31 16:04:36,739 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-07-31 16:04:36,739 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6521529895559156348.xml
2016-07-31 16:04:36,740 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6521529895559156348.xml
2016-07-31 16:04:36,741 INFO  utils.TestUtils    [] - elementName = elementName1
2016-07-31 16:04:36,741 INFO  utils.TestUtils    [] - elementName = elementName2
2016-07-31 16:04:36,741 INFO  utils.TestUtils    [] - elementName = elementName3
2016-07-31 16:04:36,743 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6521529895559156348.xml
2016-07-31 16:04:36,743 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6521529895559156348.xml
2016-07-31 16:04:36,745 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 16:04:36,745 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-07-31 16:04:36,746 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-07-31 16:04:36,746 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-07-31 16:04:36,746 INFO  data.LoadDataSchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-07-31 16:04:36,746 INFO  data.LoadDataSchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-07-31 16:04:36,746 INFO  utils.Inputs       [] - PIR stopList file being created
2016-07-31 16:04:36,747 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile5726627493178650701.tmp
2016-07-31 16:04:36,748 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7598718123188787027.xml
2016-07-31 16:04:36,750 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7598718123188787027.xml hdfs = false
2016-07-31 16:04:36,750 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7598718123188787027.xml
2016-07-31 16:04:36,752 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 16:04:36,752 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 16:04:36,752 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:36,752 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:36,752 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 16:04:36,753 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:36,753 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-07-31 16:04:36,754 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2938225924403230253.xml
2016-07-31 16:04:36,754 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2938225924403230253.xml
2016-07-31 16:04:36,755 INFO  utils.TestUtils    [] - elementName = elementName1
2016-07-31 16:04:36,755 INFO  utils.TestUtils    [] - elementName = elementName2
2016-07-31 16:04:36,755 INFO  utils.TestUtils    [] - elementName = elementName3
2016-07-31 16:04:36,755 INFO  utils.TestUtils    [] - filterName = elementName2
2016-07-31 16:04:36,756 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2938225924403230253.xml
2016-07-31 16:04:36,756 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2938225924403230253.xml
2016-07-31 16:04:36,758 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 16:04:36,758 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-07-31 16:04:36,758 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-07-31 16:04:36,758 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-07-31 16:04:36,758 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:36,758 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-07-31 16:04:36,758 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:36,759 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-07-31 16:04:36,759 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 16:04:36,759 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-07-31 16:04:36,759 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-07-31 16:04:36,965 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-07-31 16:04:37,169 INFO  data.LoadDataSchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-07-31 16:04:37,170 INFO  data.LoadDataSchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-07-31 16:04:37,170 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8370964400298521153.xml
2016-07-31 16:04:37,173 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8370964400298521153.xml hdfs = false
2016-07-31 16:04:37,173 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8370964400298521153.xml
2016-07-31 16:04:37,176 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 16:04:37,176 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 16:04:37,176 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:37,176 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:37,176 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 16:04:37,177 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:37,177 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-07-31 16:04:37,177 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3449204293201612395.xml
2016-07-31 16:04:37,177 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3449204293201612395.xml
2016-07-31 16:04:37,178 INFO  utils.TestUtils    [] - elementName = elementName1
2016-07-31 16:04:37,178 INFO  utils.TestUtils    [] - elementName = elementName2
2016-07-31 16:04:37,178 INFO  utils.TestUtils    [] - elementName = elementName3
2016-07-31 16:04:37,178 INFO  utils.TestUtils    [] - filterName = elementName2
2016-07-31 16:04:37,179 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3449204293201612395.xml
2016-07-31 16:04:37,180 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3449204293201612395.xml
2016-07-31 16:04:37,181 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 16:04:37,181 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-07-31 16:04:37,181 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-07-31 16:04:37,181 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-07-31 16:04:37,181 INFO  data.LoadDataSchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-07-31 16:04:37,182 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3029994411968200932.xml
2016-07-31 16:04:37,185 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3029994411968200932.xml hdfs = false
2016-07-31 16:04:37,185 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3029994411968200932.xml
2016-07-31 16:04:37,187 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 16:04:37,187 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 16:04:37,188 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:37,188 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:37,188 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 16:04:37,188 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 16:04:37,188 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-07-31 16:04:37,189 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1789360684455389701.xml
2016-07-31 16:04:37,189 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1789360684455389701.xml
2016-07-31 16:04:37,190 INFO  utils.TestUtils    [] - elementName = elementName1
2016-07-31 16:04:37,190 INFO  utils.TestUtils    [] - elementName = elementName2
2016-07-31 16:04:37,190 INFO  utils.TestUtils    [] - elementName = elementName3
2016-07-31 16:04:37,190 INFO  utils.TestUtils    [] - filterName = elementName2
2016-07-31 16:04:37,192 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1789360684455389701.xml
2016-07-31 16:04:37,192 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1789360684455389701.xml
2016-07-31 16:04:37,194 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 16:04:37,194 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-07-31 16:04:37,194 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-07-31 16:04:37,195 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-07-31 16:04:37,195 INFO  data.LoadDataSchemaTest  [] - Finished testFunkyFilterScenarios
2016-07-31 19:00:53,771 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-07-31 19:00:53,776 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-07-31 19:00:53,779 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-07-31 19:00:53,780 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-07-31 19:00:53,781 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-07-31 19:00:53,781 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-07-31 19:00:53,781 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-07-31 19:00:53,782 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-07-31 19:00:53,796 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-07-31 19:00:53,796 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-07-31 19:00:53,797 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-07-31 19:00:53,798 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-07-31 19:00:53,802 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-07-31 19:00:53,803 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-07-31 19:00:53,804 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-07-31 19:00:53,805 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-07-31 19:00:53,807 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-07-31 19:00:53,807 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-07-31 19:00:53,809 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-07-31 19:00:53,810 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-07-31 19:00:53,811 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-07-31 19:00:53,811 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-07-31 19:00:53,812 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-07-31 19:00:53,928 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-07-31 19:00:53,928 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-07-31 19:00:53,929 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-07-31 19:00:53,929 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-07-31 19:00:53,929 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-07-31 19:00:53,930 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-07-31 19:00:53,930 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-07-31 19:00:53,933 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-07-31 19:00:53,934 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-07-31 19:00:53,937 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-07-31 19:00:53,938 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-07-31 19:00:53,939 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-07-31 19:00:53,940 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-07-31 19:00:53,941 INFO  general.PaillierTest  [] - i = 0
2016-07-31 19:00:53,944 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-07-31 19:00:53,981 INFO  encryption.Paillier  [] - Parameters = p = 1296840243 q = -1912519223 N = -1146794741 NSquared = 2036178553 lambdaN = -265557880 bitLength = 201
2016-07-31 19:00:54,038 INFO  general.PaillierTest  [] - encM1 = 1618823079 encM2 = -1737785782
2016-07-31 19:00:54,038 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:00:54,039 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1865965186 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:00:54,724 INFO  encryption.Paillier  [] - Parameters = p = 1327648249 q = -2043656935 N = -301090223 NSquared = 265538977 lambdaN = 1125606632 bitLength = 3072
2016-07-31 19:00:54,847 INFO  general.PaillierTest  [] - encM1 = -484535594 encM2 = 1191962561
2016-07-31 19:00:54,955 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:00:55,009 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1395358876 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:01:26,863 INFO  encryption.Paillier  [] - Parameters = p = 238911599 q = -5220171 N = 317847163 NSquared = 1290182425 lambdaN = -421081156 bitLength = 6537
2016-07-31 19:01:27,962 INFO  general.PaillierTest  [] - encM1 = 757289650 encM2 = -202159372
2016-07-31 19:01:29,015 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:01:29,538 INFO  general.PaillierTest  [] - encM1_times_encM2 = -677191542 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:01:29,539 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-07-31 19:01:29,539 INFO  general.PaillierTest  [] - i = 0
2016-07-31 19:01:29,546 INFO  encryption.Paillier  [] - testBit false
 N = 10111011001010001101001000100111001100011100011101011110101100110101011011110001100110100001111110110101100111000100110101000001111001100010110111101101001101101110100110010011011111111111110111010101
2016-07-31 19:01:29,552 INFO  encryption.Paillier  [] - testBit false
 N = 11100011000000100110010100100100110101100001000110001110110101001001010101001001101100000110010001000011101000101001100110010111111100111011100011010111111101111111110110001010100010011000110010011011
2016-07-31 19:01:29,555 INFO  encryption.Paillier  [] - testBit false
 N = 10001110101110001011101000001101010010110101001101010110101011001100000110000100111010111000110001110001110001111101001000111111010011111110000100011101101010111010100101111010000101101110001001000001
2016-07-31 19:01:29,559 INFO  encryption.Paillier  [] - testBit false
 N = 10101001010110111110001100111011110001110110010010001011110101111100010101110111101000100011111110100100001010111011001010101010001111101001110010001100010011100110100001110100111000111100001111001101
2016-07-31 19:01:29,562 INFO  encryption.Paillier  [] - testBit false
 N = 11001001011101011000000001110111100010101001000100100101001010111010110110011000110110001000101110010110011111101110011110100101111011110000100111100000111010001111110011001011111111001111011100001011
2016-07-31 19:01:29,565 INFO  encryption.Paillier  [] - testBit true
 N = 11100110011010101101010101101010010100100000000010011110010011100111001001011010110110101001100100111110001111101000001010011010010111001010000000111110101111011100100101101001101110000001000000110011
2016-07-31 19:01:29,565 INFO  encryption.Paillier  [] - Parameters = p = -1510674425 q = 1345682293 N = 1773670451 NSquared = 542534185 lambdaN = -1178152356 bitLength = 201
2016-07-31 19:01:29,566 INFO  general.PaillierTest  [] - encM1 = 1082263773 encM2 = -125910686
2016-07-31 19:01:29,566 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:01:29,566 INFO  general.PaillierTest  [] - encM1_times_encM2 = 168604880 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:01:30,169 INFO  encryption.Paillier  [] - testBit true

2016-07-31 19:01:30,172 INFO  encryption.Paillier  [] - Parameters = p = 1344969827 q = 65441223 N = 1932793845 NSquared = -607784839 lambdaN = -1886292250 bitLength = 3072
2016-07-31 19:01:30,288 INFO  general.PaillierTest  [] - encM1 = 736134801 encM2 = 2004940240
2016-07-31 19:01:30,412 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:01:30,472 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1596312698 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:02:18,726 INFO  encryption.Paillier  [] - testBit true

2016-07-31 19:02:18,736 INFO  encryption.Paillier  [] - Parameters = p = 568139869 q = 1293273427 N = 968590119 NSquared = 1009446897 lambdaN = 567024020 bitLength = 6334
2016-07-31 19:02:19,697 INFO  general.PaillierTest  [] - encM1 = 114352984 encM2 = 1961167506
2016-07-31 19:02:20,650 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:02:21,135 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1437053038 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:02:21,135 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-07-31 19:02:21,135 INFO  general.PaillierTest  [] - i = 0
2016-07-31 19:02:21,138 INFO  encryption.Paillier  [] - Parameters = p = 846826099 q = 228459307 N = 822319697 NSquared = -51671647 lambdaN = -1010591226 bitLength = 201
2016-07-31 19:02:21,139 INFO  general.PaillierTest  [] - encM1 = 176531410 encM2 = 1284200777
2016-07-31 19:02:21,139 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:02:21,139 INFO  general.PaillierTest  [] - encM1_times_encM2 = 909877402 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:02:23,867 INFO  encryption.Paillier  [] - Parameters = p = 494706985 q = 695890153 N = -1149591983 NSquared = -1659103839 lambdaN = -1366265464 bitLength = 3072
2016-07-31 19:02:23,983 INFO  general.PaillierTest  [] - encM1 = 400696450 encM2 = -496936258
2016-07-31 19:02:24,102 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:02:24,158 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1464364840 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:02:36,028 INFO  encryption.Paillier  [] - Parameters = p = -2129400507 q = 680497689 N = 1238271421 NSquared = 1275719049 lambdaN = 1745535384 bitLength = 5558
2016-07-31 19:02:36,701 INFO  general.PaillierTest  [] - encM1 = 1476936163 encM2 = -1706121616
2016-07-31 19:02:37,459 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:02:37,803 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1441195905 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:02:37,805 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-07-31 19:02:37,805 INFO  general.PaillierTest  [] - i = 0
2016-07-31 19:02:37,809 INFO  encryption.Paillier  [] - testBit false
 N = 11000101110001010000110111111000110001111100111001110001111011111001101000110010111110100101001011101100110101111101101010101101010001000100000011000000111011101101000100010010100111000110100101000011
2016-07-31 19:02:37,838 INFO  encryption.Paillier  [] - testBit false
 N = 10111000100000010110001100001010100001010110010110101011010010010011100101101101011100111100000011011110111111111110101101100001011100111110101001011111010101111000000100011111011011011101010110001011
2016-07-31 19:02:37,842 INFO  encryption.Paillier  [] - testBit true
 N = 10100010001011000100011110011110110110000101001101010110001100001111100100110101001001001110101001101110101000011010100111011001110011111111010101111100011101001001001100100101010100111101011001111001
2016-07-31 19:02:37,845 INFO  encryption.Paillier  [] - Parameters = p = -1188475707 q = 1099212325 N = 626251385 NSquared = -1071348431 lambdaN = 178878692 bitLength = 201
2016-07-31 19:02:37,846 INFO  general.PaillierTest  [] - encM1 = 476199222 encM2 = 905255971
2016-07-31 19:02:37,847 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:02:37,849 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1605807578 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:02:43,437 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:02:44,758 INFO  encryption.Paillier  [] - testBit true

2016-07-31 19:02:44,761 INFO  encryption.Paillier  [] - Parameters = p = 580118343 q = 422062681 N = 1534397871 NSquared = -323928671 lambdaN = 912215144 bitLength = 3072
2016-07-31 19:02:44,879 INFO  general.PaillierTest  [] - encM1 = -1010277991 encM2 = -1209746251
2016-07-31 19:02:44,998 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:02:45,053 INFO  general.PaillierTest  [] - encM1_times_encM2 = -111683710 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:02:46,666 INFO  encryption.Paillier  [] - testBit true

2016-07-31 19:02:46,679 INFO  encryption.Paillier  [] - Parameters = p = -1509629579 q = -265357561 N = 1924140339 NSquared = -1831978967 lambdaN = -297919908 bitLength = 3654
2016-07-31 19:02:46,926 INFO  general.PaillierTest  [] - encM1 = 731709224 encM2 = 834174056
2016-07-31 19:02:47,119 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:02:47,217 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1725696995 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:02:47,217 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-07-31 19:02:47,218 INFO  general.PaillierTest  [] - i = 0
2016-07-31 19:02:47,220 INFO  encryption.Paillier  [] - Parameters = p = 1088902679 q = -751495165 N = 982198853 NSquared = 837334681 lambdaN = -1825087978 bitLength = 201
2016-07-31 19:02:47,220 INFO  general.PaillierTest  [] - encM1 = 368494825 encM2 = -1265817301
2016-07-31 19:02:47,221 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:02:47,221 INFO  general.PaillierTest  [] - encM1_times_encM2 = 266513836 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:02:48,870 INFO  encryption.Paillier  [] - Parameters = p = 310100339 q = 139909669 N = -1556028513 NSquared = 333667521 lambdaN = 1144464388 bitLength = 3072
2016-07-31 19:02:48,985 INFO  general.PaillierTest  [] - encM1 = 2059173476 encM2 = -1519198371
2016-07-31 19:02:49,110 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:02:49,166 INFO  general.PaillierTest  [] - encM1_times_encM2 = -460841928 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:03:02,714 INFO  encryption.Paillier  [] - Parameters = p = 135349099 q = 1548237743 N = -395395291 NSquared = -494650535 lambdaN = -498796134 bitLength = 6080
2016-07-31 19:03:03,575 INFO  general.PaillierTest  [] - encM1 = -577780586 encM2 = -686299177
2016-07-31 19:03:04,461 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:03:04,890 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1463175836 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:03:04,890 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-07-31 19:03:04,890 INFO  general.PaillierTest  [] - i = 0
2016-07-31 19:03:04,893 INFO  encryption.Paillier  [] - testBit false
 N = 10011010111001001010101010010000101110101010010001001110111010100011011110110110010100000111010001010010010010100011101001101011100001001111010001101011010001110001011000001110000001101101101110000011
2016-07-31 19:03:04,896 INFO  encryption.Paillier  [] - testBit false
 N = 11001110010110010011111011000110111100101010100011011010000011101001000100000001101101010001110000011111000010000110001011011010100011000111001101010110001010101010000000010111101110000001111010010011
2016-07-31 19:03:04,900 INFO  encryption.Paillier  [] - testBit false
 N = 11000010111001000011111100000000011000111010001000110001111011001101101011101100101100100111100110110111011110001011001110111111101110101011011001100001111101000001100100001100011011110100011101000101
2016-07-31 19:03:04,907 INFO  encryption.Paillier  [] - testBit false
 N = 10101011101001011001010110010101000100100111111000000001111100111011100001000001100101100100010010010110011100001111111101110001110001111100111100011101110100011000111110111101110011101011110111001111
2016-07-31 19:03:04,909 INFO  encryption.Paillier  [] - testBit false
 N = 11001101000111101010111001111001011001000011011110111010001010000001011110011111100011001101001100000111010111101100010000110000111011110000110010101010010100000110101101011100000000000000101100000111
2016-07-31 19:03:04,914 INFO  encryption.Paillier  [] - testBit true
 N = 10001010100101011101011110011000110100011000110101001100111000100101101000011111000011000100100101011110100000111011001111111100110000010110011010111011011101010100111110000000011010110100111101100111
2016-07-31 19:03:04,915 INFO  encryption.Paillier  [] - Parameters = p = 12999995 q = -1129602107 N = -2140450969 NSquared = 2025503601 lambdaN = -511924428 bitLength = 201
2016-07-31 19:03:04,915 INFO  general.PaillierTest  [] - encM1 = -866172469 encM2 = 1654952862
2016-07-31 19:03:04,915 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:03:04,915 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1357529283 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:03:05,292 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:07,018 INFO  encryption.Paillier  [] - testBit false
 N = 101001000010000101101001011110111011001101011010111000010110111101000111110011001111001101000011011111011110011110111111010101000001111011110101111101111100001110111110111000111000111000110000101110010100001101000010100101001011111111110110111001001010001111011000011001111011010101110101110000000100101100110011101001111010101111000010000111100101100110001100001111011000011000011111010100110011101111010010111101011011001110000110001011100011000111000001011001010111100110111011000011111010111110101100100010011001000110100100000101011011011111011111111100111010001000011001000110110101100011001100010000001011000100101001111000000010101010101000100110000101001110001101010001011100111001111010110001011011101000010011100110001001110111010000101100011110000100000011001000000011011110111101001110000110111001110101000111101100011001111000010111100010001001100000101010010101101101001011010101011101000101010100001000010101011111101010110110100101110001010111100000111010001001010110110100111001111111001011010010100001101011101110100110000110101011101010011001010001000001000001001101001001110001011101101110100001001000010110111110100110101110110010101111100001100100101010111011101000101100000000010101000000000001010001101011111010000111011111110000110000001110010111010001100001110101100101000110101111100000000101011000000011111001101111000010011011010011011111110001110011100101010001101110011011110111111111110111010011000110000101100110111100010110100010001110100101011100010000010100000011101101001001110101101111011110101100111001010010001001100101100110011010110011110000000011000100000100101010111001001110100011110000111110101111011011011101101011110010010111011110001111000111000100000001100011101010000000100011001111011010101100100101100110010000110101101110000010110001110101100011101000110101111011100110111001011010100100101110001101010001100111001000010010110110010001110101001001011110110111101110111011000001111000011101000110101111000001011111000001000000011000110011011010100010101000011111000000001101011100110111100100110000111110000110010110101011001001110110011001100101101010100111111101001001001010101100011000101111100110010110000101011101010010110101011101001100110010110100011100010110011110001111000111111101010101010101011101011100100101011011100111000100010010100111100100010011110110110101101101011001111000001001001001010010011101101010010111111100010000001100100101110001100000000100110101110001001111111110110010000111010011001111101101000111101101101000011100101111010001010000111110110111011111101110010100110011001011110011111001001000001111101010101101111001110111000001010011000001111101110000100010010001001111111110101110111011010100100010111100011001100100100010111000001000011101101011110010100111011001001100110011101000111111011100001000010101101010101101001101100111000011010110001001110001000110000000000000100000001010100000100000000010110000101000010001011001011010101000110000101001101101001101000011111101101110001010111010001000011001001111111010000110011101100000011000000111011110011010011111100010011010010011
2016-07-31 19:03:08,764 INFO  encryption.Paillier  [] - testBit true

2016-07-31 19:03:08,766 INFO  encryption.Paillier  [] - Parameters = p = 1998345689 q = 83011363 N = 1342327723 NSquared = 621388857 lambdaN = -369514664 bitLength = 3072
2016-07-31 19:03:08,885 INFO  general.PaillierTest  [] - encM1 = 1503548319 encM2 = -1768048876
2016-07-31 19:03:09,011 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:03:09,094 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1215376725 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:03:12,784 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:16,563 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:18,801 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:22,540 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:25,504 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:27,070 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:29,427 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:32,760 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:34,246 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:03:36,357 INFO  encryption.Paillier  [] - testBit true

2016-07-31 19:03:36,359 INFO  encryption.Paillier  [] - Parameters = p = -17443323 q = 276242875 N = -1166214489 NSquared = 1932695793 lambdaN = -712507020 bitLength = 3584
2016-07-31 19:03:36,543 INFO  general.PaillierTest  [] - encM1 = 972351807 encM2 = -1119437383
2016-07-31 19:03:36,764 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:03:36,860 INFO  general.PaillierTest  [] - encM1_times_encM2 = -726065295 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:03:36,860 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-07-31 19:03:36,860 INFO  general.PaillierTest  [] - i = 0
2016-07-31 19:03:36,863 INFO  encryption.Paillier  [] - Parameters = p = -1460848575 q = -1320056015 N = -528216207 NSquared = -1384747039 lambdaN = -1201384256 bitLength = 201
2016-07-31 19:03:36,863 INFO  general.PaillierTest  [] - encM1 = 183706191 encM2 = -1723482038
2016-07-31 19:03:36,864 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:03:36,864 INFO  general.PaillierTest  [] - encM1_times_encM2 = 471468211 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:03:38,346 INFO  encryption.Paillier  [] - Parameters = p = 698502349 q = -329610841 N = 773819 NSquared = 1795390617 lambdaN = -184058844 bitLength = 3072
2016-07-31 19:03:38,470 INFO  general.PaillierTest  [] - encM1 = -846566964 encM2 = 271992916
2016-07-31 19:03:38,582 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:03:38,638 INFO  general.PaillierTest  [] - encM1_times_encM2 = 282597779 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:03:49,814 INFO  encryption.Paillier  [] - Parameters = p = 1510013545 q = 2125251711 N = 1388355095 NSquared = 1075865105 lambdaN = 1024028568 bitLength = 6354
2016-07-31 19:03:50,832 INFO  general.PaillierTest  [] - encM1 = 2125455760 encM2 = 539918214
2016-07-31 19:03:51,814 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:03:52,323 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1473290176 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:03:52,324 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-07-31 19:03:52,324 INFO  general.PaillierTest  [] - i = 0
2016-07-31 19:03:52,327 INFO  encryption.Paillier  [] - testBit true
 N = 10101000000011101001000000001100110100001001100000011111001011001100001001111010000011000111010011110010111110100101011101010010110000110011101010110001100111001000010000111110001111101101110010111011
2016-07-31 19:03:52,327 INFO  encryption.Paillier  [] - Parameters = p = 1688587999 q = 1697339813 N = 1044307131 NSquared = 1021702297 lambdaN = -1170810340 bitLength = 201
2016-07-31 19:03:52,327 INFO  general.PaillierTest  [] - encM1 = -987369349 encM2 = -958864794
2016-07-31 19:03:52,328 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:03:52,328 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1051866083 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:03:54,214 INFO  encryption.Paillier  [] - testBit true

2016-07-31 19:03:54,219 INFO  encryption.Paillier  [] - Parameters = p = -1972352411 q = 1756663787 N = 631682487 NSquared = 273696977 lambdaN = 423685556 bitLength = 3072
2016-07-31 19:03:54,446 INFO  general.PaillierTest  [] - encM1 = 2123211458 encM2 = -436696930
2016-07-31 19:03:54,563 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:03:54,621 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1836721133 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:04:14,466 INFO  encryption.Paillier  [] - testBit false

2016-07-31 19:04:19,568 INFO  encryption.Paillier  [] - testBit true

2016-07-31 19:04:19,571 INFO  encryption.Paillier  [] - Parameters = p = -1784821953 q = 1191981521 N = 686209391 NSquared = 1774558753 lambdaN = 1644830736 bitLength = 4804
2016-07-31 19:04:20,033 INFO  general.PaillierTest  [] - encM1 = 1914379511 encM2 = -1867476444
2016-07-31 19:04:20,479 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:04:20,698 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2094778140 multDecrypt = 7 m1_plus_m2 = 7
2016-07-31 19:04:20,699 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-07-31 19:04:20,701 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-07-31 19:04:20,701 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-07-31 19:04:20,702 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-07-31 19:04:20,706 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-07-31 19:04:20,710 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-07-31 19:04:20,711 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-07-31 19:04:20,712 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-07-31 19:04:20,713 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-07-31 19:04:20,713 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-07-31 19:04:20,713 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-07-31 19:04:20,713 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-07-31 19:04:20,715 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-07-31 19:04:20,719 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-07-31 19:04:20,719 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-07-31 19:04:20,723 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-07-31 19:04:20,723 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-07-31 19:04:20,724 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-07-31 19:04:20,725 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-07-31 19:04:20,726 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-07-31 19:04:20,734 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile1090831749032831903.xml
2016-07-31 19:04:20,805 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-07-31 19:04:20,805 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile1090831749032831903.xml hdfs = false
2016-07-31 19:04:20,806 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile1090831749032831903.xml
2016-07-31 19:04:20,809 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,811 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-07-31 19:04:20,812 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-07-31 19:04:20,812 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,812 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,812 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,813 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,813 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,814 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,814 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile1090831749032831903.xml hdfs = false
2016-07-31 19:04:20,814 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile1090831749032831903.xml
2016-07-31 19:04:20,817 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,818 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-07-31 19:04:20,818 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-07-31 19:04:20,818 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,818 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,818 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,819 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,819 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,819 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,819 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-07-31 19:04:20,820 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml
2016-07-31 19:04:20,820 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml
2016-07-31 19:04:20,821 INFO  utils.TestUtils    [] - elementName = date
2016-07-31 19:04:20,822 INFO  utils.TestUtils    [] - elementName = src_ip
2016-07-31 19:04:20,822 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:20,822 INFO  utils.TestUtils    [] - elementName = qtype
2016-07-31 19:04:20,823 INFO  utils.TestUtils    [] - elementName = rcode
2016-07-31 19:04:20,823 INFO  utils.TestUtils    [] - elementName = ip
2016-07-31 19:04:20,825 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-07-31 19:04:20,825 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3981312525590106437.xml
2016-07-31 19:04:20,826 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3981312525590106437.xml
2016-07-31 19:04:20,827 INFO  utils.TestUtils    [] - elementName = src_ip
2016-07-31 19:04:20,827 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:20,827 INFO  utils.TestUtils    [] - elementName = ip
2016-07-31 19:04:20,829 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-07-31 19:04:20,829 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5361512120777523373.xml
2016-07-31 19:04:20,829 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3981312525590106437.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5361512120777523373.xml
2016-07-31 19:04:20,830 INFO  utils.TestUtils    [] - elementName = qname
2016-07-31 19:04:20,830 INFO  utils.TestUtils    [] - elementName = src_ip
2016-07-31 19:04:20,831 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:20,832 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-07-31 19:04:20,833 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1510372206230419872.xml
2016-07-31 19:04:20,833 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3981312525590106437.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5361512120777523373.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1510372206230419872.xml
2016-07-31 19:04:20,834 INFO  utils.TestUtils    [] - elementName = qname
2016-07-31 19:04:20,834 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:20,835 INFO  utils.TestUtils    [] - elementName = ip
2016-07-31 19:04:20,836 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-07-31 19:04:20,837 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3562689145459279483.xml
2016-07-31 19:04:20,837 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3981312525590106437.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5361512120777523373.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1510372206230419872.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3562689145459279483.xml
2016-07-31 19:04:20,838 INFO  utils.TestUtils    [] - elementName = qname
2016-07-31 19:04:20,839 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:20,839 INFO  utils.TestUtils    [] - elementName = ip
2016-07-31 19:04:20,843 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-07-31 19:04:20,844 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml
2016-07-31 19:04:20,844 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml
2016-07-31 19:04:20,846 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,847 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-07-31 19:04:20,847 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,847 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-07-31 19:04:20,848 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-07-31 19:04:20,848 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-07-31 19:04:20,848 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,848 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:20,848 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,849 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-07-31 19:04:20,849 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,849 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-07-31 19:04:20,849 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,849 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-07-31 19:04:20,850 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,850 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-07-31 19:04:20,851 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3981312525590106437.xml
2016-07-31 19:04:20,851 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3981312525590106437.xml
2016-07-31 19:04:20,852 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,853 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-07-31 19:04:20,853 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,853 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-07-31 19:04:20,853 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,853 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-07-31 19:04:20,853 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,854 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-07-31 19:04:20,854 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,854 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-07-31 19:04:20,854 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5361512120777523373.xml
2016-07-31 19:04:20,854 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5361512120777523373.xml
2016-07-31 19:04:20,856 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,857 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-07-31 19:04:20,857 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,857 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-07-31 19:04:20,857 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,857 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-07-31 19:04:20,857 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,858 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:20,858 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,858 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-07-31 19:04:20,858 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1510372206230419872.xml
2016-07-31 19:04:20,858 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1510372206230419872.xml
2016-07-31 19:04:20,861 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,862 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-07-31 19:04:20,862 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,862 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-07-31 19:04:20,862 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,862 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-07-31 19:04:20,863 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,863 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:20,863 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,863 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-07-31 19:04:20,863 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3562689145459279483.xml
2016-07-31 19:04:20,864 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3562689145459279483.xml
2016-07-31 19:04:20,866 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,867 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-07-31 19:04:20,867 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,867 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-07-31 19:04:20,867 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,868 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-07-31 19:04:20,868 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,868 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:20,868 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,868 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-07-31 19:04:20,869 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml
2016-07-31 19:04:20,869 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4675211142522863928.xml
2016-07-31 19:04:20,870 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,871 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-07-31 19:04:20,871 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,871 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-07-31 19:04:20,871 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-07-31 19:04:20,871 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-07-31 19:04:20,871 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,872 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:20,872 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,872 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-07-31 19:04:20,872 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,872 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-07-31 19:04:20,873 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,873 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-07-31 19:04:20,873 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,873 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-07-31 19:04:20,873 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3981312525590106437.xml
2016-07-31 19:04:20,874 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3981312525590106437.xml
2016-07-31 19:04:20,876 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,877 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-07-31 19:04:20,877 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,877 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-07-31 19:04:20,877 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,877 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-07-31 19:04:20,877 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,878 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-07-31 19:04:20,878 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,878 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-07-31 19:04:20,878 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5361512120777523373.xml
2016-07-31 19:04:20,878 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5361512120777523373.xml
2016-07-31 19:04:20,880 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,880 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-07-31 19:04:20,880 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,880 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-07-31 19:04:20,880 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,880 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-07-31 19:04:20,881 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,881 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:20,881 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,881 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-07-31 19:04:20,881 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1510372206230419872.xml
2016-07-31 19:04:20,881 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1510372206230419872.xml
2016-07-31 19:04:20,883 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,884 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-07-31 19:04:20,884 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,884 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-07-31 19:04:20,884 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,885 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-07-31 19:04:20,885 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,885 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:20,885 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,885 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-07-31 19:04:20,886 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3562689145459279483.xml
2016-07-31 19:04:20,886 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3562689145459279483.xml
2016-07-31 19:04:20,887 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:20,888 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-07-31 19:04:20,888 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:20,888 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-07-31 19:04:20,888 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:20,889 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-07-31 19:04:20,889 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,889 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:20,889 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:20,889 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-07-31 19:04:20,949 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,950 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,950 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,950 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,952 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,952 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-07-31 19:04:20,952 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,952 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-07-31 19:04:20,953 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,953 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-07-31 19:04:20,953 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,953 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-07-31 19:04:20,954 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,954 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-07-31 19:04:20,954 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,954 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-07-31 19:04:20,955 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,955 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-07-31 19:04:20,955 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,955 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-07-31 19:04:20,956 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,956 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,956 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,956 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,957 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,957 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-07-31 19:04:20,957 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,958 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-07-31 19:04:20,958 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,958 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,958 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,959 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,959 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,960 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-07-31 19:04:20,960 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,960 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-07-31 19:04:20,961 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,961 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-07-31 19:04:20,961 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,961 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-07-31 19:04:20,962 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,962 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-07-31 19:04:20,962 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,962 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-07-31 19:04:20,963 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,963 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-07-31 19:04:20,963 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,963 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-07-31 19:04:20,964 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,964 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,965 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,965 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,965 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,965 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-07-31 19:04:20,966 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,966 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-07-31 19:04:20,966 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,967 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,967 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,967 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,968 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,968 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-07-31 19:04:20,968 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,968 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-07-31 19:04:20,969 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,969 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-07-31 19:04:20,969 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,969 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-07-31 19:04:20,970 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,970 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-07-31 19:04:20,970 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,971 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-07-31 19:04:20,971 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,971 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-07-31 19:04:20,972 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,972 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-07-31 19:04:20,972 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,973 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,973 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,973 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,974 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,974 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-07-31 19:04:20,974 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:20,974 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-07-31 19:04:20,980 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-07-31 19:04:20,981 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-07-31 19:04:20,981 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-07-31 19:04:20,981 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-07-31 19:04:20,982 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-07-31 19:04:20,982 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-07-31 19:04:20,982 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-07-31 19:04:20,983 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-07-31 19:04:20,983 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-07-31 19:04:20,983 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-07-31 19:04:20,983 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-07-31 19:04:20,984 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-07-31 19:04:20,984 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-07-31 19:04:20,985 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-07-31 19:04:20,985 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-07-31 19:04:20,986 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-07-31 19:04:20,986 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-07-31 19:04:20,987 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-07-31 19:04:20,987 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-07-31 19:04:20,987 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-07-31 19:04:20,987 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-07-31 19:04:20,987 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-07-31 19:04:20,988 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-07-31 19:04:20,988 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,988 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,988 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,988 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,989 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,989 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,989 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-07-31 19:04:20,989 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-07-31 19:04:20,989 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 19:04:20,990 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,990 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,990 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,990 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,991 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,991 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,991 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,991 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-07-31 19:04:20,992 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-07-31 19:04:20,992 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,992 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,992 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,992 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,992 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,992 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,993 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-07-31 19:04:20,993 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-07-31 19:04:20,993 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-07-31 19:04:20,993 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-07-31 19:04:20,993 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,993 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 19:04:20,993 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-07-31 19:04:20,994 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,994 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 19:04:20,994 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-07-31 19:04:20,994 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,994 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 19:04:20,994 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-07-31 19:04:20,994 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 19:04:20,995 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-07-31 19:04:20,995 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 19:04:20,996 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-07-31 19:04:20,996 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-07-31 19:04:20,996 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-07-31 19:04:20,996 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-07-31 19:04:20,996 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-07-31 19:04:20,997 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-07-31 19:04:20,997 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-07-31 19:04:20,997 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-07-31 19:04:20,997 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,997 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,997 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,998 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,998 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,998 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,998 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-07-31 19:04:20,998 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-07-31 19:04:20,999 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 19:04:20,999 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,999 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,999 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,999 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,999 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:20,999 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:20,999 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,000 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-07-31 19:04:21,000 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-07-31 19:04:21,000 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,000 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,000 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,001 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,001 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,001 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,001 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-07-31 19:04:21,001 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-07-31 19:04:21,001 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-07-31 19:04:21,001 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-07-31 19:04:21,002 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,002 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 19:04:21,002 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-07-31 19:04:21,002 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,002 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 19:04:21,002 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-07-31 19:04:21,002 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,003 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 19:04:21,003 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-07-31 19:04:21,003 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 19:04:21,003 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-07-31 19:04:21,003 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 19:04:21,003 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-07-31 19:04:21,004 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-07-31 19:04:21,004 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-07-31 19:04:21,004 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,004 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-07-31 19:04:21,004 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,004 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-07-31 19:04:21,004 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,005 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-07-31 19:04:21,005 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 19:04:21,005 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-07-31 19:04:21,005 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-07-31 19:04:21,006 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-07-31 19:04:21,006 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,006 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-07-31 19:04:21,006 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,006 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-07-31 19:04:21,006 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,006 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-07-31 19:04:21,007 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-07-31 19:04:21,007 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-07-31 19:04:21,007 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-07-31 19:04:21,007 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-07-31 19:04:21,007 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-07-31 19:04:21,008 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-07-31 19:04:21,008 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-07-31 19:04:21,008 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-07-31 19:04:21,008 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,009 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,009 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,009 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,009 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,009 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,010 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-07-31 19:04:21,010 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-07-31 19:04:21,010 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 19:04:21,010 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,010 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,011 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,011 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,011 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,011 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,011 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,011 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-07-31 19:04:21,012 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-07-31 19:04:21,012 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,012 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,012 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,012 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,013 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-07-31 19:04:21,013 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,013 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-07-31 19:04:21,013 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-07-31 19:04:21,014 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-07-31 19:04:21,014 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-07-31 19:04:21,014 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,014 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 19:04:21,014 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-07-31 19:04:21,014 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,015 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 19:04:21,015 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-07-31 19:04:21,015 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,015 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-07-31 19:04:21,015 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-07-31 19:04:21,015 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 19:04:21,016 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-07-31 19:04:21,016 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-07-31 19:04:21,016 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-07-31 19:04:21,017 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-07-31 19:04:21,017 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-07-31 19:04:21,017 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,017 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-07-31 19:04:21,017 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,017 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-07-31 19:04:21,017 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,017 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-07-31 19:04:21,018 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-07-31 19:04:21,018 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-07-31 19:04:21,018 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-07-31 19:04:21,018 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-07-31 19:04:21,018 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,018 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-07-31 19:04:21,018 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,018 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-07-31 19:04:21,019 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-07-31 19:04:21,019 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-07-31 19:04:21,019 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,020 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,020 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,020 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,021 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,021 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,021 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,021 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,022 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,022 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,022 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,022 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,024 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,024 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,024 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,024 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,025 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,025 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,025 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,025 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,026 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,026 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,026 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,026 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,027 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,027 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,027 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,027 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,028 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,028 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,028 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,028 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,029 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,029 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,029 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,029 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,030 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,030 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,030 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,030 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,031 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,031 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,031 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,031 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-07-31 19:04:21,032 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-07-31 19:04:21,033 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-07-31 19:04:21,035 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-07-31 19:04:21,035 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-07-31 19:04:21,038 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner8944535282346174323.xml
2016-07-31 19:04:21,042 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner8944535282346174323.xml hdfs = false
2016-07-31 19:04:21,042 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner8944535282346174323.xml
2016-07-31 19:04:21,044 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,045 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 19:04:21,046 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile835052435754316941.xml
2016-07-31 19:04:21,050 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile835052435754316941.xml hdfs = false
2016-07-31 19:04:21,050 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile835052435754316941.xml
2016-07-31 19:04:21,052 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,052 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 19:04:21,053 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,053 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,053 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,054 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType7775293479403986189.xml
2016-07-31 19:04:21,056 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType7775293479403986189.xml hdfs = false
2016-07-31 19:04:21,057 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType7775293479403986189.xml
2016-07-31 19:04:21,059 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,059 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 19:04:21,062 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-07-31 19:04:21,062 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-07-31 19:04:21,063 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile613083530356331973.xml
2016-07-31 19:04:21,063 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile613083530356331973.xml
2016-07-31 19:04:21,065 INFO  utils.TestUtils    [] - elementName = elementName1
2016-07-31 19:04:21,065 INFO  utils.TestUtils    [] - elementName = elementName2
2016-07-31 19:04:21,065 INFO  utils.TestUtils    [] - elementName = elementName3
2016-07-31 19:04:21,067 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile613083530356331973.xml
2016-07-31 19:04:21,067 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile613083530356331973.xml
2016-07-31 19:04:21,069 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,069 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-07-31 19:04:21,070 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-07-31 19:04:21,070 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-07-31 19:04:21,070 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-07-31 19:04:21,071 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-07-31 19:04:21,071 INFO  utils.Inputs       [] - PIR stopList file being created
2016-07-31 19:04:21,071 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile2311297376117834476.tmp
2016-07-31 19:04:21,072 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile4245214028131928414.xml
2016-07-31 19:04:21,076 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile4245214028131928414.xml hdfs = false
2016-07-31 19:04:21,076 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile4245214028131928414.xml
2016-07-31 19:04:21,078 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,079 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 19:04:21,079 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,079 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,079 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,079 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,081 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-07-31 19:04:21,081 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile4026007605423655310.xml
2016-07-31 19:04:21,081 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile4026007605423655310.xml
2016-07-31 19:04:21,083 INFO  utils.TestUtils    [] - elementName = elementName1
2016-07-31 19:04:21,083 INFO  utils.TestUtils    [] - elementName = elementName2
2016-07-31 19:04:21,083 INFO  utils.TestUtils    [] - elementName = elementName3
2016-07-31 19:04:21,084 INFO  utils.TestUtils    [] - filterName = elementName2
2016-07-31 19:04:21,085 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile4026007605423655310.xml
2016-07-31 19:04:21,085 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile4026007605423655310.xml
2016-07-31 19:04:21,087 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,088 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-07-31 19:04:21,088 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-07-31 19:04:21,088 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-07-31 19:04:21,088 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,088 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-07-31 19:04:21,088 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,089 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-07-31 19:04:21,089 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,089 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-07-31 19:04:21,089 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-07-31 19:04:21,382 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-07-31 19:04:21,650 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-07-31 19:04:21,651 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-07-31 19:04:21,651 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile184480499490205904.xml
2016-07-31 19:04:21,658 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile184480499490205904.xml hdfs = false
2016-07-31 19:04:21,659 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile184480499490205904.xml
2016-07-31 19:04:21,661 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,662 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 19:04:21,663 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,663 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,663 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,663 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,664 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-07-31 19:04:21,664 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile139306832020676073.xml
2016-07-31 19:04:21,665 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile139306832020676073.xml
2016-07-31 19:04:21,666 INFO  utils.TestUtils    [] - elementName = elementName1
2016-07-31 19:04:21,666 INFO  utils.TestUtils    [] - elementName = elementName2
2016-07-31 19:04:21,666 INFO  utils.TestUtils    [] - elementName = elementName3
2016-07-31 19:04:21,666 INFO  utils.TestUtils    [] - filterName = elementName2
2016-07-31 19:04:21,668 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile139306832020676073.xml
2016-07-31 19:04:21,668 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile139306832020676073.xml
2016-07-31 19:04:21,670 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,671 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-07-31 19:04:21,671 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-07-31 19:04:21,671 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-07-31 19:04:21,671 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-07-31 19:04:21,672 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1026882083686322976.xml
2016-07-31 19:04:21,674 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1026882083686322976.xml hdfs = false
2016-07-31 19:04:21,674 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1026882083686322976.xml
2016-07-31 19:04:21,676 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,677 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-07-31 19:04:21,677 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,677 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,677 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,678 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,678 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-07-31 19:04:21,678 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7916365649819659831.xml
2016-07-31 19:04:21,678 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7916365649819659831.xml
2016-07-31 19:04:21,680 INFO  utils.TestUtils    [] - elementName = elementName1
2016-07-31 19:04:21,680 INFO  utils.TestUtils    [] - elementName = elementName2
2016-07-31 19:04:21,680 INFO  utils.TestUtils    [] - elementName = elementName3
2016-07-31 19:04:21,680 INFO  utils.TestUtils    [] - filterName = elementName2
2016-07-31 19:04:21,682 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7916365649819659831.xml
2016-07-31 19:04:21,683 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7916365649819659831.xml
2016-07-31 19:04:21,684 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,685 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-07-31 19:04:21,685 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-07-31 19:04:21,686 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-07-31 19:04:21,686 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-07-31 19:04:21,691 INFO  utils.Inputs       [] - PIR stopList file being created
2016-07-31 19:04:21,692 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile7355464242080179513.tmp
2016-07-31 19:04:21,693 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile7355464242080179513.tmp
2016-07-31 19:04:21,693 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4994513150861343439.xml
2016-07-31 19:04:21,696 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4994513150861343439.xml hdfs = false
2016-07-31 19:04:21,697 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4994513150861343439.xml
2016-07-31 19:04:21,699 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,699 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-07-31 19:04:21,699 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-07-31 19:04:21,701 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,701 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,701 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,702 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,702 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,702 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,702 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-07-31 19:04:21,703 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4334651917171443077.xml
2016-07-31 19:04:21,703 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4334651917171443077.xml
2016-07-31 19:04:21,704 INFO  utils.TestUtils    [] - elementName = date
2016-07-31 19:04:21,704 INFO  utils.TestUtils    [] - elementName = src_ip
2016-07-31 19:04:21,704 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:21,704 INFO  utils.TestUtils    [] - elementName = qtype
2016-07-31 19:04:21,705 INFO  utils.TestUtils    [] - elementName = rcode
2016-07-31 19:04:21,705 INFO  utils.TestUtils    [] - elementName = ip
2016-07-31 19:04:21,705 INFO  utils.TestUtils    [] - filterName = qname
2016-07-31 19:04:21,706 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-07-31 19:04:21,706 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1968897446127973457.xml
2016-07-31 19:04:21,707 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4334651917171443077.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1968897446127973457.xml
2016-07-31 19:04:21,708 INFO  utils.TestUtils    [] - elementName = src_ip
2016-07-31 19:04:21,708 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:21,708 INFO  utils.TestUtils    [] - elementName = ip
2016-07-31 19:04:21,709 INFO  utils.TestUtils    [] - filterName = qname
2016-07-31 19:04:21,710 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-07-31 19:04:21,710 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1624736796252985990.xml
2016-07-31 19:04:21,711 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4334651917171443077.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1968897446127973457.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1624736796252985990.xml
2016-07-31 19:04:21,712 INFO  utils.TestUtils    [] - elementName = qname
2016-07-31 19:04:21,712 INFO  utils.TestUtils    [] - elementName = src_ip
2016-07-31 19:04:21,712 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:21,713 INFO  utils.TestUtils    [] - filterName = qname
2016-07-31 19:04:21,715 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-07-31 19:04:21,715 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4025414031662649437.xml
2016-07-31 19:04:21,716 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4334651917171443077.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1968897446127973457.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1624736796252985990.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4025414031662649437.xml
2016-07-31 19:04:21,717 INFO  utils.TestUtils    [] - elementName = qname
2016-07-31 19:04:21,717 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:21,717 INFO  utils.TestUtils    [] - elementName = ip
2016-07-31 19:04:21,717 INFO  utils.TestUtils    [] - filterName = src_ip
2016-07-31 19:04:21,718 INFO  utils.TestUtils    [] - filterName = ip
2016-07-31 19:04:21,719 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-07-31 19:04:21,719 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2554804182018466589.xml
2016-07-31 19:04:21,719 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4334651917171443077.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1968897446127973457.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1624736796252985990.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4025414031662649437.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2554804182018466589.xml
2016-07-31 19:04:21,720 INFO  utils.TestUtils    [] - elementName = qname
2016-07-31 19:04:21,720 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-07-31 19:04:21,720 INFO  utils.TestUtils    [] - elementName = ip
2016-07-31 19:04:21,722 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4334651917171443077.xml
2016-07-31 19:04:21,722 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4334651917171443077.xml
2016-07-31 19:04:21,723 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,724 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-07-31 19:04:21,724 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:21,724 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-07-31 19:04:21,724 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-07-31 19:04:21,725 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-07-31 19:04:21,725 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,725 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:21,725 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,725 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-07-31 19:04:21,725 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,725 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-07-31 19:04:21,726 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,726 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-07-31 19:04:21,726 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,726 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-07-31 19:04:21,726 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-07-31 19:04:21,790 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1968897446127973457.xml
2016-07-31 19:04:21,790 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1968897446127973457.xml
2016-07-31 19:04:21,791 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,792 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-07-31 19:04:21,792 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:21,792 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-07-31 19:04:21,792 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,792 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-07-31 19:04:21,792 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,793 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-07-31 19:04:21,793 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,793 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-07-31 19:04:21,793 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-07-31 19:04:21,819 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1624736796252985990.xml
2016-07-31 19:04:21,819 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1624736796252985990.xml
2016-07-31 19:04:21,820 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,821 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-07-31 19:04:21,821 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:21,821 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-07-31 19:04:21,821 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,821 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-07-31 19:04:21,822 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,822 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:21,822 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,822 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-07-31 19:04:21,822 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-07-31 19:04:21,840 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4025414031662649437.xml
2016-07-31 19:04:21,840 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4025414031662649437.xml
2016-07-31 19:04:21,842 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,842 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-07-31 19:04:21,842 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:21,843 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-07-31 19:04:21,843 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,843 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-07-31 19:04:21,843 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,843 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:21,843 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,843 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-07-31 19:04:21,843 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-07-31 19:04:21,844 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-07-31 19:04:21,864 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2554804182018466589.xml
2016-07-31 19:04:21,864 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2554804182018466589.xml
2016-07-31 19:04:21,865 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-07-31 19:04:21,865 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-07-31 19:04:21,865 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-07-31 19:04:21,866 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-07-31 19:04:21,866 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-07-31 19:04:21,866 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-07-31 19:04:21,866 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,866 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-07-31 19:04:21,866 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-07-31 19:04:21,866 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-07-31 19:04:21,870 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-07-31 19:04:21,873 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:21,875 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier3733748707818988043.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3419310723506984957.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7288172437595671416.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6764416622497054021.txt
2016-07-31 19:04:21,877 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:21,906 INFO  encryption.Paillier  [] - Parameters = p = -1096069207 q = 593965225 N = 637945489 NSquared = 1849663009 lambdaN = -931235640 bitLength = 384
2016-07-31 19:04:21,906 INFO  encryption.Paillier  [] - Parameters = p = -1096069207 q = 593965225 N = 637945489 NSquared = 1849663009 lambdaN = -931235640 bitLength = 384
2016-07-31 19:04:21,906 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:22,852 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-07-31 19:04:22,854 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:23,092 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:23,217 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:23,217 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-07-31 19:04:23,222 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:23,228 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:23,231 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:23,234 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:23,237 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:23,239 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-07-31 19:04:23,243 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-07-31 19:04:23,247 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-07-31 19:04:23,250 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:23,250 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:23,261 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:23,262 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:23,443 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:23,455 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:23,455 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:23,458 INFO  utils.BaseTests    [] - results:
2016-07-31 19:04:23,459 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-07-31 19:04:23,459 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-07-31 19:04:23,459 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:23,459 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:23,459 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-07-31 19:04:23,460 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:23,460 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:23,460 INFO  utils.BaseTests    [] - correctResults: 
2016-07-31 19:04:23,461 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-07-31 19:04:23,461 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:23,461 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:23,462 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-07-31 19:04:23,462 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:23,462 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:23,463 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-07-31 19:04:23,464 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-07-31 19:04:23,464 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-07-31 19:04:23,464 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:23,465 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1431630051472526006.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query6635835588070715791.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1771458772207321654.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile82342713259973921.txt
2016-07-31 19:04:23,466 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:23,481 INFO  encryption.Paillier  [] - Parameters = p = 1780735793 q = 920690227 N = -372919101 NSquared = -1446982519 lambdaN = 610311088 bitLength = 384
2016-07-31 19:04:23,481 INFO  encryption.Paillier  [] - Parameters = p = 1780735793 q = 920690227 N = -372919101 NSquared = -1446982519 lambdaN = 610311088 bitLength = 384
2016-07-31 19:04:23,482 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:23,981 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-07-31 19:04:23,981 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:24,120 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:24,193 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:24,194 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-07-31 19:04:24,196 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-07-31 19:04:24,200 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-07-31 19:04:24,202 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-07-31 19:04:24,203 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-07-31 19:04:24,204 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-07-31 19:04:24,206 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-07-31 19:04:24,208 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-07-31 19:04:24,212 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-07-31 19:04:24,213 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:24,213 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:24,214 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:24,215 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:24,279 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:24,280 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:24,281 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:24,281 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:24,283 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:24,283 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-07-31 19:04:24,283 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-07-31 19:04:24,283 INFO  utils.BaseTests    [] - correctResults:
2016-07-31 19:04:24,284 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-07-31 19:04:24,284 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:24,284 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-07-31 19:04:24,284 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-07-31 19:04:24,284 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-07-31 19:04:24,284 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:24,285 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5487002708068369115.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2175167885470564265.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse9158728692286118201.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4736249493800049500.txt
2016-07-31 19:04:24,285 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:24,291 INFO  encryption.Paillier  [] - Parameters = p = -966504279 q = -1591526921 N = 282752015 NSquared = -1104570143 lambdaN = 1189291752 bitLength = 384
2016-07-31 19:04:24,291 INFO  encryption.Paillier  [] - Parameters = p = -966504279 q = -1591526921 N = 282752015 NSquared = -1104570143 lambdaN = 1189291752 bitLength = 384
2016-07-31 19:04:24,291 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:24,723 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-07-31 19:04:24,723 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:24,839 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:24,888 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:24,888 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-07-31 19:04:24,890 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-07-31 19:04:24,893 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-07-31 19:04:24,895 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-07-31 19:04:24,896 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-07-31 19:04:24,898 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-07-31 19:04:24,899 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-07-31 19:04:24,901 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-07-31 19:04:24,903 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-07-31 19:04:24,905 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:24,905 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:24,907 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:24,908 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:24,972 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:24,972 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:24,973 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:24,974 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:24,974 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:24,976 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:24,976 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:24,977 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:24,977 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-07-31 19:04:24,977 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-07-31 19:04:24,977 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-07-31 19:04:24,978 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-07-31 19:04:24,978 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-07-31 19:04:24,978 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:24,978 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8683471691712967650.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1880029436816495958.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1477387957107209329.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4134258175130692800.txt
2016-07-31 19:04:24,979 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:24,986 INFO  encryption.Paillier  [] - Parameters = p = 991852587 q = -1217896767 N = 1351639659 NSquared = -1103750983 lambdaN = 890547136 bitLength = 384
2016-07-31 19:04:24,986 INFO  encryption.Paillier  [] - Parameters = p = 991852587 q = -1217896767 N = 1351639659 NSquared = -1103750983 lambdaN = 890547136 bitLength = 384
2016-07-31 19:04:24,986 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:25,376 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-07-31 19:04:25,376 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:25,503 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:25,554 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:25,555 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:25,556 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:25,556 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:25,557 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:25,557 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:25,613 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:25,613 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:25,613 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:25,614 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:25,615 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:25,615 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:25,615 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-07-31 19:04:25,616 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-07-31 19:04:25,616 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-07-31 19:04:25,616 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:25,616 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier560237805444766246.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5120712528142751151.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5587069204295791965.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5611254699783587628.txt
2016-07-31 19:04:25,617 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:25,621 INFO  encryption.Paillier  [] - Parameters = p = -739750451 q = 295411573 N = -644030031 NSquared = -391078815 lambdaN = -1485163604 bitLength = 384
2016-07-31 19:04:25,621 INFO  encryption.Paillier  [] - Parameters = p = -739750451 q = 295411573 N = -644030031 NSquared = -391078815 lambdaN = -1485163604 bitLength = 384
2016-07-31 19:04:25,621 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:26,448 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-07-31 19:04:26,448 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:26,561 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:26,612 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:26,612 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-07-31 19:04:26,614 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:26,616 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:26,617 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:26,619 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:26,622 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:26,624 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-07-31 19:04:26,626 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-07-31 19:04:26,628 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-07-31 19:04:26,629 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:26,629 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:26,632 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:26,632 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:26,720 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:26,726 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:26,726 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:26,727 INFO  utils.BaseTests    [] - results:
2016-07-31 19:04:26,727 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-07-31 19:04:26,727 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-07-31 19:04:26,728 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:26,728 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:26,728 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-07-31 19:04:26,728 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:26,728 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:26,728 INFO  utils.BaseTests    [] - correctResults: 
2016-07-31 19:04:26,728 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-07-31 19:04:26,729 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:26,729 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:26,729 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-07-31 19:04:26,729 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:26,729 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:26,729 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-07-31 19:04:26,730 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-07-31 19:04:26,730 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-07-31 19:04:26,730 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:26,731 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier16230344402777655.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7236864500421547229.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5573121190947372087.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7421193661839393776.txt
2016-07-31 19:04:26,731 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:26,736 INFO  encryption.Paillier  [] - Parameters = p = -1872710857 q = -956714131 N = -252001429 NSquared = -500683079 lambdaN = 1288711780 bitLength = 384
2016-07-31 19:04:26,736 INFO  encryption.Paillier  [] - Parameters = p = -1872710857 q = -956714131 N = -252001429 NSquared = -500683079 lambdaN = 1288711780 bitLength = 384
2016-07-31 19:04:26,736 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:27,555 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-07-31 19:04:27,555 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:27,679 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:27,730 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:27,730 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-07-31 19:04:27,732 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:27,734 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:27,735 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:27,736 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:27,738 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:27,739 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-07-31 19:04:27,741 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-07-31 19:04:27,742 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-07-31 19:04:27,744 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:27,744 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:27,747 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:27,747 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:27,830 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:27,834 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:27,834 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:27,836 INFO  utils.BaseTests    [] - results:
2016-07-31 19:04:27,836 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-07-31 19:04:27,836 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-07-31 19:04:27,836 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:27,836 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:27,836 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-07-31 19:04:27,836 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:27,837 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:27,837 INFO  utils.BaseTests    [] - correctResults: 
2016-07-31 19:04:27,837 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-07-31 19:04:27,837 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:27,837 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:27,837 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-07-31 19:04:27,837 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:27,838 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:27,838 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-07-31 19:04:27,839 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-07-31 19:04:27,839 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-07-31 19:04:27,839 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:27,840 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1052559260964295970.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4774956322023238031.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4316508589575137260.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6378436594254798041.txt
2016-07-31 19:04:27,840 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:27,866 INFO  encryption.Paillier  [] - Parameters = p = 1674015455 q = 2132174779 N = -1575837211 NSquared = -23734567 lambdaN = -543530074 bitLength = 384
2016-07-31 19:04:27,866 INFO  encryption.Paillier  [] - Parameters = p = 1674015455 q = 2132174779 N = -1575837211 NSquared = -23734567 lambdaN = -543530074 bitLength = 384
2016-07-31 19:04:27,867 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:28,700 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-07-31 19:04:28,701 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:28,810 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:28,858 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:28,859 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-07-31 19:04:28,860 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:28,862 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:28,863 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:28,864 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:28,865 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:28,867 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-07-31 19:04:28,869 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-07-31 19:04:28,870 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-07-31 19:04:28,872 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:28,872 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:28,875 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:28,875 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:28,962 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:28,969 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:28,969 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:28,971 INFO  utils.BaseTests    [] - results:
2016-07-31 19:04:28,971 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-07-31 19:04:28,971 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-07-31 19:04:28,971 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:28,971 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:28,972 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-07-31 19:04:28,972 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:28,972 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:28,972 INFO  utils.BaseTests    [] - correctResults: 
2016-07-31 19:04:28,972 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-07-31 19:04:28,972 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:28,972 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:28,973 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-07-31 19:04:28,973 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:28,973 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:28,973 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-07-31 19:04:28,973 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-07-31 19:04:28,974 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-07-31 19:04:28,974 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:28,974 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5768563501393631057.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8630868198879932310.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2204593873421468463.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2746161541310034693.txt
2016-07-31 19:04:28,974 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:28,983 INFO  encryption.Paillier  [] - Parameters = p = -1205239221 q = -300652821 N = 2145418457 NSquared = 111341553 lambdaN = -321828398 bitLength = 384
2016-07-31 19:04:28,983 INFO  encryption.Paillier  [] - Parameters = p = -1205239221 q = -300652821 N = 2145418457 NSquared = 111341553 lambdaN = -321828398 bitLength = 384
2016-07-31 19:04:28,983 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:29,820 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-07-31 19:04:29,820 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:29,929 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:29,979 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:29,979 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-07-31 19:04:29,980 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:29,982 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:29,983 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:29,984 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:29,985 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:29,986 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-07-31 19:04:29,988 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-07-31 19:04:29,989 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-07-31 19:04:29,991 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:29,991 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:29,993 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:29,993 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:30,072 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:30,077 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:30,077 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:30,080 INFO  utils.BaseTests    [] - results:
2016-07-31 19:04:30,080 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-07-31 19:04:30,081 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-07-31 19:04:30,081 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:30,081 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:30,081 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-07-31 19:04:30,081 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:30,081 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:30,081 INFO  utils.BaseTests    [] - correctResults: 
2016-07-31 19:04:30,082 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-07-31 19:04:30,082 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:30,082 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:30,082 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-07-31 19:04:30,082 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:30,082 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:30,082 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-07-31 19:04:30,083 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-07-31 19:04:30,083 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-07-31 19:04:30,083 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:30,084 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5222411542542446816.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8762121317728082635.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2152278210678932514.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5764326214390576036.txt
2016-07-31 19:04:30,084 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:30,101 INFO  encryption.Paillier  [] - Parameters = p = -155579219 q = 1366747215 N = 1403302243 NSquared = -205386679 lambdaN = 1135310716 bitLength = 384
2016-07-31 19:04:30,101 INFO  encryption.Paillier  [] - Parameters = p = -155579219 q = 1366747215 N = 1403302243 NSquared = -205386679 lambdaN = 1135310716 bitLength = 384
2016-07-31 19:04:30,101 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:30,578 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-07-31 19:04:30,579 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:30,685 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:30,735 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:30,735 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-07-31 19:04:30,736 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-07-31 19:04:30,737 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-07-31 19:04:30,738 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-07-31 19:04:30,739 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-07-31 19:04:30,740 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-07-31 19:04:30,742 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-07-31 19:04:30,743 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-07-31 19:04:30,744 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-07-31 19:04:30,745 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:30,745 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:30,746 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:30,746 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:30,806 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:30,807 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:30,808 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:30,808 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:30,809 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:30,809 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-07-31 19:04:30,809 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-07-31 19:04:30,809 INFO  utils.BaseTests    [] - correctResults:
2016-07-31 19:04:30,809 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-07-31 19:04:30,809 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:30,810 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-07-31 19:04:30,810 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-07-31 19:04:30,810 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-07-31 19:04:30,810 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:30,811 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier566416678586012857.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1887627067217052927.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3433723016902785729.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4753758039588319605.txt
2016-07-31 19:04:30,811 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:30,819 INFO  encryption.Paillier  [] - Parameters = p = 898117101 q = -241739683 N = 1980573465 NSquared = 176332913 lambdaN = 1542005436 bitLength = 384
2016-07-31 19:04:30,819 INFO  encryption.Paillier  [] - Parameters = p = 898117101 q = -241739683 N = 1980573465 NSquared = 176332913 lambdaN = 1542005436 bitLength = 384
2016-07-31 19:04:30,819 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:31,225 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-07-31 19:04:31,225 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:31,335 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:31,424 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:31,425 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-07-31 19:04:31,426 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-07-31 19:04:31,427 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-07-31 19:04:31,428 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-07-31 19:04:31,429 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-07-31 19:04:31,431 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-07-31 19:04:31,432 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-07-31 19:04:31,433 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-07-31 19:04:31,435 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-07-31 19:04:31,436 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:31,436 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:31,437 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:31,437 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:31,498 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:31,498 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:31,499 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:31,501 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:31,501 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:31,502 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:31,502 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:31,502 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-07-31 19:04:31,502 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-07-31 19:04:31,502 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-07-31 19:04:31,503 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-07-31 19:04:31,503 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-07-31 19:04:31,503 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-07-31 19:04:31,503 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:31,504 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6562490362049201283.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1137264966941924620.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2490935383204099272.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile212921074714127299.txt
2016-07-31 19:04:31,504 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:31,515 INFO  encryption.Paillier  [] - Parameters = p = 94221815 q = 2045922719 N = -1355985047 NSquared = -1853097711 lambdaN = 848967502 bitLength = 384
2016-07-31 19:04:31,516 INFO  encryption.Paillier  [] - Parameters = p = 94221815 q = 2045922719 N = -1355985047 NSquared = -1853097711 lambdaN = 848967502 bitLength = 384
2016-07-31 19:04:31,516 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:31,905 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-07-31 19:04:31,906 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:32,018 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:32,065 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:32,065 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:32,066 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:32,066 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:32,067 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:32,067 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:32,121 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:32,122 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:32,122 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:32,122 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-07-31 19:04:32,123 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:32,123 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:32,124 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-07-31 19:04:32,124 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-07-31 19:04:32,124 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-07-31 19:04:32,124 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-07-31 19:04:32,125 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1742777527255192775.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7736134764302087664.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8172959859897798841.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7446007288294715745.txt
2016-07-31 19:04:32,125 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:32,130 INFO  encryption.Paillier  [] - Parameters = p = -2006850435 q = 894527567 N = 127224467 NSquared = -287879063 lambdaN = 619773668 bitLength = 384
2016-07-31 19:04:32,130 INFO  encryption.Paillier  [] - Parameters = p = -2006850435 q = 894527567 N = 127224467 NSquared = -287879063 lambdaN = 619773668 bitLength = 384
2016-07-31 19:04:32,130 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-07-31 19:04:32,960 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-07-31 19:04:32,960 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-07-31 19:04:32,960 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-07-31 19:04:33,064 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-07-31 19:04:33,118 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-07-31 19:04:33,119 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-07-31 19:04:33,120 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:33,122 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:33,123 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:33,126 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:33,127 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-07-31 19:04:33,129 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-07-31 19:04:33,131 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-07-31 19:04:33,134 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-07-31 19:04:33,135 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-07-31 19:04:33,135 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-07-31 19:04:33,138 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-07-31 19:04:33,138 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-07-31 19:04:33,223 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-07-31 19:04:33,228 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-07-31 19:04:33,228 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-07-31 19:04:33,230 INFO  utils.BaseTests    [] - results:
2016-07-31 19:04:33,230 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-07-31 19:04:33,230 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:33,230 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:33,231 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-07-31 19:04:33,231 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:33,231 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-07-31 19:04:33,231 INFO  utils.BaseTests    [] - correctResults: 
2016-07-31 19:04:33,231 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-07-31 19:04:33,231 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:33,231 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:33,231 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-07-31 19:04:33,232 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:33,232 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-07-31 19:04:33,232 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
