 INFO [main] 2016-07-31 16:04:36,453 (Inputs.java:522) - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7662587049264370255.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>testDataSchema</schemaName><element><name>date</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner</partitioner></element><element><name>qname</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner</partitioner></element><element><name>src_ip</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.IPDataPartitioner</partitioner></element><element><name>dest_ip</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.IPDataPartitioner</partitioner></element><element><name>qtype</name><type>short</type><isArray/><partitioner>org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner</partitioner></element><element><name>rcode</name><type>int</type><partitioner>org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner</partitioner></element><element><name>ip</name><type>string</type><isArray/><partitioner>org.apache.pirk.schema.data.partitioner.IPDataPartitioner</partitioner></element></schema>
 INFO [main] 2016-07-31 16:04:36,498 (DataSchemaLoader.java:77) - Loading pre-configured data schemas: 
 INFO [main] 2016-07-31 16:04:36,498 (DataSchemaLoader.java:107) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7662587049264370255.xml hdfs = false
 INFO [main] 2016-07-31 16:04:36,498 (DataSchemaLoader.java:120) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7662587049264370255.xml
 INFO [main] 2016-07-31 16:04:36,502 (DataSchemaLoader.java:194) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,503 (DataSchemaLoader.java:163) - schemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,504 (DataSchemaLoader.java:244) - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-07-31 16:04:36,504 (DataSchemaLoader.java:244) - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,504 (DataSchemaLoader.java:244) - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,505 (DataSchemaLoader.java:244) - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,505 (DataSchemaLoader.java:244) - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,505 (DataSchemaLoader.java:244) - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,506 (DataSchemaLoader.java:244) - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,506 (DataSchemaLoader.java:107) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7662587049264370255.xml hdfs = false
 INFO [main] 2016-07-31 16:04:36,506 (DataSchemaLoader.java:120) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7662587049264370255.xml
 INFO [main] 2016-07-31 16:04:36,508 (DataSchemaLoader.java:194) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,509 (DataSchemaLoader.java:163) - schemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,509 (DataSchemaLoader.java:244) - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-07-31 16:04:36,509 (DataSchemaLoader.java:244) - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,509 (DataSchemaLoader.java:244) - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,510 (DataSchemaLoader.java:244) - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,510 (DataSchemaLoader.java:244) - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,510 (DataSchemaLoader.java:244) - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,510 (DataSchemaLoader.java:244) - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,510 (TestUtils.java:142) - createQuerySchema: querySchemaName = dns-hostname-query
 INFO [main] 2016-07-31 16:04:36,511 (TestUtils.java:163) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml
 INFO [main] 2016-07-31 16:04:36,511 (TestUtils.java:178) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml
 INFO [main] 2016-07-31 16:04:36,512 (TestUtils.java:211) - elementName = date
 INFO [main] 2016-07-31 16:04:36,513 (TestUtils.java:211) - elementName = src_ip
 INFO [main] 2016-07-31 16:04:36,513 (TestUtils.java:211) - elementName = dest_ip
 INFO [main] 2016-07-31 16:04:36,513 (TestUtils.java:211) - elementName = qtype
 INFO [main] 2016-07-31 16:04:36,513 (TestUtils.java:211) - elementName = rcode
 INFO [main] 2016-07-31 16:04:36,514 (TestUtils.java:211) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-hostname-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>qname</selectorName><elements><name>date</name><name>src_ip</name><name>dest_ip</name><name>qtype</name><name>rcode</name><name>ip</name></elements></schema>
 INFO [main] 2016-07-31 16:04:36,515 (TestUtils.java:142) - createQuerySchema: querySchemaName = dns-ip-query
 INFO [main] 2016-07-31 16:04:36,516 (TestUtils.java:163) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1658105064237872639.xml
 INFO [main] 2016-07-31 16:04:36,516 (TestUtils.java:178) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1658105064237872639.xml
 INFO [main] 2016-07-31 16:04:36,518 (TestUtils.java:211) - elementName = src_ip
 INFO [main] 2016-07-31 16:04:36,518 (TestUtils.java:211) - elementName = dest_ip
 INFO [main] 2016-07-31 16:04:36,518 (TestUtils.java:211) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-ip-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>ip</selectorName><elements><name>src_ip</name><name>dest_ip</name><name>ip</name></elements></schema>
 INFO [main] 2016-07-31 16:04:36,520 (TestUtils.java:142) - createQuerySchema: querySchemaName = dns-nxdomain-query
 INFO [main] 2016-07-31 16:04:36,520 (TestUtils.java:163) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8252036664641294280.xml
 INFO [main] 2016-07-31 16:04:36,520 (TestUtils.java:178) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1658105064237872639.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8252036664641294280.xml
 INFO [main] 2016-07-31 16:04:36,522 (TestUtils.java:211) - elementName = qname
 INFO [main] 2016-07-31 16:04:36,522 (TestUtils.java:211) - elementName = src_ip
 INFO [main] 2016-07-31 16:04:36,522 (TestUtils.java:211) - elementName = dest_ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-nxdomain-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>qname</selectorName><elements><name>qname</name><name>src_ip</name><name>dest_ip</name></elements></schema>
 INFO [main] 2016-07-31 16:04:36,524 (TestUtils.java:142) - createQuerySchema: querySchemaName = dns-srcip-query
 INFO [main] 2016-07-31 16:04:36,524 (TestUtils.java:163) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5949014300012941455.xml
 INFO [main] 2016-07-31 16:04:36,525 (TestUtils.java:178) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1658105064237872639.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8252036664641294280.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5949014300012941455.xml
 INFO [main] 2016-07-31 16:04:36,526 (TestUtils.java:211) - elementName = qname
 INFO [main] 2016-07-31 16:04:36,526 (TestUtils.java:211) - elementName = dest_ip
 INFO [main] 2016-07-31 16:04:36,526 (TestUtils.java:211) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-srcip-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>src_ip</selectorName><elements><name>qname</name><name>dest_ip</name><name>ip</name></elements></schema>
 INFO [main] 2016-07-31 16:04:36,528 (TestUtils.java:142) - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
 INFO [main] 2016-07-31 16:04:36,528 (TestUtils.java:163) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3666158684580374599.xml
 INFO [main] 2016-07-31 16:04:36,528 (TestUtils.java:178) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1658105064237872639.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8252036664641294280.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5949014300012941455.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3666158684580374599.xml
 INFO [main] 2016-07-31 16:04:36,530 (TestUtils.java:211) - elementName = qname
 INFO [main] 2016-07-31 16:04:36,531 (TestUtils.java:211) - elementName = dest_ip
 INFO [main] 2016-07-31 16:04:36,531 (TestUtils.java:211) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-srcip-query-no-filter</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>src_ip</selectorName><elements><name>qname</name><name>dest_ip</name><name>ip</name></elements></schema>
 INFO [main] 2016-07-31 16:04:36,534 (QuerySchemaLoader.java:81) - Loading query schemas: 
 INFO [main] 2016-07-31 16:04:36,534 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml
 INFO [main] 2016-07-31 16:04:36,534 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml
 INFO [main] 2016-07-31 16:04:36,536 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,536 (QuerySchemaLoader.java:163) - schemaName = dns-hostname-query
 INFO [main] 2016-07-31 16:04:36,536 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,537 (QuerySchemaLoader.java:178) - selectorName = qname
 INFO [main] 2016-07-31 16:04:36,537 (QuerySchemaLoader.java:207) - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-07-31 16:04:36,537 (QuerySchemaLoader.java:220) - name = date bits = 64 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,537 (QuerySchemaLoader.java:207) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,538 (QuerySchemaLoader.java:220) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-07-31 16:04:36,538 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,538 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-07-31 16:04:36,539 (QuerySchemaLoader.java:207) - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,539 (QuerySchemaLoader.java:220) - name = qtype bits = 32 dataElementSize = 160
 INFO [main] 2016-07-31 16:04:36,539 (QuerySchemaLoader.java:207) - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,539 (QuerySchemaLoader.java:220) - name = rcode bits = 32 dataElementSize = 192
 INFO [main] 2016-07-31 16:04:36,539 (QuerySchemaLoader.java:207) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,540 (QuerySchemaLoader.java:220) - name = ip bits = 64 dataElementSize = 256
 INFO [main] 2016-07-31 16:04:36,541 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1658105064237872639.xml
 INFO [main] 2016-07-31 16:04:36,541 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1658105064237872639.xml
 INFO [main] 2016-07-31 16:04:36,543 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,543 (QuerySchemaLoader.java:163) - schemaName = dns-ip-query
 INFO [main] 2016-07-31 16:04:36,543 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,544 (QuerySchemaLoader.java:178) - selectorName = ip
 INFO [main] 2016-07-31 16:04:36,544 (QuerySchemaLoader.java:207) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,544 (QuerySchemaLoader.java:220) - name = src_ip bits = 32 dataElementSize = 32
 INFO [main] 2016-07-31 16:04:36,544 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,544 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,544 (QuerySchemaLoader.java:207) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,545 (QuerySchemaLoader.java:220) - name = ip bits = 64 dataElementSize = 128
 INFO [main] 2016-07-31 16:04:36,545 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8252036664641294280.xml
 INFO [main] 2016-07-31 16:04:36,545 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8252036664641294280.xml
 INFO [main] 2016-07-31 16:04:36,547 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,548 (QuerySchemaLoader.java:163) - schemaName = dns-nxdomain-query
 INFO [main] 2016-07-31 16:04:36,548 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,548 (QuerySchemaLoader.java:178) - selectorName = qname
 INFO [main] 2016-07-31 16:04:36,548 (QuerySchemaLoader.java:207) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,548 (QuerySchemaLoader.java:220) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,548 (QuerySchemaLoader.java:207) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,549 (QuerySchemaLoader.java:220) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-07-31 16:04:36,549 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,549 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-07-31 16:04:36,549 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5949014300012941455.xml
 INFO [main] 2016-07-31 16:04:36,549 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5949014300012941455.xml
 INFO [main] 2016-07-31 16:04:36,551 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,551 (QuerySchemaLoader.java:163) - schemaName = dns-srcip-query
 INFO [main] 2016-07-31 16:04:36,551 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,551 (QuerySchemaLoader.java:178) - selectorName = src_ip
 INFO [main] 2016-07-31 16:04:36,551 (QuerySchemaLoader.java:207) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,552 (QuerySchemaLoader.java:220) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,552 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,552 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-07-31 16:04:36,552 (QuerySchemaLoader.java:207) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,552 (QuerySchemaLoader.java:220) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-07-31 16:04:36,552 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3666158684580374599.xml
 INFO [main] 2016-07-31 16:04:36,553 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3666158684580374599.xml
 INFO [main] 2016-07-31 16:04:36,555 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,556 (QuerySchemaLoader.java:163) - schemaName = dns-srcip-query-no-filter
 INFO [main] 2016-07-31 16:04:36,556 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,556 (QuerySchemaLoader.java:178) - selectorName = src_ip
 INFO [main] 2016-07-31 16:04:36,556 (QuerySchemaLoader.java:207) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,557 (QuerySchemaLoader.java:220) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,557 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,557 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-07-31 16:04:36,557 (QuerySchemaLoader.java:207) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,557 (QuerySchemaLoader.java:220) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-07-31 16:04:36,558 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml
 INFO [main] 2016-07-31 16:04:36,558 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7191207036356780207.xml
 INFO [main] 2016-07-31 16:04:36,559 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,560 (QuerySchemaLoader.java:163) - schemaName = dns-hostname-query
 INFO [main] 2016-07-31 16:04:36,560 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,560 (QuerySchemaLoader.java:178) - selectorName = qname
 INFO [main] 2016-07-31 16:04:36,560 (QuerySchemaLoader.java:207) - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-07-31 16:04:36,560 (QuerySchemaLoader.java:220) - name = date bits = 64 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,561 (QuerySchemaLoader.java:207) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,561 (QuerySchemaLoader.java:220) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-07-31 16:04:36,561 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,561 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-07-31 16:04:36,561 (QuerySchemaLoader.java:207) - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,561 (QuerySchemaLoader.java:220) - name = qtype bits = 32 dataElementSize = 160
 INFO [main] 2016-07-31 16:04:36,562 (QuerySchemaLoader.java:207) - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,562 (QuerySchemaLoader.java:220) - name = rcode bits = 32 dataElementSize = 192
 INFO [main] 2016-07-31 16:04:36,562 (QuerySchemaLoader.java:207) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,562 (QuerySchemaLoader.java:220) - name = ip bits = 64 dataElementSize = 256
 INFO [main] 2016-07-31 16:04:36,562 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1658105064237872639.xml
 INFO [main] 2016-07-31 16:04:36,562 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1658105064237872639.xml
 INFO [main] 2016-07-31 16:04:36,568 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,568 (QuerySchemaLoader.java:163) - schemaName = dns-ip-query
 INFO [main] 2016-07-31 16:04:36,568 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,568 (QuerySchemaLoader.java:178) - selectorName = ip
 INFO [main] 2016-07-31 16:04:36,568 (QuerySchemaLoader.java:207) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,569 (QuerySchemaLoader.java:220) - name = src_ip bits = 32 dataElementSize = 32
 INFO [main] 2016-07-31 16:04:36,569 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,569 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,569 (QuerySchemaLoader.java:207) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,570 (QuerySchemaLoader.java:220) - name = ip bits = 64 dataElementSize = 128
 INFO [main] 2016-07-31 16:04:36,570 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8252036664641294280.xml
 INFO [main] 2016-07-31 16:04:36,570 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8252036664641294280.xml
 INFO [main] 2016-07-31 16:04:36,572 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,572 (QuerySchemaLoader.java:163) - schemaName = dns-nxdomain-query
 INFO [main] 2016-07-31 16:04:36,572 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,572 (QuerySchemaLoader.java:178) - selectorName = qname
 INFO [main] 2016-07-31 16:04:36,572 (QuerySchemaLoader.java:207) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,573 (QuerySchemaLoader.java:220) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,573 (QuerySchemaLoader.java:207) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,573 (QuerySchemaLoader.java:220) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-07-31 16:04:36,573 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,573 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-07-31 16:04:36,573 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5949014300012941455.xml
 INFO [main] 2016-07-31 16:04:36,574 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5949014300012941455.xml
 INFO [main] 2016-07-31 16:04:36,575 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,576 (QuerySchemaLoader.java:163) - schemaName = dns-srcip-query
 INFO [main] 2016-07-31 16:04:36,576 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,576 (QuerySchemaLoader.java:178) - selectorName = src_ip
 INFO [main] 2016-07-31 16:04:36,576 (QuerySchemaLoader.java:207) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,576 (QuerySchemaLoader.java:220) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,576 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,576 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-07-31 16:04:36,576 (QuerySchemaLoader.java:207) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,577 (QuerySchemaLoader.java:220) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-07-31 16:04:36,577 (QuerySchemaLoader.java:110) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3666158684580374599.xml
 INFO [main] 2016-07-31 16:04:36,577 (QuerySchemaLoader.java:123) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3666158684580374599.xml
 INFO [main] 2016-07-31 16:04:36,579 (QuerySchemaLoader.java:257) - Root element: schema
 INFO [main] 2016-07-31 16:04:36,579 (QuerySchemaLoader.java:163) - schemaName = dns-srcip-query-no-filter
 INFO [main] 2016-07-31 16:04:36,579 (QuerySchemaLoader.java:167) - dataSchemaName = testDataSchema
 INFO [main] 2016-07-31 16:04:36,580 (QuerySchemaLoader.java:178) - selectorName = src_ip
 INFO [main] 2016-07-31 16:04:36,580 (QuerySchemaLoader.java:207) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-07-31 16:04:36,580 (QuerySchemaLoader.java:220) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-07-31 16:04:36,580 (QuerySchemaLoader.java:207) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,580 (QuerySchemaLoader.java:220) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-07-31 16:04:36,580 (QuerySchemaLoader.java:207) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-07-31 16:04:36,580 (QuerySchemaLoader.java:220) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-07-31 16:04:36,626 (QueryParserUtils.java:672) - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,626 (QueryParserUtils.java:736) - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,627 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,636 (QueryParserUtils.java:738) - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,638 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,639 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,639 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,639 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,639 (QueryParserUtils.java:672) - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,640 (QueryParserUtils.java:736) - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,640 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,640 (QueryParserUtils.java:738) - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,640 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,641 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
 INFO [main] 2016-07-31 16:04:36,641 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,641 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
 INFO [main] 2016-07-31 16:04:36,642 (QueryParserUtils.java:672) - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,643 (QueryParserUtils.java:736) - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,643 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,643 (QueryParserUtils.java:738) - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,644 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,644 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,644 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,644 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,645 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,646 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,646 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,646 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,646 (QueryParserUtils.java:672) - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,647 (QueryParserUtils.java:736) - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,647 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,647 (QueryParserUtils.java:738) - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,647 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,648 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,648 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,648 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,648 (QueryParserUtils.java:672) - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,648 (QueryParserUtils.java:736) - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,649 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,649 (QueryParserUtils.java:738) - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,649 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,650 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
 INFO [main] 2016-07-31 16:04:36,650 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,650 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
 INFO [main] 2016-07-31 16:04:36,650 (QueryParserUtils.java:672) - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,651 (QueryParserUtils.java:736) - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,651 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,651 (QueryParserUtils.java:738) - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,651 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,652 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,652 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,652 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,652 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,652 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,653 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,653 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,653 (QueryParserUtils.java:672) - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,653 (QueryParserUtils.java:736) - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,653 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,654 (QueryParserUtils.java:738) - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,654 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,654 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,654 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,654 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,655 (QueryParserUtils.java:672) - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,655 (QueryParserUtils.java:736) - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,655 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,655 (QueryParserUtils.java:738) - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,656 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,656 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
 INFO [main] 2016-07-31 16:04:36,656 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,656 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
 INFO [main] 2016-07-31 16:04:36,657 (QueryParserUtils.java:672) - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,657 (QueryParserUtils.java:736) - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,657 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,657 (QueryParserUtils.java:738) - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,658 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,658 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,658 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,659 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,659 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,660 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,660 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,660 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
 INFO [main] 2016-07-31 16:04:36,665 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [0+TO+2] value = 0
 INFO [main] 2016-07-31 16:04:36,666 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {-1+TO+2} value = 0
 INFO [main] 2016-07-31 16:04:36,666 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [-1+TO+0] value = 0
 INFO [main] 2016-07-31 16:04:36,667 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {0+TO+3} value = 0
 INFO [main] 2016-07-31 16:04:36,667 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [3+TO+10] value = 0
 INFO [main] 2016-07-31 16:04:36,667 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [0+TO+2] value = 0
 INFO [main] 2016-07-31 16:04:36,667 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {-1+TO+2} value = 0
 INFO [main] 2016-07-31 16:04:36,668 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [-1+TO+0] value = 0
 INFO [main] 2016-07-31 16:04:36,668 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {0+TO+3} value = 0
 INFO [main] 2016-07-31 16:04:36,668 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [3+TO+10] value = 0
 INFO [main] 2016-07-31 16:04:36,669 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [0+TO+2] value = 0
 INFO [main] 2016-07-31 16:04:36,669 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {-1+TO+2} value = 0
 INFO [main] 2016-07-31 16:04:36,669 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [-1+TO+0] value = 0
 INFO [main] 2016-07-31 16:04:36,669 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {0+TO+3} value = 0
 INFO [main] 2016-07-31 16:04:36,670 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [3+TO+10] value = 0
 INFO [main] 2016-07-31 16:04:36,670 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,670 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
 INFO [main] 2016-07-31 16:04:36,671 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
 INFO [main] 2016-07-31 16:04:36,671 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
 INFO [main] 2016-07-31 16:04:36,671 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
 INFO [main] 2016-07-31 16:04:36,671 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
 INFO [main] 2016-07-31 16:04:36,672 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,672 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
 INFO [main] 2016-07-31 16:04:36,672 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,672 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,672 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,672 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,673 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,673 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,673 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
 INFO [main] 2016-07-31 16:04:36,673 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,673 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,674 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,674 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,674 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,674 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,674 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,674 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,674 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,675 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,675 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
 INFO [main] 2016-07-31 16:04:36,675 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,675 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,675 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,675 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,675 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,675 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,676 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
 INFO [main] 2016-07-31 16:04:36,676 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,676 (QueryParserUtils.java:693) - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
 INFO [main] 2016-07-31 16:04:36,676 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
 INFO [main] 2016-07-31 16:04:36,676 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,677 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-07-31 16:04:36,677 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
 INFO [main] 2016-07-31 16:04:36,677 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,677 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-07-31 16:04:36,677 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
 INFO [main] 2016-07-31 16:04:36,677 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,677 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-07-31 16:04:36,677 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
 INFO [main] 2016-07-31 16:04:36,677 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-07-31 16:04:36,678 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,678 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,679 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,679 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
 INFO [main] 2016-07-31 16:04:36,679 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
 INFO [main] 2016-07-31 16:04:36,679 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
 INFO [main] 2016-07-31 16:04:36,679 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
 INFO [main] 2016-07-31 16:04:36,679 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
 INFO [main] 2016-07-31 16:04:36,680 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,680 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
 INFO [main] 2016-07-31 16:04:36,680 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,680 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,680 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,680 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,680 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,680 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,681 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
 INFO [main] 2016-07-31 16:04:36,681 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,681 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,681 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,681 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,681 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,682 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,682 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,682 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,682 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,682 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,682 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
 INFO [main] 2016-07-31 16:04:36,682 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,682 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,683 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,683 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,683 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,683 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,683 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
 INFO [main] 2016-07-31 16:04:36,683 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,683 (QueryParserUtils.java:693) - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
 INFO [main] 2016-07-31 16:04:36,683 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
 INFO [main] 2016-07-31 16:04:36,684 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,684 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-07-31 16:04:36,684 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
 INFO [main] 2016-07-31 16:04:36,684 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,684 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-07-31 16:04:36,684 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
 INFO [main] 2016-07-31 16:04:36,685 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,685 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-07-31 16:04:36,685 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
 INFO [main] 2016-07-31 16:04:36,685 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-07-31 16:04:36,685 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,685 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,685 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
 INFO [main] 2016-07-31 16:04:36,686 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-07-31 16:04:36,686 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-07-31 16:04:36,686 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,686 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-07-31 16:04:36,686 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,686 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-07-31 16:04:36,686 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,687 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-07-31 16:04:36,687 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-07-31 16:04:36,687 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
 INFO [main] 2016-07-31 16:04:36,687 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-07-31 16:04:36,687 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-07-31 16:04:36,687 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,687 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-07-31 16:04:36,688 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,688 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-07-31 16:04:36,688 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,688 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-07-31 16:04:36,688 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,688 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
 INFO [main] 2016-07-31 16:04:36,688 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
 INFO [main] 2016-07-31 16:04:36,689 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
 INFO [main] 2016-07-31 16:04:36,689 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
 INFO [main] 2016-07-31 16:04:36,689 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
 INFO [main] 2016-07-31 16:04:36,689 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,690 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
 INFO [main] 2016-07-31 16:04:36,690 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,690 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,690 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,690 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,691 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,691 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,691 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
 INFO [main] 2016-07-31 16:04:36,691 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,692 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,692 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,692 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,692 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,692 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,692 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,692 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,693 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,693 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,693 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
 INFO [main] 2016-07-31 16:04:36,693 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,694 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,694 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,694 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,694 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-07-31 16:04:36,694 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,694 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
 INFO [main] 2016-07-31 16:04:36,695 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,695 (QueryParserUtils.java:693) - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
 INFO [main] 2016-07-31 16:04:36,695 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
 INFO [main] 2016-07-31 16:04:36,695 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,695 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-07-31 16:04:36,695 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
 INFO [main] 2016-07-31 16:04:36,696 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,696 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-07-31 16:04:36,696 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
 INFO [main] 2016-07-31 16:04:36,696 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,696 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-07-31 16:04:36,696 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
 INFO [main] 2016-07-31 16:04:36,697 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-07-31 16:04:36,697 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,697 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-07-31 16:04:36,697 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
 INFO [main] 2016-07-31 16:04:36,698 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-07-31 16:04:36,698 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-07-31 16:04:36,698 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,698 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-07-31 16:04:36,698 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,699 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-07-31 16:04:36,699 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,699 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-07-31 16:04:36,699 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-07-31 16:04:36,699 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
 INFO [main] 2016-07-31 16:04:36,699 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-07-31 16:04:36,700 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-07-31 16:04:36,700 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,700 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-07-31 16:04:36,700 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,700 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-07-31 16:04:36,700 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-07-31 16:04:36,701 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-07-31 16:04:36,701 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,702 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,702 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,702 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,703 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,703 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,703 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,703 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,704 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,704 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,704 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,704 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,706 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,706 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,706 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,706 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,707 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,707 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,707 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,707 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,708 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,708 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,708 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,708 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,709 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,709 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,710 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,710 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,711 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,712 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,712 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,712 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,712 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,713 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,713 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,713 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,713 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,714 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,714 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,714 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,715 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,715 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,715 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,715 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-07-31 16:04:36,716 (QueryParserUtilsTest.java:137) - running testIgnoreCase
 INFO [main] 2016-07-31 16:04:36,717 (QueryParserUtilsTest.java:157) - completed testIgnoreCase
 INFO [main] 2016-07-31 16:04:36,718 (QueryParserUtilsTest.java:111) - running testQueryFieldDoesNotExist
 INFO [main] 2016-07-31 16:04:36,719 (QueryParserUtilsTest.java:131) - completed testQueryFieldDoesNotExist
