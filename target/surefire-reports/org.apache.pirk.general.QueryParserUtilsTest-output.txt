 INFO [main] 2016-08-30 10:07:12,278 (Inputs.java:520) - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4589880326074589423.xml
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>testDataSchema</schemaName><element><name>date</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner</partitioner></element><element><name>qname</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner</partitioner></element><element><name>src_ip</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.IPDataPartitioner</partitioner></element><element><name>dest_ip</name><type>string</type><partitioner>org.apache.pirk.schema.data.partitioner.IPDataPartitioner</partitioner></element><element><name>qtype</name><type>short</type><isArray/><partitioner>org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner</partitioner></element><element><name>rcode</name><type>int</type><partitioner>org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner</partitioner></element><element><name>ip</name><type>string</type><isArray/><partitioner>org.apache.pirk.schema.data.partitioner.IPDataPartitioner</partitioner></element></schema>
 INFO [main] 2016-08-30 10:07:12,322 (DataSchemaLoader.java:83) - Loading pre-configured data schemas: 
 INFO [main] 2016-08-30 10:07:12,322 (DataSchemaLoader.java:129) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4589880326074589423.xml hdfs = false
 INFO [main] 2016-08-30 10:07:12,323 (DataSchemaLoader.java:144) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4589880326074589423.xml
 INFO [main] 2016-08-30 10:07:12,326 (DataSchemaLoader.java:236) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,326 (DataSchemaLoader.java:194) - schemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,327 (DataSchemaLoader.java:296) - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-08-30 10:07:12,327 (DataSchemaLoader.java:296) - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,327 (DataSchemaLoader.java:296) - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,328 (DataSchemaLoader.java:296) - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,328 (DataSchemaLoader.java:296) - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,328 (DataSchemaLoader.java:296) - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,328 (DataSchemaLoader.java:296) - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,328 (DataSchemaLoader.java:129) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4589880326074589423.xml hdfs = false
 INFO [main] 2016-08-30 10:07:12,328 (DataSchemaLoader.java:144) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4589880326074589423.xml
 INFO [main] 2016-08-30 10:07:12,331 (DataSchemaLoader.java:236) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,332 (DataSchemaLoader.java:194) - schemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,332 (DataSchemaLoader.java:296) - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-08-30 10:07:12,332 (DataSchemaLoader.java:296) - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,332 (DataSchemaLoader.java:296) - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,333 (DataSchemaLoader.java:296) - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,333 (DataSchemaLoader.java:296) - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,333 (DataSchemaLoader.java:296) - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,333 (DataSchemaLoader.java:296) - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,333 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-hostname-query
 INFO [main] 2016-08-30 10:07:12,333 (TestUtils.java:165) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml
 INFO [main] 2016-08-30 10:07:12,334 (TestUtils.java:180) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml
 INFO [main] 2016-08-30 10:07:12,334 (TestUtils.java:213) - elementName = date
 INFO [main] 2016-08-30 10:07:12,335 (TestUtils.java:213) - elementName = src_ip
 INFO [main] 2016-08-30 10:07:12,335 (TestUtils.java:213) - elementName = dest_ip
 INFO [main] 2016-08-30 10:07:12,335 (TestUtils.java:213) - elementName = qtype
 INFO [main] 2016-08-30 10:07:12,335 (TestUtils.java:213) - elementName = rcode
 INFO [main] 2016-08-30 10:07:12,335 (TestUtils.java:213) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-hostname-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>qname</selectorName><elements><name>date</name><name>src_ip</name><name>dest_ip</name><name>qtype</name><name>rcode</name><name>ip</name></elements></schema>
 INFO [main] 2016-08-30 10:07:12,336 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-ip-query
 INFO [main] 2016-08-30 10:07:12,337 (TestUtils.java:165) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1196720529497020549.xml
 INFO [main] 2016-08-30 10:07:12,337 (TestUtils.java:180) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1196720529497020549.xml
 INFO [main] 2016-08-30 10:07:12,338 (TestUtils.java:213) - elementName = src_ip
 INFO [main] 2016-08-30 10:07:12,338 (TestUtils.java:213) - elementName = dest_ip
 INFO [main] 2016-08-30 10:07:12,338 (TestUtils.java:213) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-ip-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>ip</selectorName><elements><name>src_ip</name><name>dest_ip</name><name>ip</name></elements></schema>
 INFO [main] 2016-08-30 10:07:12,339 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-nxdomain-query
 INFO [main] 2016-08-30 10:07:12,340 (TestUtils.java:165) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1381641996085440345.xml
 INFO [main] 2016-08-30 10:07:12,340 (TestUtils.java:180) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1196720529497020549.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1381641996085440345.xml
 INFO [main] 2016-08-30 10:07:12,341 (TestUtils.java:213) - elementName = qname
 INFO [main] 2016-08-30 10:07:12,341 (TestUtils.java:213) - elementName = src_ip
 INFO [main] 2016-08-30 10:07:12,341 (TestUtils.java:213) - elementName = dest_ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-nxdomain-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>qname</selectorName><elements><name>qname</name><name>src_ip</name><name>dest_ip</name></elements></schema>
 INFO [main] 2016-08-30 10:07:12,342 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-srcip-query
 INFO [main] 2016-08-30 10:07:12,343 (TestUtils.java:165) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2499237543566297399.xml
 INFO [main] 2016-08-30 10:07:12,343 (TestUtils.java:180) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1196720529497020549.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1381641996085440345.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2499237543566297399.xml
 INFO [main] 2016-08-30 10:07:12,344 (TestUtils.java:213) - elementName = qname
 INFO [main] 2016-08-30 10:07:12,344 (TestUtils.java:213) - elementName = dest_ip
 INFO [main] 2016-08-30 10:07:12,344 (TestUtils.java:213) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-srcip-query</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>src_ip</selectorName><elements><name>qname</name><name>dest_ip</name><name>ip</name></elements></schema>
 INFO [main] 2016-08-30 10:07:12,345 (TestUtils.java:144) - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
 INFO [main] 2016-08-30 10:07:12,346 (TestUtils.java:165) - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2296542113445456531.xml
 INFO [main] 2016-08-30 10:07:12,346 (TestUtils.java:180) - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1196720529497020549.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1381641996085440345.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2499237543566297399.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2296542113445456531.xml
 INFO [main] 2016-08-30 10:07:12,347 (TestUtils.java:213) - elementName = qname
 INFO [main] 2016-08-30 10:07:12,347 (TestUtils.java:213) - elementName = dest_ip
 INFO [main] 2016-08-30 10:07:12,347 (TestUtils.java:213) - elementName = ip
<?xml version="1.0" encoding="UTF-8" standalone="no"?><schema><schemaName>dns-srcip-query-no-filter</schemaName><dataSchemaName>testDataSchema</dataSchemaName><selectorName>src_ip</selectorName><elements><name>qname</name><name>dest_ip</name><name>ip</name></elements></schema>
 INFO [main] 2016-08-30 10:07:12,350 (QuerySchemaLoader.java:83) - Loading query schemas: 
 INFO [main] 2016-08-30 10:07:12,350 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml
 INFO [main] 2016-08-30 10:07:12,350 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml
 INFO [main] 2016-08-30 10:07:12,352 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,352 (QuerySchemaLoader.java:190) - schemaName = dns-hostname-query
 INFO [main] 2016-08-30 10:07:12,352 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,352 (QuerySchemaLoader.java:205) - selectorName = qname
 INFO [main] 2016-08-30 10:07:12,353 (QuerySchemaLoader.java:234) - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-08-30 10:07:12,353 (QuerySchemaLoader.java:247) - name = date bits = 64 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,353 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,353 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-30 10:07:12,353 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,353 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-08-30 10:07:12,354 (QuerySchemaLoader.java:234) - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,354 (QuerySchemaLoader.java:247) - name = qtype bits = 32 dataElementSize = 160
 INFO [main] 2016-08-30 10:07:12,354 (QuerySchemaLoader.java:234) - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,354 (QuerySchemaLoader.java:247) - name = rcode bits = 32 dataElementSize = 192
 INFO [main] 2016-08-30 10:07:12,354 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,354 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 256
 INFO [main] 2016-08-30 10:07:12,355 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1196720529497020549.xml
 INFO [main] 2016-08-30 10:07:12,355 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1196720529497020549.xml
 INFO [main] 2016-08-30 10:07:12,357 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,357 (QuerySchemaLoader.java:190) - schemaName = dns-ip-query
 INFO [main] 2016-08-30 10:07:12,357 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,357 (QuerySchemaLoader.java:205) - selectorName = ip
 INFO [main] 2016-08-30 10:07:12,358 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,358 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 32
 INFO [main] 2016-08-30 10:07:12,358 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,358 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,358 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,358 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 128
 INFO [main] 2016-08-30 10:07:12,358 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1381641996085440345.xml
 INFO [main] 2016-08-30 10:07:12,359 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1381641996085440345.xml
 INFO [main] 2016-08-30 10:07:12,360 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,361 (QuerySchemaLoader.java:190) - schemaName = dns-nxdomain-query
 INFO [main] 2016-08-30 10:07:12,361 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,361 (QuerySchemaLoader.java:205) - selectorName = qname
 INFO [main] 2016-08-30 10:07:12,361 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,361 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,361 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,362 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-30 10:07:12,362 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,362 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-08-30 10:07:12,362 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2499237543566297399.xml
 INFO [main] 2016-08-30 10:07:12,362 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2499237543566297399.xml
 INFO [main] 2016-08-30 10:07:12,364 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,364 (QuerySchemaLoader.java:190) - schemaName = dns-srcip-query
 INFO [main] 2016-08-30 10:07:12,364 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,364 (QuerySchemaLoader.java:205) - selectorName = src_ip
 INFO [main] 2016-08-30 10:07:12,364 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,365 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,365 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,365 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-30 10:07:12,365 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,365 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-08-30 10:07:12,365 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2296542113445456531.xml
 INFO [main] 2016-08-30 10:07:12,365 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2296542113445456531.xml
 INFO [main] 2016-08-30 10:07:12,367 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,367 (QuerySchemaLoader.java:190) - schemaName = dns-srcip-query-no-filter
 INFO [main] 2016-08-30 10:07:12,367 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,367 (QuerySchemaLoader.java:205) - selectorName = src_ip
 INFO [main] 2016-08-30 10:07:12,367 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,367 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,368 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,368 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-30 10:07:12,368 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,368 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-08-30 10:07:12,368 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml
 INFO [main] 2016-08-30 10:07:12,368 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1829146817560158855.xml
 INFO [main] 2016-08-30 10:07:12,370 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,370 (QuerySchemaLoader.java:190) - schemaName = dns-hostname-query
 INFO [main] 2016-08-30 10:07:12,370 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,370 (QuerySchemaLoader.java:205) - selectorName = qname
 INFO [main] 2016-08-30 10:07:12,370 (QuerySchemaLoader.java:234) - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
 INFO [main] 2016-08-30 10:07:12,371 (QuerySchemaLoader.java:247) - name = date bits = 64 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,371 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,371 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-30 10:07:12,371 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,371 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-08-30 10:07:12,371 (QuerySchemaLoader.java:234) - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,371 (QuerySchemaLoader.java:247) - name = qtype bits = 32 dataElementSize = 160
 INFO [main] 2016-08-30 10:07:12,371 (QuerySchemaLoader.java:234) - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,371 (QuerySchemaLoader.java:247) - name = rcode bits = 32 dataElementSize = 192
 INFO [main] 2016-08-30 10:07:12,372 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,372 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 256
 INFO [main] 2016-08-30 10:07:12,372 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1196720529497020549.xml
 INFO [main] 2016-08-30 10:07:12,372 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file1196720529497020549.xml
 INFO [main] 2016-08-30 10:07:12,374 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,374 (QuerySchemaLoader.java:190) - schemaName = dns-ip-query
 INFO [main] 2016-08-30 10:07:12,374 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,374 (QuerySchemaLoader.java:205) - selectorName = ip
 INFO [main] 2016-08-30 10:07:12,374 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,374 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 32
 INFO [main] 2016-08-30 10:07:12,374 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,375 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,375 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,375 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 128
 INFO [main] 2016-08-30 10:07:12,375 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1381641996085440345.xml
 INFO [main] 2016-08-30 10:07:12,375 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1381641996085440345.xml
 INFO [main] 2016-08-30 10:07:12,376 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,377 (QuerySchemaLoader.java:190) - schemaName = dns-nxdomain-query
 INFO [main] 2016-08-30 10:07:12,377 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,377 (QuerySchemaLoader.java:205) - selectorName = qname
 INFO [main] 2016-08-30 10:07:12,377 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,377 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,377 (QuerySchemaLoader.java:234) - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,377 (QuerySchemaLoader.java:247) - name = src_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-30 10:07:12,377 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,377 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 128
 INFO [main] 2016-08-30 10:07:12,378 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2499237543566297399.xml
 INFO [main] 2016-08-30 10:07:12,378 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2499237543566297399.xml
 INFO [main] 2016-08-30 10:07:12,379 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,380 (QuerySchemaLoader.java:190) - schemaName = dns-srcip-query
 INFO [main] 2016-08-30 10:07:12,380 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,380 (QuerySchemaLoader.java:205) - selectorName = src_ip
 INFO [main] 2016-08-30 10:07:12,380 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,380 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,380 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,380 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-30 10:07:12,381 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,381 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-08-30 10:07:12,381 (QuerySchemaLoader.java:128) - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2296542113445456531.xml
 INFO [main] 2016-08-30 10:07:12,381 (QuerySchemaLoader.java:143) - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file2296542113445456531.xml
 INFO [main] 2016-08-30 10:07:12,382 (QuerySchemaLoader.java:292) - Root element: schema
 INFO [main] 2016-08-30 10:07:12,382 (QuerySchemaLoader.java:190) - schemaName = dns-srcip-query-no-filter
 INFO [main] 2016-08-30 10:07:12,383 (QuerySchemaLoader.java:194) - dataSchemaName = testDataSchema
 INFO [main] 2016-08-30 10:07:12,383 (QuerySchemaLoader.java:205) - selectorName = src_ip
 INFO [main] 2016-08-30 10:07:12,383 (QuerySchemaLoader.java:234) - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
 INFO [main] 2016-08-30 10:07:12,383 (QuerySchemaLoader.java:247) - name = qname bits = 64 dataElementSize = 64
 INFO [main] 2016-08-30 10:07:12,383 (QuerySchemaLoader.java:234) - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,383 (QuerySchemaLoader.java:247) - name = dest_ip bits = 32 dataElementSize = 96
 INFO [main] 2016-08-30 10:07:12,383 (QuerySchemaLoader.java:234) - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
 INFO [main] 2016-08-30 10:07:12,383 (QuerySchemaLoader.java:247) - name = ip bits = 64 dataElementSize = 160
 INFO [main] 2016-08-30 10:07:12,430 (QueryParserUtils.java:672) - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,430 (QueryParserUtils.java:736) - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,430 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,431 (QueryParserUtils.java:738) - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,432 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,432 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,433 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,433 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,433 (QueryParserUtils.java:672) - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,433 (QueryParserUtils.java:736) - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,433 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,434 (QueryParserUtils.java:738) - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,434 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,435 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-30 10:07:12,435 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,435 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-30 10:07:12,436 (QueryParserUtils.java:672) - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,436 (QueryParserUtils.java:736) - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,436 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,436 (QueryParserUtils.java:738) - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,437 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,437 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,437 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,437 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,438 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,438 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,438 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,438 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,439 (QueryParserUtils.java:672) - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,439 (QueryParserUtils.java:736) - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,439 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,439 (QueryParserUtils.java:738) - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,439 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,440 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,440 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,440 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,440 (QueryParserUtils.java:672) - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,441 (QueryParserUtils.java:736) - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,441 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,441 (QueryParserUtils.java:738) - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,441 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,441 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-30 10:07:12,441 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,442 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-30 10:07:12,442 (QueryParserUtils.java:672) - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,442 (QueryParserUtils.java:736) - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,442 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,442 (QueryParserUtils.java:738) - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,443 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,443 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,443 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,443 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,444 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,444 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,444 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,444 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,445 (QueryParserUtils.java:672) - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,445 (QueryParserUtils.java:736) - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,445 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,445 (QueryParserUtils.java:738) - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,446 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,446 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,446 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,446 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,446 (QueryParserUtils.java:672) - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,447 (QueryParserUtils.java:736) - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,447 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,447 (QueryParserUtils.java:738) - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,447 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,447 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-30 10:07:12,448 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,448 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
 INFO [main] 2016-08-30 10:07:12,448 (QueryParserUtils.java:672) - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,448 (QueryParserUtils.java:736) - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,448 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,448 (QueryParserUtils.java:738) - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,449 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,449 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,449 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,449 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,450 (QueryParserUtils.java:672) - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,450 (QueryParserUtils.java:736) - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,450 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,450 (QueryParserUtils.java:738) - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
 INFO [main] 2016-08-30 10:07:12,455 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [0+TO+2] value = 0
 INFO [main] 2016-08-30 10:07:12,455 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {-1+TO+2} value = 0
 INFO [main] 2016-08-30 10:07:12,455 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [-1+TO+0] value = 0
 INFO [main] 2016-08-30 10:07:12,456 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {0+TO+3} value = 0
 INFO [main] 2016-08-30 10:07:12,456 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [3+TO+10] value = 0
 INFO [main] 2016-08-30 10:07:12,456 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [0+TO+2] value = 0
 INFO [main] 2016-08-30 10:07:12,457 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {-1+TO+2} value = 0
 INFO [main] 2016-08-30 10:07:12,457 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [-1+TO+0] value = 0
 INFO [main] 2016-08-30 10:07:12,457 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {0+TO+3} value = 0
 INFO [main] 2016-08-30 10:07:12,457 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [3+TO+10] value = 0
 INFO [main] 2016-08-30 10:07:12,457 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [0+TO+2] value = 0
 INFO [main] 2016-08-30 10:07:12,458 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {-1+TO+2} value = 0
 INFO [main] 2016-08-30 10:07:12,458 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [-1+TO+0] value = 0
 INFO [main] 2016-08-30 10:07:12,458 (QueryParserUtils.java:672) - inclusive = false field = rcode query = {0+TO+3} value = 0
 INFO [main] 2016-08-30 10:07:12,458 (QueryParserUtils.java:672) - inclusive = true field = rcode query = [3+TO+10] value = 0
 INFO [main] 2016-08-30 10:07:12,459 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,459 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
 INFO [main] 2016-08-30 10:07:12,459 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-30 10:07:12,460 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-30 10:07:12,460 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-30 10:07:12,460 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-30 10:07:12,460 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,460 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
 INFO [main] 2016-08-30 10:07:12,460 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,461 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,461 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,461 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,461 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,461 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,461 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
 INFO [main] 2016-08-30 10:07:12,461 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,462 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,462 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,462 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,462 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,462 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,462 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,462 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,462 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,463 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,463 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
 INFO [main] 2016-08-30 10:07:12,463 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,463 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,463 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,463 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,463 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,463 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,464 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
 INFO [main] 2016-08-30 10:07:12,464 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,464 (QueryParserUtils.java:693) - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
 INFO [main] 2016-08-30 10:07:12,464 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-30 10:07:12,464 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,464 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-30 10:07:12,464 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-30 10:07:12,465 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,465 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-30 10:07:12,465 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
 INFO [main] 2016-08-30 10:07:12,465 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,465 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-30 10:07:12,465 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-30 10:07:12,465 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-30 10:07:12,465 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,466 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,467 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,467 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
 INFO [main] 2016-08-30 10:07:12,467 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-30 10:07:12,467 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-30 10:07:12,467 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-30 10:07:12,467 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-30 10:07:12,468 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,468 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
 INFO [main] 2016-08-30 10:07:12,468 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,468 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,468 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,469 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,469 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,469 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,469 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
 INFO [main] 2016-08-30 10:07:12,469 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,469 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,470 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,470 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,470 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,470 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,470 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,470 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,471 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,471 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,471 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
 INFO [main] 2016-08-30 10:07:12,471 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,471 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,472 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,472 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,472 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,472 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,472 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
 INFO [main] 2016-08-30 10:07:12,472 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,473 (QueryParserUtils.java:693) - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
 INFO [main] 2016-08-30 10:07:12,473 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-30 10:07:12,473 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,473 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-30 10:07:12,473 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-30 10:07:12,473 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,473 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-30 10:07:12,473 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
 INFO [main] 2016-08-30 10:07:12,474 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,474 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-30 10:07:12,474 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-30 10:07:12,474 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-30 10:07:12,474 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,474 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,474 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
 INFO [main] 2016-08-30 10:07:12,475 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-08-30 10:07:12,475 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-30 10:07:12,475 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,475 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-08-30 10:07:12,476 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,476 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-08-30 10:07:12,476 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,476 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-08-30 10:07:12,476 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-30 10:07:12,476 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
 INFO [main] 2016-08-30 10:07:12,476 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-08-30 10:07:12,477 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-30 10:07:12,477 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,477 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-08-30 10:07:12,477 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,477 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-08-30 10:07:12,477 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,477 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-08-30 10:07:12,478 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,478 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
 INFO [main] 2016-08-30 10:07:12,478 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-30 10:07:12,478 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-30 10:07:12,478 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-30 10:07:12,478 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
 INFO [main] 2016-08-30 10:07:12,479 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,479 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
 INFO [main] 2016-08-30 10:07:12,479 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,479 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,479 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,479 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,479 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,479 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,479 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
 INFO [main] 2016-08-30 10:07:12,480 (QueryParserUtils.java:672) - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,480 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,480 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,480 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,480 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,480 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,481 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,481 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,481 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,481 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,481 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
 INFO [main] 2016-08-30 10:07:12,482 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,482 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,482 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,482 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,482 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
 INFO [main] 2016-08-30 10:07:12,482 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,482 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
 INFO [main] 2016-08-30 10:07:12,483 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,483 (QueryParserUtils.java:693) - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
 INFO [main] 2016-08-30 10:07:12,483 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
 INFO [main] 2016-08-30 10:07:12,483 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,483 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-30 10:07:12,483 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
 INFO [main] 2016-08-30 10:07:12,484 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,484 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-30 10:07:12,484 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
 INFO [main] 2016-08-30 10:07:12,484 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,484 (QueryParserUtils.java:716) - !ipValue[ipBlock].equals(blocksLower[ipBlock]
 INFO [main] 2016-08-30 10:07:12,484 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-30 10:07:12,485 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-30 10:07:12,485 (QueryParserUtils.java:672) - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,485 (QueryParserUtils.java:693) - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
 INFO [main] 2016-08-30 10:07:12,485 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
 INFO [main] 2016-08-30 10:07:12,486 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-08-30 10:07:12,486 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-30 10:07:12,486 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,486 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-08-30 10:07:12,486 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,486 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-08-30 10:07:12,487 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,487 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-08-30 10:07:12,487 (QueryParserUtils.java:725) - IP block not within given range
 INFO [main] 2016-08-30 10:07:12,487 (QueryParserUtils.java:672) - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
 INFO [main] 2016-08-30 10:07:12,487 (QueryParserUtils.java:693) - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
 INFO [main] 2016-08-30 10:07:12,487 (QueryParserUtils.java:708) - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
 INFO [main] 2016-08-30 10:07:12,488 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,488 (QueryParserUtils.java:708) - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
 INFO [main] 2016-08-30 10:07:12,488 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,488 (QueryParserUtils.java:708) - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
 INFO [main] 2016-08-30 10:07:12,488 (QueryParserUtils.java:713) - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
 INFO [main] 2016-08-30 10:07:12,489 (QueryParserUtils.java:708) - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
 INFO [main] 2016-08-30 10:07:12,489 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,490 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,490 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,490 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,491 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,491 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,491 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,491 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,492 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,493 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,493 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,493 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,494 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,494 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,494 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,494 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,495 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,495 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,495 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,495 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,496 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,496 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,496 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,496 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,497 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,497 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,497 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,498 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,498 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,499 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,499 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,499 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,499 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,500 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,500 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,500 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,500 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,500 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,500 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,500 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,501 (QueryParserUtils.java:672) - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,501 (QueryParserUtils.java:736) - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,501 (QueryParserUtils.java:737) - value:2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,501 (QueryParserUtils.java:738) - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
 INFO [main] 2016-08-30 10:07:12,502 (QueryParserUtilsTest.java:132) - running testIgnoreCase
 INFO [main] 2016-08-30 10:07:12,502 (QueryParserUtilsTest.java:152) - completed testIgnoreCase
 INFO [main] 2016-08-30 10:07:12,503 (QueryParserUtilsTest.java:106) - running testQueryFieldDoesNotExist
 INFO [main] 2016-08-30 10:07:12,504 (QueryParserUtilsTest.java:126) - completed testQueryFieldDoesNotExist
