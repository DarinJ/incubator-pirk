2016-08-10 12:39:47,175 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-10 12:39:47,180 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-10 12:39:47,182 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-10 12:39:47,185 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 12:39:47,185 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 12:39:47,185 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 12:39:47,186 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-10 12:39:47,188 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-10 12:39:47,202 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-10 12:39:47,202 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-10 12:39:47,203 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-10 12:39:47,203 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-10 12:39:47,204 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-10 12:39:47,204 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-10 12:39:47,205 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-10 12:39:47,205 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-10 12:39:47,206 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-10 12:39:47,206 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-10 12:39:47,186 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 12:39:47,207 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-10 12:39:47,208 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-10 12:39:47,209 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-10 12:39:47,210 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-10 12:39:47,210 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 12:39:47,208 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 12:39:47,219 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 12:39:47,230 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7938838333477454065.xml
2016-08-10 12:39:47,290 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-10 12:39:47,291 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7938838333477454065.xml hdfs = false
2016-08-10 12:39:47,292 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7938838333477454065.xml
2016-08-10 12:39:47,296 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,297 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 12:39:47,300 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:39:47,301 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,301 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,302 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,302 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,303 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,303 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,304 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7938838333477454065.xml hdfs = false
2016-08-10 12:39:47,308 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7938838333477454065.xml
2016-08-10 12:39:47,311 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,316 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 12:39:47,316 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:39:47,318 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,319 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,320 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,321 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,321 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,322 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,322 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 12:39:47,323 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml
2016-08-10 12:39:47,323 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml
2016-08-10 12:39:47,326 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 12:39:47,326 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:39:47,327 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:39:47,327 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 12:39:47,327 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 12:39:47,328 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:39:47,330 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 12:39:47,331 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file263759201932059203.xml
2016-08-10 12:39:47,332 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file263759201932059203.xml
2016-08-10 12:39:47,333 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:39:47,335 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:39:47,335 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:39:47,338 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 12:39:47,339 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1200141204488578152.xml
2016-08-10 12:39:47,339 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file263759201932059203.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1200141204488578152.xml
2016-08-10 12:39:47,341 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:39:47,341 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:39:47,342 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:39:47,344 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 12:39:47,348 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7340189706167294703.xml
2016-08-10 12:39:47,349 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file263759201932059203.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1200141204488578152.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7340189706167294703.xml
2016-08-10 12:39:47,351 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:39:47,352 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:39:47,352 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:39:47,357 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 12:39:47,358 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1956957120747958123.xml
2016-08-10 12:39:47,359 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file263759201932059203.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1200141204488578152.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7340189706167294703.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1956957120747958123.xml
2016-08-10 12:39:47,369 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:39:47,373 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:39:47,383 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 12:39:47,384 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 12:39:47,384 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 12:39:47,384 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 12:39:47,384 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 12:39:47,385 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 12:39:47,385 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 12:39:47,389 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-10 12:39:47,389 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-10 12:39:47,392 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 12:39:47,393 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 12:39:47,394 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 12:39:47,376 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:39:47,398 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 12:39:47,399 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:39:47,401 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-10 12:39:47,402 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml
2016-08-10 12:39:47,402 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml
2016-08-10 12:39:47,405 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,407 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-10 12:39:47,407 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 12:39:47,410 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,410 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:39:47,411 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:39:47,419 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 12:39:47,421 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,421 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:39:47,421 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,429 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:39:47,431 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,432 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 12:39:47,433 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,435 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 12:39:47,436 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,436 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 12:39:47,437 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file263759201932059203.xml
2016-08-10 12:39:47,438 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file263759201932059203.xml
2016-08-10 12:39:47,440 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,442 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 12:39:47,443 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,443 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 12:39:47,443 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,444 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 12:39:47,444 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,444 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 12:39:47,444 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,445 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 12:39:47,445 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1200141204488578152.xml
2016-08-10 12:39:47,445 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1200141204488578152.xml
2016-08-10 12:39:47,448 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,449 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 12:39:47,449 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,449 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:39:47,450 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,450 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:39:47,450 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,451 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:39:47,451 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,451 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:39:47,451 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7340189706167294703.xml
2016-08-10 12:39:47,452 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7340189706167294703.xml
2016-08-10 12:39:47,454 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,454 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 12:39:47,455 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,455 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:39:47,455 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,455 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:39:47,456 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,456 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:39:47,456 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,457 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:39:47,457 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1956957120747958123.xml
2016-08-10 12:39:47,457 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1956957120747958123.xml
2016-08-10 12:39:47,460 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,461 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 12:39:47,462 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,462 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:39:47,463 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,463 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:39:47,463 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,463 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:39:47,464 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,464 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:39:47,464 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml
2016-08-10 12:39:47,466 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file771484927437330731.xml
2016-08-10 12:39:47,468 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,469 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 12:39:47,469 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,469 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:39:47,469 INFO  encryption.Paillier  [] - Parameters = p = 1547030521 q = 1377243743 N = 1911992167 NSquared = -2145256591 lambdaN = 547114200 bitLength = 201
2016-08-10 12:39:47,469 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:39:47,470 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 12:39:47,470 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,470 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:39:47,470 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,471 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:39:47,471 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,471 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 12:39:47,471 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,472 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 12:39:47,472 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,472 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 12:39:47,472 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file263759201932059203.xml
2016-08-10 12:39:47,473 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file263759201932059203.xml
2016-08-10 12:39:47,475 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,475 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 12:39:47,476 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,476 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 12:39:47,476 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,477 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 12:39:47,477 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,477 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 12:39:47,477 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,477 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 12:39:47,478 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1200141204488578152.xml
2016-08-10 12:39:47,478 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1200141204488578152.xml
2016-08-10 12:39:47,480 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,480 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 12:39:47,481 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,481 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:39:47,481 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,481 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:39:47,482 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,482 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:39:47,482 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,482 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:39:47,482 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7340189706167294703.xml
2016-08-10 12:39:47,483 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7340189706167294703.xml
2016-08-10 12:39:47,485 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,485 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 12:39:47,487 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,487 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:39:47,488 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,490 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:39:47,490 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,490 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:39:47,494 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,495 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:39:47,496 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1956957120747958123.xml
2016-08-10 12:39:47,497 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1956957120747958123.xml
2016-08-10 12:39:47,499 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:39:47,500 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 12:39:47,501 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:39:47,502 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:39:47,502 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:39:47,502 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:39:47,503 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,503 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:39:47,503 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:39:47,504 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:39:47,559 INFO  general.PaillierTest  [] - encM1 = 1639143963 encM2 = 1423379363
2016-08-10 12:39:47,560 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:39:47,561 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1636804437 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:39:47,634 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,634 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,635 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,635 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,638 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,639 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 12:39:47,639 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,639 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 12:39:47,640 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,641 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 12:39:47,641 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,641 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 12:39:47,642 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,643 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 12:39:47,646 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,646 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 12:39:47,647 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,648 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 12:39:47,648 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,648 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 12:39:47,649 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,649 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,649 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,650 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,650 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,651 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 12:39:47,651 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,651 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 12:39:47,652 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,653 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,653 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,653 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,654 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,654 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 12:39:47,654 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,655 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 12:39:47,655 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,656 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 12:39:47,656 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,656 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 12:39:47,656 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,657 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 12:39:47,657 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,657 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 12:39:47,658 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,658 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 12:39:47,658 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,658 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 12:39:47,659 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,659 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,660 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,660 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,660 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,661 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 12:39:47,661 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,661 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 12:39:47,662 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,663 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,664 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,665 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,665 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,666 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 12:39:47,666 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,667 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 12:39:47,667 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,668 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 12:39:47,668 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,668 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 12:39:47,669 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,669 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 12:39:47,670 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,670 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 12:39:47,670 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,671 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 12:39:47,671 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,671 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 12:39:47,672 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,672 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,672 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,673 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,673 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,674 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 12:39:47,674 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,674 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 12:39:47,682 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 12:39:47,682 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 12:39:47,683 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 12:39:47,683 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 12:39:47,684 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 12:39:47,684 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 12:39:47,685 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 12:39:47,685 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 12:39:47,685 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 12:39:47,686 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 12:39:47,686 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 12:39:47,687 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 12:39:47,687 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 12:39:47,687 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 12:39:47,688 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 12:39:47,689 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 12:39:47,689 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 12:39:47,690 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 12:39:47,690 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 12:39:47,690 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 12:39:47,690 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 12:39:47,690 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 12:39:47,691 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 12:39:47,691 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,691 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,691 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,692 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,692 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,692 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,692 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 12:39:47,693 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 12:39:47,693 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:39:47,693 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,693 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,693 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,694 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,694 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,694 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,694 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,695 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 12:39:47,695 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 12:39:47,695 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,695 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,696 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,696 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,696 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,696 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,696 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 12:39:47,697 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 12:39:47,697 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 12:39:47,697 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 12:39:47,697 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,698 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:39:47,698 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 12:39:47,698 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,698 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:39:47,698 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 12:39:47,699 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,699 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:39:47,699 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 12:39:47,699 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:39:47,700 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 12:39:47,700 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:39:47,701 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 12:39:47,701 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 12:39:47,701 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 12:39:47,701 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 12:39:47,702 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 12:39:47,702 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 12:39:47,702 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 12:39:47,702 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 12:39:47,702 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,703 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,703 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,703 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,703 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,703 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,703 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 12:39:47,704 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 12:39:47,704 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:39:47,704 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,704 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,705 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,705 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,705 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,705 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,705 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,706 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 12:39:47,706 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 12:39:47,706 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,706 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,706 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,707 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,707 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,707 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,708 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 12:39:47,709 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 12:39:47,709 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 12:39:47,709 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 12:39:47,709 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,710 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:39:47,710 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 12:39:47,710 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,710 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:39:47,710 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 12:39:47,711 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,711 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:39:47,711 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 12:39:47,711 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:39:47,712 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 12:39:47,712 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:39:47,712 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 12:39:47,713 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 12:39:47,713 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 12:39:47,713 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,713 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 12:39:47,713 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,714 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 12:39:47,714 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,714 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 12:39:47,714 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:39:47,715 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 12:39:47,715 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 12:39:47,715 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 12:39:47,715 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,716 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 12:39:47,716 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,716 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 12:39:47,716 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,716 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 12:39:47,717 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 12:39:47,717 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 12:39:47,717 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 12:39:47,718 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 12:39:47,718 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 12:39:47,718 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 12:39:47,718 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 12:39:47,719 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 12:39:47,719 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,719 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,720 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,720 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,720 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,720 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,721 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 12:39:47,721 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 12:39:47,721 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:39:47,721 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,722 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,722 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,722 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,722 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,722 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,723 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,723 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 12:39:47,723 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 12:39:47,724 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,724 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,724 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,724 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,724 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:39:47,725 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,725 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 12:39:47,725 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 12:39:47,725 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 12:39:47,726 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 12:39:47,726 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,726 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:39:47,726 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 12:39:47,726 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,727 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:39:47,727 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 12:39:47,727 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,727 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:39:47,727 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 12:39:47,728 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:39:47,728 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 12:39:47,728 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:39:47,729 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 12:39:47,729 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 12:39:47,729 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 12:39:47,729 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,729 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 12:39:47,730 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,730 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 12:39:47,730 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,730 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 12:39:47,730 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:39:47,730 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 12:39:47,730 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 12:39:47,731 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 12:39:47,731 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,731 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 12:39:47,731 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,731 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 12:39:47,731 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:39:47,732 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 12:39:47,732 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,733 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,733 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,733 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,734 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,734 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,734 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,735 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,735 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,735 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,736 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,736 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,737 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,737 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,737 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,737 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,738 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,738 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,738 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,738 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,739 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,739 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,739 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,739 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,740 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,740 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,740 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,740 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,742 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,742 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,742 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,743 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,743 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,743 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,743 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,744 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,744 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,744 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,745 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,745 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,745 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,745 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,745 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,746 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:39:47,746 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-10 12:39:47,747 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-10 12:39:47,749 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-10 12:39:47,750 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-10 12:39:48,828 INFO  encryption.Paillier  [] - Parameters = p = 255970507 q = 1897378459 N = -25615127 NSquared = 1167350801 lambdaN = -1089482046 bitLength = 3072
2016-08-10 12:39:48,957 INFO  general.PaillierTest  [] - encM1 = -259816474 encM2 = 1226499996
2016-08-10 12:39:49,081 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:39:49,147 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1990498800 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:40:56,919 INFO  encryption.Paillier  [] - Parameters = p = -168394479 q = 1887962255 N = 1069440127 NSquared = -269515007 lambdaN = -108354608 bitLength = 6542
2016-08-10 12:40:57,974 INFO  general.PaillierTest  [] - encM1 = 1178646610 encM2 = 1873646951
2016-08-10 12:40:59,075 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:40:59,588 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1160842962 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:40:59,588 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 12:40:59,588 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:40:59,600 INFO  encryption.Paillier  [] - testBit true
 N = 10101010101011110110000000001110001001110100000001001100010001010100110010101111110101000011100001110000010011010010000101100000111110111010010110001101001111011110000010011001010101111110110011100111
2016-08-10 12:40:59,600 INFO  encryption.Paillier  [] - Parameters = p = -1000729957 q = -1967047259 N = -1722290969 NSquared = -29575055 lambdaN = 702530060 bitLength = 201
2016-08-10 12:40:59,600 INFO  general.PaillierTest  [] - encM1 = -1899744354 encM2 = 845920074
2016-08-10 12:40:59,601 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:40:59,601 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1602485874 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:41:01,607 INFO  encryption.Paillier  [] - testBit false

2016-08-10 12:41:03,134 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:41:03,136 INFO  encryption.Paillier  [] - Parameters = p = -1011085925 q = 1076640457 N = 1616891059 NSquared = -796408535 lambdaN = 775668264 bitLength = 3072
2016-08-10 12:41:03,259 INFO  general.PaillierTest  [] - encM1 = 723713079 encM2 = 908697053
2016-08-10 12:41:03,375 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:41:03,433 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1970239239 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:41:16,495 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:41:16,500 INFO  encryption.Paillier  [] - Parameters = p = 225594339 q = 1024116613 N = -482549265 NSquared = -1989280479 lambdaN = 1281353540 bitLength = 5472
2016-08-10 12:41:17,123 INFO  general.PaillierTest  [] - encM1 = 117253697 encM2 = -1048233975
2016-08-10 12:41:17,754 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:41:18,137 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1126987149 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:41:18,138 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 12:41:18,138 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:41:18,144 INFO  encryption.Paillier  [] - Parameters = p = 1414372963 q = 1630766339 N = 1626032681 NSquared = -54412655 lambdaN = 1437930338 bitLength = 201
2016-08-10 12:41:18,144 INFO  general.PaillierTest  [] - encM1 = -701858750 encM2 = -1253031484
2016-08-10 12:41:18,145 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:41:18,146 INFO  general.PaillierTest  [] - encM1_times_encM2 = 849009798 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:41:18,654 INFO  encryption.Paillier  [] - Parameters = p = 1849466843 q = 622081123 N = 369511857 NSquared = 668988513 lambdaN = -1051018054 bitLength = 3072
2016-08-10 12:41:18,782 INFO  general.PaillierTest  [] - encM1 = 1632331873 encM2 = -13008172
2016-08-10 12:41:18,900 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:41:18,955 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5681795 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:41:25,189 INFO  encryption.Paillier  [] - Parameters = p = -1983126173 q = -887362957 N = -122320519 NSquared = 518830897 lambdaN = -773399342 bitLength = 3744
2016-08-10 12:41:25,391 INFO  general.PaillierTest  [] - encM1 = -1888675908 encM2 = 1464277361
2016-08-10 12:41:25,602 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:41:25,699 INFO  general.PaillierTest  [] - encM1_times_encM2 = -151488371 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:41:25,700 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 12:41:25,700 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:41:25,702 INFO  encryption.Paillier  [] - testBit true
 N = 10111001000010011100000000111001110111001001010111000011001001000011101111100011011110110111111001101010001011011101011001100100111111110100111111011001101000010101001111111111000001010011011101111001
2016-08-10 12:41:25,702 INFO  encryption.Paillier  [] - Parameters = p = 1602314859 q = -292819285 N = -16435335 NSquared = 1153382193 lambdaN = 1484518194 bitLength = 201
2016-08-10 12:41:25,703 INFO  general.PaillierTest  [] - encM1 = -1841557260 encM2 = -247213967
2016-08-10 12:41:25,703 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:41:25,704 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2022873564 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:41:27,182 INFO  encryption.Paillier  [] - testBit false

2016-08-10 12:41:30,275 INFO  encryption.Paillier  [] - testBit false
 N = 101110111010100110100001000010010101001100100111101000001001111000001010011010010110011100110110111000001110111111101001101110111011001110111100000001100010011111100100000101001001100100001101001101111110101111000101111110010011110101011010101000000100110010110010101100111100101011001000111110100010111110011110000011111000110001101101011111101011110010000100100010110110010011000011010101001111101110011011000011101111101101111011010100010100100000110110010010101101000101011011000110110011111100001011110000011100110001010010011111010011011111100110000101100011011010101111010110011010100101100001100011101000010000110000010001011000101001010110000111100110000110000011111010000011101011000000101101111000111001100100111001111111011110100011011100011101100110100110010100001011011100000111001010111010011101010111110001110010001100001011010001010010101000111100010011101110101111110011011100101110000000010010101001110011010111000001001010010111101010100010001001000000101001001101011110010110010110010000010110011110101011011000111010010011110110110111100110111100100011000001011100110011111000011101100000100100011010001010101010010101000100000010110001101011100101100001001111001111111100110101001110011010011100001011010011100000110100010000000100110111010100011100011111101100100101110010010101001010110010100110000000011110001100000101101101001000011000101010001101000010001110110001101001001110001111111001100101001100000101001010110111001001010000101111011100011110110001111111101011010011011101010110101000000100000000010000001000110111110000100100110101011110101100000011111111000010100000001111110000001110000000110010100010100100010110101000100000100010110111101101110011101000111000000101110101111000100001110100111010111000010101110011000111111101101100111000110110111001110100111001110100110010101011111001100111011000010000011111101101101101110111000101100101111011011111111101001001000011001010011010101000000111111110100011001000010001110100100010001011101111000100111011111000011000011100110110101001110001001001110010000100111110010000111100000001011011101111111000110101001011111111000011011110001000000111001010010011011001010110100000111101110110101011100001100100000100110010010010100101001101101111111001101110101111000100111011010111100000011000000001110011100010100111100101110001100010001101101111001011010101001101111101110111100000101111101011100010000001111100101011110111011100011101001001000110000101010001100100010000011110010100111001001010111000000110111001011000000101111010111001110000100111001010111101100011101100110010001011000110000010000111110000100111000111001100100111111011010101011111001110010000011000111110100100111111110011111101001011000010010110010111000000110000101111011111100010100100101001010010000001101110000110101111010100110110110101111110110100101010100000101110111010111111011010101101110110110011101100001111111011010101011010100011011110001011111110110010101001101111010010010100000010001110110110001010001101000000110100110101101011010101101101011101101101001001100100010111111110101011010010000110011011
2016-08-10 12:41:31,989 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:41:31,991 INFO  encryption.Paillier  [] - Parameters = p = 32051443 q = -123328225 N = -192808851 NSquared = 384654953 lambdaN = -50766034 bitLength = 3072
2016-08-10 12:41:32,104 INFO  general.PaillierTest  [] - encM1 = 310459656 encM2 = -1652169034
2016-08-10 12:41:32,215 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:41:32,273 INFO  general.PaillierTest  [] - encM1_times_encM2 = 331988297 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:42:00,074 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:42:00,081 INFO  encryption.Paillier  [] - Parameters = p = 1950649979 q = 705277011 N = -230173215 NSquared = -1182912575 lambdaN = 704433546 bitLength = 6100
2016-08-10 12:42:00,927 INFO  general.PaillierTest  [] - encM1 = -220978641 encM2 = 1547089788
2016-08-10 12:42:01,775 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:42:02,193 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1417399348 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:42:02,193 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 12:42:02,194 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:42:02,198 INFO  encryption.Paillier  [] - Parameters = p = -656258757 q = 1346596367 N = -1960139659 NSquared = 1846156665 lambdaN = 822245014 bitLength = 201
2016-08-10 12:42:02,198 INFO  general.PaillierTest  [] - encM1 = -501466706 encM2 = -277108633
2016-08-10 12:42:02,198 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:42:02,199 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1455983630 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:42:03,081 INFO  encryption.Paillier  [] - Parameters = p = 394822863 q = -968564835 N = -1150958605 NSquared = 901388457 lambdaN = 1858875332 bitLength = 3072
2016-08-10 12:42:03,192 INFO  general.PaillierTest  [] - encM1 = -1478756421 encM2 = -1011864843
2016-08-10 12:42:03,303 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:42:03,356 INFO  general.PaillierTest  [] - encM1_times_encM2 = 581748918 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:42:08,102 INFO  encryption.Paillier  [] - Parameters = p = -899487825 q = 1522381343 N = -649806799 NSquared = -1772093087 lambdaN = 302226698 bitLength = 4263
2016-08-10 12:42:08,397 INFO  general.PaillierTest  [] - encM1 = -1576490880 encM2 = -1421891994
2016-08-10 12:42:08,699 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:42:08,850 INFO  general.PaillierTest  [] - encM1_times_encM2 = -641023166 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:42:08,850 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 12:42:08,850 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:42:08,853 INFO  encryption.Paillier  [] - testBit true
 N = 11000110010010010011111111110001010001011101110111010001110011001011000011000110100101111100101010000111000011101101101011001010010010101100111010100100100100100100011101110011101110010011110100101111
2016-08-10 12:42:08,854 INFO  encryption.Paillier  [] - Parameters = p = 1087685525 q = 1145277619 N = 1941519663 NSquared = -1232245087 lambdaN = 1383081852 bitLength = 201
2016-08-10 12:42:08,854 INFO  general.PaillierTest  [] - encM1 = 978301920 encM2 = 323382765
2016-08-10 12:42:08,854 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:42:08,855 INFO  general.PaillierTest  [] - encM1_times_encM2 = 944647033 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:42:11,045 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:42:11,047 INFO  encryption.Paillier  [] - Parameters = p = -1184567427 q = -998575931 N = 549681969 NSquared = 669917025 lambdaN = -846006380 bitLength = 3072
2016-08-10 12:42:11,162 INFO  general.PaillierTest  [] - encM1 = -1130618913 encM2 = -2080951578
2016-08-10 12:42:11,266 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:42:11,319 INFO  general.PaillierTest  [] - encM1_times_encM2 = 33270171 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:42:27,427 INFO  encryption.Paillier  [] - testBit false

2016-08-10 12:42:52,824 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:42:52,829 INFO  encryption.Paillier  [] - Parameters = p = 2064856351 q = -1743909971 N = 1324694259 NSquared = -156171607 lambdaN = -1645609708 bitLength = 6335
2016-08-10 12:42:53,793 INFO  general.PaillierTest  [] - encM1 = -1318168799 encM2 = 705442471
2016-08-10 12:42:54,752 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:42:55,229 INFO  general.PaillierTest  [] - encM1_times_encM2 = -223745865 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:42:55,229 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 12:42:55,229 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:42:55,232 INFO  encryption.Paillier  [] - Parameters = p = 534092733 q = 220117777 N = -15178099 NSquared = 1233430953 lambdaN = -192347152 bitLength = 201
2016-08-10 12:42:55,232 INFO  general.PaillierTest  [] - encM1 = -968909001 encM2 = -761714173
2016-08-10 12:42:55,232 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:42:55,232 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1761912490 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:42:57,904 INFO  encryption.Paillier  [] - Parameters = p = -1621935449 q = 1227219719 N = 1097576337 NSquared = -576876511 lambdaN = -1401337614 bitLength = 3072
2016-08-10 12:42:58,019 INFO  general.PaillierTest  [] - encM1 = 1059037557 encM2 = 1069058760
2016-08-10 12:42:58,138 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:42:58,195 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1284771777 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:44:03,792 INFO  encryption.Paillier  [] - Parameters = p = 960815343 q = -3319679 N = -1184202641 NSquared = 173748257 lambdaN = 1074706048 bitLength = 5963
2016-08-10 12:44:04,558 INFO  general.PaillierTest  [] - encM1 = -875029773 encM2 = -698281
2016-08-10 12:44:05,339 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:44:05,728 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1127995583 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:44:05,728 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 12:44:05,728 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:44:05,733 INFO  encryption.Paillier  [] - testBit true
 N = 10010100110100100010001011000110001001011100100010010110011011000000011010000110110000111101010101011101011010100100111100100000111100101001111100111111010100010110100100110010000110000100111001100101
2016-08-10 12:44:05,734 INFO  encryption.Paillier  [] - Parameters = p = -1491172473 q = -1021398605 N = 840453733 NSquared = 1056027609 lambdaN = 1676512406 bitLength = 201
2016-08-10 12:44:05,734 INFO  general.PaillierTest  [] - encM1 = 1631157102 encM2 = -4820273
2016-08-10 12:44:05,734 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:44:05,735 INFO  general.PaillierTest  [] - encM1_times_encM2 = -334596062 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:44:06,447 INFO  encryption.Paillier  [] - testBit true
 N = 110100100011110000001001100111100001010100010111010100100000001110011100100110111001101011000101011010101000000011100000010011110011000100110100100101000110110000110101110111011111111110001110001111100011100010100100101111000111010111011100111010110100010001000000011001001010001010000010110011001101010001110001001110011111000111101000101010111100110011000011011110001011000100111010111001101010000000000101111011001010100100011100101010011100111011100000101101001111001111110111000101110010000111101111101011110011101000111010110110111101110011000111111101101000111010111101110100000110010111010100010000000010010000011000111001010101101011010011101000101110100000001101100111001100000000101000111000111101101101011001001101001110101111100101100001110110111111001011110101111000000110001001000100111110010011111011111111101100101011010001100101110010110010101101111011111001111011001101010101101111001011000010110111101000101101000010110011010110110101101010010110101110100001001001011101110000011001111001000111001001010110110111010111101101010000100010101001001111010110001000111000001101000011001100111000101110011001100001001101100111101011001111010101101001100011110101100010011100011001011111111100001111001000110100101001000110001000010111000000001001000011101011001011001000011101100000011001100111101100011010110010111111000000101001111101101010000101100001000011111100001001110011001110000101100000111100000101101000010000101101001111101111000011010011101010001101101000000010011100000010011101111001111111100011110000010101011010101111001001101010111111100100001111000010000100110010111101011010000000000110110010000000101110011000000110100101011011101000111000110010010111011001001110000111111011110011000000000111100111010101010010100011000111110010100111011101011001001000001000111001111010100101011010101011011001010101000000110011000000000101000101111100000010111111111000110110110000001101101111110101010001000110110011100010111110000100011111010111100001000111001101100101000001110110000000110010011010100101010000101010110000010010011001011011001010011100010000000100000010001101110011010100010100100001100010001111001110100111001101010010110100111111111000010011110011010000100111001111100010101100110011100001000001010000110010000100101001101010110011011011000110000111011110010010011110100000011011101110011000010110000010110101001110111011110100000111000011011010111101011000010101001000111000001000000101101101001111000101111100001000000111101001110110010000011110001010011010001010011001101000000010010110110101000010001000110111111100101011110011110010111100011111011110010010000000001101011000111100111011000100001010100011011101011011011000001001110011011010111111110110110101110111010101100001000100000110010111011010100011000100101111011000101101011000100001101100010110111000101101101000110000001010100100100100101111010011000100010100111111010001100110011010000111100110110000110101100111101111010111110100000101001101010000000111110010100100110011010000011100111001000101111111001010101001110001111110011111111011000011011011101011111111
2016-08-10 12:44:06,448 INFO  encryption.Paillier  [] - Parameters = p = 510139363 q = -2073278667 N = -82986241 NSquared = -1870820863 lambdaN = -588078924 bitLength = 3072
2016-08-10 12:44:06,559 INFO  general.PaillierTest  [] - encM1 = 775429789 encM2 = -579930267
2016-08-10 12:44:06,667 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:44:06,724 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2125655957 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:44:27,835 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:44:27,840 INFO  encryption.Paillier  [] - Parameters = p = 1688604001 q = 1887196699 N = 1358823227 NSquared = 1494521753 lambdaN = 1038994912 bitLength = 6601
2016-08-10 12:44:28,928 INFO  general.PaillierTest  [] - encM1 = 286170781 encM2 = -417144631
2016-08-10 12:44:30,035 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:44:30,617 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1960080043 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:44:30,618 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 12:44:30,619 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 12:44:30,620 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 12:44:30,620 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-10 12:44:30,629 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 12:44:30,632 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 12:44:30,633 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-10 12:44:30,634 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 12:44:30,634 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-10 12:44:30,635 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:44:30,635 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-10 12:44:30,635 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-10 12:44:30,641 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-10 12:44:30,644 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-10 12:44:30,645 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-10 12:44:30,650 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-10 12:44:30,650 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-10 12:44:30,651 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-10 12:44:30,652 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-10 12:44:30,652 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-10 12:44:30,655 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner3811976883212276573.xml
2016-08-10 12:44:30,696 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-10 12:44:30,696 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner3811976883212276573.xml hdfs = false
2016-08-10 12:44:30,697 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner3811976883212276573.xml
2016-08-10 12:44:30,699 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:44:30,700 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:44:30,702 ERROR data.DataSchemaLoader  [] - Caught exception: 
2016-08-10 12:44:30,707 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner3811976883212276573.xml hdfs = false
2016-08-10 12:44:30,708 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner3811976883212276573.xml
2016-08-10 12:44:30,710 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:44:30,711 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:44:30,712 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile7569451104383741257.xml
2016-08-10 12:44:30,716 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile7569451104383741257.xml hdfs = false
2016-08-10 12:44:30,716 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile7569451104383741257.xml
2016-08-10 12:44:30,718 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:44:30,719 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:44:30,720 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:30,720 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:30,721 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:30,723 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6209064499130266223.xml
2016-08-10 12:44:30,728 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6209064499130266223.xml hdfs = false
2016-08-10 12:44:30,728 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6209064499130266223.xml
2016-08-10 12:44:30,730 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:44:30,731 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:44:30,736 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-10 12:44:30,736 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 12:44:30,737 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3089642356817007116.xml
2016-08-10 12:44:30,737 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3089642356817007116.xml
2016-08-10 12:44:30,738 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 12:44:30,738 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 12:44:30,738 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 12:44:30,742 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-10 12:44:30,742 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3089642356817007116.xml
2016-08-10 12:44:30,742 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3089642356817007116.xml
2016-08-10 12:44:30,744 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:30,744 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 12:44:30,745 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 12:44:30,745 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 12:44:30,745 ERROR query.QuerySchemaLoader  [] - Caught exception: 
2016-08-10 12:44:30,748 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3089642356817007116.xml
2016-08-10 12:44:30,749 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3089642356817007116.xml
2016-08-10 12:44:30,750 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:30,751 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 12:44:30,751 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 12:44:30,751 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 12:44:30,751 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-10 12:44:30,752 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-10 12:44:30,754 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 12:44:30,755 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile1702098575463228538.tmp
2016-08-10 12:44:30,756 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile114540761812223465.xml
2016-08-10 12:44:30,759 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile114540761812223465.xml hdfs = false
2016-08-10 12:44:30,759 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile114540761812223465.xml
2016-08-10 12:44:30,763 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:44:30,763 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:44:30,764 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:30,764 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:30,764 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:30,764 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:30,765 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 12:44:30,766 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5656697298384814195.xml
2016-08-10 12:44:30,766 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5656697298384814195.xml
2016-08-10 12:44:30,768 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 12:44:30,768 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 12:44:30,769 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 12:44:30,769 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 12:44:30,771 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5656697298384814195.xml
2016-08-10 12:44:30,772 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5656697298384814195.xml
2016-08-10 12:44:30,774 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:30,775 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 12:44:30,775 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 12:44:30,776 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 12:44:30,776 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:30,777 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-10 12:44:30,777 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:30,777 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-10 12:44:30,777 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:30,777 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-10 12:44:30,778 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-10 12:44:31,077 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-10 12:44:33,396 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-10 12:44:33,397 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-10 12:44:33,397 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile89364041145391883.xml
2016-08-10 12:44:33,400 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile89364041145391883.xml hdfs = false
2016-08-10 12:44:33,400 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile89364041145391883.xml
2016-08-10 12:44:33,402 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,402 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:44:33,402 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,402 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,403 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,403 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,403 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 12:44:33,403 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5568561534568447130.xml
2016-08-10 12:44:33,404 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5568561534568447130.xml
2016-08-10 12:44:33,405 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 12:44:33,405 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 12:44:33,405 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 12:44:33,405 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 12:44:33,407 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5568561534568447130.xml
2016-08-10 12:44:33,407 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5568561534568447130.xml
2016-08-10 12:44:33,409 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,409 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 12:44:33,410 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 12:44:33,410 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 12:44:33,410 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-10 12:44:33,411 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7311440933379620227.xml
2016-08-10 12:44:33,418 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7311440933379620227.xml hdfs = false
2016-08-10 12:44:33,419 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7311440933379620227.xml
2016-08-10 12:44:33,421 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,421 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:44:33,421 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,421 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,422 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,422 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,422 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 12:44:33,422 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile130578632474257703.xml
2016-08-10 12:44:33,423 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile130578632474257703.xml
2016-08-10 12:44:33,424 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 12:44:33,424 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 12:44:33,424 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 12:44:33,424 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 12:44:33,426 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile130578632474257703.xml
2016-08-10 12:44:33,426 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile130578632474257703.xml
2016-08-10 12:44:33,428 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,428 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 12:44:33,428 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 12:44:33,428 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 12:44:33,429 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-10 12:44:33,701 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 12:44:33,702 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile6196684888417179548.tmp
2016-08-10 12:44:33,702 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile6196684888417179548.tmp
2016-08-10 12:44:33,703 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile706220525745009509.xml
2016-08-10 12:44:33,705 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile706220525745009509.xml hdfs = false
2016-08-10 12:44:33,705 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile706220525745009509.xml
2016-08-10 12:44:33,706 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,707 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 12:44:33,707 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:44:33,707 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,707 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,707 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,708 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,708 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,708 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,708 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 12:44:33,709 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8650246283901889658.xml
2016-08-10 12:44:33,709 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8650246283901889658.xml
2016-08-10 12:44:33,710 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 12:44:33,710 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:44:33,710 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:44:33,710 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 12:44:33,711 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 12:44:33,711 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:44:33,711 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 12:44:33,712 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 12:44:33,713 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2882813981619364538.xml
2016-08-10 12:44:33,713 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8650246283901889658.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2882813981619364538.xml
2016-08-10 12:44:33,714 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:44:33,714 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:44:33,714 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:44:33,714 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 12:44:33,715 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 12:44:33,715 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6415879301203611477.xml
2016-08-10 12:44:33,716 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8650246283901889658.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2882813981619364538.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6415879301203611477.xml
2016-08-10 12:44:33,716 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:44:33,717 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:44:33,717 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:44:33,717 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 12:44:33,718 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 12:44:33,718 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8615650370871521228.xml
2016-08-10 12:44:33,718 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8650246283901889658.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2882813981619364538.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6415879301203611477.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8615650370871521228.xml
2016-08-10 12:44:33,719 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:44:33,719 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:44:33,719 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:44:33,719 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-10 12:44:33,720 INFO  utils.TestUtils    [] - filterName = ip
2016-08-10 12:44:33,721 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 12:44:33,721 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file291647657497556984.xml
2016-08-10 12:44:33,721 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8650246283901889658.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2882813981619364538.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6415879301203611477.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8615650370871521228.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file291647657497556984.xml
2016-08-10 12:44:33,722 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:44:33,722 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:44:33,722 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:44:33,723 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8650246283901889658.xml
2016-08-10 12:44:33,724 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8650246283901889658.xml
2016-08-10 12:44:33,725 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,725 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 12:44:33,725 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:44:33,725 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:44:33,725 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:44:33,726 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 12:44:33,726 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,726 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:44:33,726 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,726 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:44:33,726 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,726 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 12:44:33,726 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,727 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 12:44:33,727 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,727 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 12:44:33,727 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 12:44:33,771 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2882813981619364538.xml
2016-08-10 12:44:33,771 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2882813981619364538.xml
2016-08-10 12:44:33,773 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,773 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 12:44:33,773 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:44:33,773 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 12:44:33,774 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,774 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 12:44:33,774 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,774 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 12:44:33,774 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,774 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 12:44:33,775 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 12:44:33,803 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6415879301203611477.xml
2016-08-10 12:44:33,804 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6415879301203611477.xml
2016-08-10 12:44:33,805 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,806 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 12:44:33,806 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:44:33,806 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:44:33,806 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,806 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:44:33,807 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,807 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:44:33,807 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,807 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:44:33,807 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 12:44:33,831 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8615650370871521228.xml
2016-08-10 12:44:33,832 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8615650370871521228.xml
2016-08-10 12:44:33,833 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,833 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 12:44:33,834 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:44:33,834 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:44:33,834 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,834 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:44:33,834 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,834 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:44:33,834 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,835 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:44:33,835 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-10 12:44:33,835 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-10 12:44:33,861 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file291647657497556984.xml
2016-08-10 12:44:33,862 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file291647657497556984.xml
2016-08-10 12:44:33,863 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:44:33,863 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 12:44:33,863 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:44:33,863 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:44:33,863 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:44:33,863 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:44:33,864 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,864 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:44:33,864 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:44:33,864 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:44:33,867 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:44:33,868 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:33,870 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1656809490274934357.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query143714163529126834.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2119483804153824817.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7078206770147156677.txt
2016-08-10 12:44:33,872 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:33,880 INFO  encryption.Paillier  [] - Parameters = p = -72478835 q = -1850497001 N = -1821446741 NSquared = 2107248697 lambdaN = -2096719100 bitLength = 384
2016-08-10 12:44:33,881 INFO  encryption.Paillier  [] - Parameters = p = -72478835 q = -1850497001 N = -1821446741 NSquared = 2107248697 lambdaN = -2096719100 bitLength = 384
2016-08-10 12:44:33,881 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:34,737 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:44:34,738 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:34,985 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:35,091 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:35,092 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:44:35,098 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:35,104 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:35,107 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:35,109 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:35,112 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:35,115 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:44:35,119 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:44:35,122 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:44:35,126 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:35,126 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:35,139 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:35,139 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:35,272 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:35,284 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:35,284 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:35,294 INFO  utils.BaseTests    [] - results:
2016-08-10 12:44:35,294 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:44:35,295 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:44:35,295 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:35,295 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:35,295 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:44:35,295 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:35,296 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:35,296 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:44:35,296 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:44:35,296 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:35,297 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:35,297 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:44:35,297 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:35,297 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:35,297 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:44:35,299 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:44:35,299 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 12:44:35,299 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:35,300 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier3922249149338528831.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5075935140246628614.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7564196245966636618.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2363398903004728792.txt
2016-08-10 12:44:35,300 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:35,313 INFO  encryption.Paillier  [] - Parameters = p = -1964012221 q = -2017692151 N = 1606211931 NSquared = -2144115111 lambdaN = 646474504 bitLength = 384
2016-08-10 12:44:35,313 INFO  encryption.Paillier  [] - Parameters = p = -1964012221 q = -2017692151 N = 1606211931 NSquared = -2144115111 lambdaN = 646474504 bitLength = 384
2016-08-10 12:44:35,313 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:35,829 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:44:35,829 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:35,947 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:36,022 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:36,022 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 12:44:36,024 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 12:44:36,026 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 12:44:36,028 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 12:44:36,030 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 12:44:36,031 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 12:44:36,032 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 12:44:36,034 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:44:36,035 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 12:44:36,036 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:36,036 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:36,037 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:36,037 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:36,098 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:36,098 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:36,100 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:36,100 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:36,101 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:36,101 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 12:44:36,101 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 12:44:36,101 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 12:44:36,101 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 12:44:36,102 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:36,102 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 12:44:36,102 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 12:44:36,102 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 12:44:36,102 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:36,103 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8822548840558546013.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8415640847002161223.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8464605880385310289.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8365247893536092131.txt
2016-08-10 12:44:36,103 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:36,120 INFO  encryption.Paillier  [] - Parameters = p = 5466901 q = -382145995 N = -625058471 NSquared = 1176881393 lambdaN = 337215660 bitLength = 384
2016-08-10 12:44:36,121 INFO  encryption.Paillier  [] - Parameters = p = 5466901 q = -382145995 N = -625058471 NSquared = 1176881393 lambdaN = 337215660 bitLength = 384
2016-08-10 12:44:36,121 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:36,534 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:44:36,534 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:36,650 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:36,696 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:36,697 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 12:44:36,698 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:44:36,700 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 12:44:36,701 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 12:44:36,703 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:44:36,706 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:44:36,708 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 12:44:36,710 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 12:44:36,712 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 12:44:36,714 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:36,714 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:36,716 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:36,717 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:36,781 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:36,781 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:36,781 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:36,783 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:36,783 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:36,785 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:36,785 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:36,785 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:36,785 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 12:44:36,785 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 12:44:36,786 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 12:44:36,786 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 12:44:36,787 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 12:44:36,787 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:36,787 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5312084239079534370.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1870288390498906778.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5746563711141883691.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3520692030746953843.txt
2016-08-10 12:44:36,787 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:36,794 INFO  encryption.Paillier  [] - Parameters = p = -953216971 q = -69231487 N = 566392501 NSquared = -882942983 lambdaN = -1750273408 bitLength = 384
2016-08-10 12:44:36,795 INFO  encryption.Paillier  [] - Parameters = p = -953216971 q = -69231487 N = 566392501 NSquared = -882942983 lambdaN = -1750273408 bitLength = 384
2016-08-10 12:44:36,795 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:37,175 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:44:37,176 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:37,287 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:37,339 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:37,339 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:37,340 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:37,340 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:37,341 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:37,341 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:37,391 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:37,391 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:37,391 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:37,392 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:37,393 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:37,393 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:37,394 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 12:44:37,394 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 12:44:37,394 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:44:37,394 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:37,395 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier3199563819945795296.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4709258036638138349.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3644335336312170797.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8011869974641987101.txt
2016-08-10 12:44:37,396 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:37,402 INFO  encryption.Paillier  [] - Parameters = p = -1415197055 q = -676154741 N = 1766773259 NSquared = -1324741511 lambdaN = 1929062528 bitLength = 384
2016-08-10 12:44:37,402 INFO  encryption.Paillier  [] - Parameters = p = -1415197055 q = -676154741 N = 1766773259 NSquared = -1324741511 lambdaN = 1929062528 bitLength = 384
2016-08-10 12:44:37,402 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:38,172 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:44:38,172 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:38,277 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:38,328 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:38,328 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:44:38,330 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:38,332 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:38,333 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:38,334 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:38,336 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:38,337 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:44:38,339 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:44:38,341 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:44:38,343 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:38,343 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:38,345 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:38,346 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:38,427 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:38,433 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:38,433 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:38,435 INFO  utils.BaseTests    [] - results:
2016-08-10 12:44:38,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:44:38,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:44:38,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:38,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:38,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:44:38,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:38,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:38,436 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:44:38,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:44:38,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:38,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:38,437 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:44:38,437 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:38,437 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:38,437 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:44:38,438 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:44:38,438 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:44:38,438 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:38,439 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7186016170478968090.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7375919667139927398.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3697305855671956159.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1098240250829033753.txt
2016-08-10 12:44:38,440 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:38,445 INFO  encryption.Paillier  [] - Parameters = p = -472083041 q = 1401891061 N = -1437791957 NSquared = -1607332551 lambdaN = -1183799988 bitLength = 384
2016-08-10 12:44:38,446 INFO  encryption.Paillier  [] - Parameters = p = -472083041 q = 1401891061 N = -1437791957 NSquared = -1607332551 lambdaN = -1183799988 bitLength = 384
2016-08-10 12:44:38,446 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:39,215 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:44:39,215 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:39,329 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:39,377 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:39,377 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:44:39,379 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:39,381 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:39,383 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:39,384 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:39,385 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:39,387 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:44:39,389 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:44:39,390 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:44:39,392 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:39,392 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:39,395 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:39,395 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:39,472 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:39,479 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:39,479 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:39,481 INFO  utils.BaseTests    [] - results:
2016-08-10 12:44:39,481 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:44:39,481 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:44:39,481 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:39,481 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:39,482 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:44:39,482 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:39,482 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:39,482 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:44:39,482 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:44:39,482 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:39,482 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:39,483 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:44:39,483 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:39,483 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:39,483 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:44:39,484 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:44:39,484 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:44:39,484 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:39,484 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8966597461900015980.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5764938326302716612.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse112299694114741355.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3671890376505270703.txt
2016-08-10 12:44:39,485 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:39,491 INFO  encryption.Paillier  [] - Parameters = p = -1227109509 q = -715555795 N = -1342875489 NSquared = 553890497 lambdaN = -443896932 bitLength = 384
2016-08-10 12:44:39,492 INFO  encryption.Paillier  [] - Parameters = p = -1227109509 q = -715555795 N = -1342875489 NSquared = 553890497 lambdaN = -443896932 bitLength = 384
2016-08-10 12:44:39,492 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:40,272 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:44:40,272 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:40,389 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:40,439 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:40,440 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:44:40,441 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:40,443 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:40,446 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:40,447 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:40,449 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:40,450 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:44:40,452 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:44:40,454 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:44:40,456 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:40,456 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:40,460 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:40,460 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:40,546 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:40,551 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:40,551 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:40,555 INFO  utils.BaseTests    [] - results:
2016-08-10 12:44:40,555 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:44:40,555 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:44:40,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:40,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:40,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:44:40,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:40,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:40,556 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:44:40,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:44:40,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:40,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:40,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:44:40,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:40,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:40,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:44:40,558 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:44:40,558 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:44:40,558 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:40,559 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4655600995082587285.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3634705841440834031.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6308498676972682906.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5124706696501175065.txt
2016-08-10 12:44:40,559 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:40,566 INFO  encryption.Paillier  [] - Parameters = p = 59100333 q = -1015579247 N = 1059350269 NSquared = -1500080631 lambdaN = -1831943824 bitLength = 384
2016-08-10 12:44:40,566 INFO  encryption.Paillier  [] - Parameters = p = 59100333 q = -1015579247 N = 1059350269 NSquared = -1500080631 lambdaN = -1831943824 bitLength = 384
2016-08-10 12:44:40,566 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:41,352 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:44:41,352 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:41,459 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:41,504 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:41,505 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:44:41,506 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:41,507 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:41,508 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:41,509 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:41,510 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:41,511 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:44:41,513 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:44:41,514 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:44:41,516 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:41,516 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:41,519 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:41,520 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:41,598 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:41,603 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:41,603 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:41,605 INFO  utils.BaseTests    [] - results:
2016-08-10 12:44:41,605 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:44:41,605 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:44:41,605 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:41,606 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:41,606 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:44:41,606 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:41,606 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:41,606 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:44:41,607 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:44:41,607 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:41,607 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:41,607 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:44:41,607 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:41,607 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:41,608 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:44:41,608 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:44:41,608 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 12:44:41,608 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:41,609 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier259793403524210428.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3048289125470349574.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse327499177808204384.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7081098207649720241.txt
2016-08-10 12:44:41,609 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:41,629 INFO  encryption.Paillier  [] - Parameters = p = 1154045679 q = -1046047439 N = -400769345 NSquared = 2011697793 lambdaN = -254383792 bitLength = 384
2016-08-10 12:44:41,629 INFO  encryption.Paillier  [] - Parameters = p = 1154045679 q = -1046047439 N = -400769345 NSquared = 2011697793 lambdaN = -254383792 bitLength = 384
2016-08-10 12:44:41,630 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:42,035 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:44:42,035 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:42,143 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:42,191 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:42,192 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 12:44:42,193 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 12:44:42,194 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 12:44:42,195 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 12:44:42,196 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 12:44:42,199 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 12:44:42,200 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 12:44:42,201 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:44:42,203 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 12:44:42,203 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:42,204 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:42,205 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:42,205 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:42,267 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:42,267 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:42,268 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:42,268 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:42,270 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:42,270 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 12:44:42,270 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 12:44:42,270 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 12:44:42,270 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 12:44:42,271 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:42,271 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 12:44:42,271 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 12:44:42,271 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 12:44:42,271 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:42,271 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5454927812392906497.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7289453533169098226.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4492235344977232819.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile9980249790516577.txt
2016-08-10 12:44:42,272 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:42,283 INFO  encryption.Paillier  [] - Parameters = p = -1149388319 q = 387317189 N = -18323675 NSquared = -2002859175 lambdaN = -1961546784 bitLength = 384
2016-08-10 12:44:42,284 INFO  encryption.Paillier  [] - Parameters = p = -1149388319 q = 387317189 N = -18323675 NSquared = -2002859175 lambdaN = -1961546784 bitLength = 384
2016-08-10 12:44:42,284 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:42,679 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:44:42,679 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:42,779 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:42,829 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:42,829 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 12:44:42,830 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:44:42,834 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 12:44:42,835 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 12:44:42,835 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:44:42,836 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:44:42,837 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 12:44:42,838 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 12:44:42,838 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 12:44:42,839 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:42,839 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:42,840 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:42,840 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:42,894 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:42,894 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:42,895 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:42,896 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:42,896 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:42,897 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:42,897 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:42,897 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:44:42,897 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 12:44:42,897 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 12:44:42,897 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 12:44:42,898 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 12:44:42,898 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 12:44:42,898 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:42,898 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5904658676511042950.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2799136355434225237.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8656310753680359890.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile264403913983396491.txt
2016-08-10 12:44:42,899 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:42,903 INFO  encryption.Paillier  [] - Parameters = p = -102972943 q = 209312143 N = -1449222497 NSquared = 478979777 lambdaN = -777780848 bitLength = 384
2016-08-10 12:44:42,903 INFO  encryption.Paillier  [] - Parameters = p = -102972943 q = 209312143 N = -1449222497 NSquared = 478979777 lambdaN = -777780848 bitLength = 384
2016-08-10 12:44:42,903 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:43,285 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:44:43,285 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:43,400 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:43,450 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:43,450 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:43,451 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:43,451 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:43,452 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:43,452 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:43,502 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:43,503 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:43,503 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:43,503 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:44:43,504 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:43,504 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:43,505 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 12:44:43,505 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 12:44:43,505 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:44:43,506 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:44:43,506 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7856052780150849436.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query6003686989137399315.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8370426592026167257.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1716815748744590112.txt
2016-08-10 12:44:43,506 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:43,519 INFO  encryption.Paillier  [] - Parameters = p = 1320199869 q = 750610235 N = -883591025 NSquared = 297557985 lambdaN = 1655083460 bitLength = 384
2016-08-10 12:44:43,520 INFO  encryption.Paillier  [] - Parameters = p = 1320199869 q = 750610235 N = -883591025 NSquared = 297557985 lambdaN = 1655083460 bitLength = 384
2016-08-10 12:44:43,520 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:44:44,307 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:44:44,307 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:44:44,307 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-10 12:44:44,416 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:44:44,464 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:44:44,464 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:44:44,466 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:44,468 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:44,469 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:44,471 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:44,472 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:44:44,476 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:44:44,478 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:44:44,480 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:44:44,481 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:44:44,482 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:44:44,484 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:44:44,484 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:44:44,565 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:44:44,570 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:44:44,570 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:44:44,571 INFO  utils.BaseTests    [] - results:
2016-08-10 12:44:44,572 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:44:44,572 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:44,572 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:44,572 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:44:44,572 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:44,572 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:44:44,572 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:44:44,572 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:44:44,573 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:44,573 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:44,573 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:44:44,573 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:44,573 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:44:44,573 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:45:11,854 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-10 12:45:11,858 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-10 12:45:11,861 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-10 12:45:11,862 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 12:45:11,863 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 12:45:11,863 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 12:45:11,863 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-10 12:45:11,864 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-10 12:45:11,878 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-10 12:45:11,879 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-10 12:45:11,879 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-10 12:45:11,879 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-10 12:45:11,880 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-10 12:45:11,881 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-10 12:45:11,882 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-10 12:45:11,883 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-10 12:45:11,883 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-10 12:45:11,884 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-10 12:45:11,885 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-10 12:45:11,885 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-10 12:45:11,885 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-10 12:45:11,886 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-10 12:45:11,886 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 12:45:11,966 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 12:45:11,966 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 12:45:11,967 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 12:45:11,967 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 12:45:11,967 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 12:45:11,968 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 12:45:11,969 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 12:45:11,976 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-10 12:45:11,977 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-10 12:45:11,980 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 12:45:11,982 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 12:45:11,982 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 12:45:11,983 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 12:45:11,984 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:45:11,988 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-10 12:45:12,039 INFO  encryption.Paillier  [] - Parameters = p = 1394343563 q = -190305625 N = 1446894253 NSquared = 758978793 lambdaN = -2026055490 bitLength = 201
2016-08-10 12:45:12,087 INFO  general.PaillierTest  [] - encM1 = -131343063 encM2 = -490134675
2016-08-10 12:45:12,088 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:45:12,088 INFO  general.PaillierTest  [] - encM1_times_encM2 = 626003119 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:45:13,325 INFO  encryption.Paillier  [] - Parameters = p = -288738447 q = -1979664657 N = -1722262401 NSquared = -2034530559 lambdaN = 273070352 bitLength = 3072
2016-08-10 12:45:13,443 INFO  general.PaillierTest  [] - encM1 = 2013217483 encM2 = -691598161
2016-08-10 12:45:13,564 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:45:13,618 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1493058996 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:45:17,274 INFO  encryption.Paillier  [] - Parameters = p = -1444683661 q = 1177643209 N = 1595732555 NSquared = -1883643399 lambdaN = 310462168 bitLength = 4050
2016-08-10 12:45:17,560 INFO  general.PaillierTest  [] - encM1 = -355173700 encM2 = -63740075
2016-08-10 12:45:17,831 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:45:17,965 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1305220099 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:45:17,965 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 12:45:17,966 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:45:17,972 INFO  encryption.Paillier  [] - testBit true
 N = 10011101011000001000011001001101100101000001001110110010111111100010010100010001111001110111011111110110100100000010000100100110011010001011001101111011111010000111110101000100110011100011101001111011
2016-08-10 12:45:17,973 INFO  encryption.Paillier  [] - Parameters = p = -1233923573 q = -905810095 N = 1154366075 NSquared = -2091911399 lambdaN = -1388576944 bitLength = 201
2016-08-10 12:45:17,973 INFO  general.PaillierTest  [] - encM1 = -1123797884 encM2 = -762806466
2016-08-10 12:45:17,974 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:45:17,974 INFO  general.PaillierTest  [] - encM1_times_encM2 = -917627140 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:45:19,572 INFO  encryption.Paillier  [] - testBit true
 N = 101100110100111100000011111111111011000110110000100111110101100011101010110101000011100101100011001001000101110110011011010010111100010101100101110011011100101011101001000000111001001110000010000000101100101110110010011110111000011111101111001111101000001111101000001000110100110011100011000111110100111110000000001110111000001010110010000001001101101100000001111011110100001000110100100001000001111100000101100100110000011101011101001101000101111000010010001010111001000100110010100111010110100111011011110000101100001111010100110110000010010100101101101110100001101011011010100001001010100001000011100110110001001011001111010001110101010001010001000101001101010101110001010001010011101100001111110101100000010000100010001001101011000010001100010110101101110101100101110011010101110110111001000000001011101000001110101100001010000101111101000110110001011000100001010110011001101011100101111100011001001110111011110111000011000101111010000100010110010011010001000011000001111000010100110101010111110000000100100000101101001111010010011010101101000101010101010100010101000000000001111100111111110000100110110101110100100101111110001000100001101111010001011011111101010111111011101110100100111100010101010001010010101101000000110010110011011001110011011000101110111010010111000011001111010101011000101101000000100001011000101101000011110000100100010001000110000100111110001000011010010000011110100100111010010000000111111011001011000001100111010111101101100101101000010010000111001000010010001011011100100111111001010010110010010000111100111111110100101110011000001001000101010100111001100110111110001000110000010011000110010111101101111001001000011000001001110100100001010000001010101000000001010101100001000011110111001001100010111101100100000101100011101110001100110010011011110010001100110011001110101011101100110100101110001011101000111100110001100000011111000111010100110001111001100100000100111111010001011101101101111111011110110111000110010110001110101010011110001011001111100111000111111011000000011111011011111011000110110100000010111000001000101011001100011011111100100111001101000001010100110111100001100101111011011001010010001110011010101010110100000010001001011000111000011110100111100001000101001111100000001101000001010100010010001111011011001100011000001101100101110010111001110000000011011010110000110000101011110100110011101101111111111000010010000010101001101010100100100100010110101111001001110100010100101000111100001100011101110010011001000011001100101000000011100000000100100011100110110010110010101000010000100010111100011111110001001010110010110111001011111100100010110011110000110101001111110110100110101111001101001101010000110110000010100010001100111001000101111101000010101001010111111111100100110010101011010101010000111000100110010111111110001111000001011101000110010111101111001110100000101011010010010011110011100000000100100101000111100001000010101100000100001111010000101000010000111010100001010100010111000011000100011110011001101001000001110111100010010110111111010001111100000101111001100100111010110011111100010110011110010011100011
2016-08-10 12:45:19,577 INFO  encryption.Paillier  [] - Parameters = p = -1525108921 q = -432077947 N = -61217565 NSquared = -629464759 lambdaN = 315994884 bitLength = 3072
2016-08-10 12:45:19,707 INFO  general.PaillierTest  [] - encM1 = -634225297 encM2 = 153197310
2016-08-10 12:45:19,825 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:45:19,882 INFO  general.PaillierTest  [] - encM1_times_encM2 = -862885709 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:46:03,817 INFO  encryption.Paillier  [] - testBit false

2016-08-10 12:46:34,309 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:46:34,316 INFO  encryption.Paillier  [] - Parameters = p = 214470525 q = 834331763 N = -1951020761 NSquared = 1765032945 lambdaN = -1499911524 bitLength = 6408
2016-08-10 12:46:35,300 INFO  general.PaillierTest  [] - encM1 = -2054326555 encM2 = 775089751
2016-08-10 12:46:36,272 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:46:36,756 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1819693580 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:46:36,756 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 12:46:36,756 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:46:36,759 INFO  encryption.Paillier  [] - Parameters = p = 1146202751 q = -1496396571 N = -1122191461 NSquared = -1953040423 lambdaN = 1761484828 bitLength = 201
2016-08-10 12:46:36,759 INFO  general.PaillierTest  [] - encM1 = 1926556764 encM2 = -268143445
2016-08-10 12:46:36,759 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:46:36,759 INFO  general.PaillierTest  [] - encM1_times_encM2 = -4026904 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:46:38,850 INFO  encryption.Paillier  [] - Parameters = p = -676255745 q = 1553983005 N = 341942755 NSquared = -1939517623 lambdaN = 1342358348 bitLength = 3072
2016-08-10 12:46:38,961 INFO  general.PaillierTest  [] - encM1 = 514989618 encM2 = 410146570
2016-08-10 12:46:39,073 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:46:39,130 INFO  general.PaillierTest  [] - encM1_times_encM2 = 574562808 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:46:53,880 INFO  encryption.Paillier  [] - Parameters = p = 540047063 q = 1925972977 N = 1347970407 NSquared = 1056599921 lambdaN = -1732378928 bitLength = 3954
2016-08-10 12:46:54,108 INFO  general.PaillierTest  [] - encM1 = -2116389979 encM2 = 1740639406
2016-08-10 12:46:54,330 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:46:54,445 INFO  general.PaillierTest  [] - encM1_times_encM2 = 859797767 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:46:54,445 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 12:46:54,445 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:46:54,450 INFO  encryption.Paillier  [] - testBit false
 N = 11011110010101011001000101101000001000101001001101011100101001111011110110000010101010010010000000100111100000111110011001100011100010001000101100001010000100000110010001000011010001101111111001001011
2016-08-10 12:46:54,454 INFO  encryption.Paillier  [] - testBit true
 N = 10111111110001101111100010111100110111001010110111101101101010101101001011000001110000101011001110010100110110100000111111000011000010001011010100101010011001111110010101100011110000000001101011100111
2016-08-10 12:46:54,454 INFO  encryption.Paillier  [] - Parameters = p = 129818643 q = 1278278749 N = 1673534183 NSquared = 122928241 lambdaN = 132718396 bitLength = 201
2016-08-10 12:46:54,455 INFO  general.PaillierTest  [] - encM1 = 1884802082 encM2 = -1642040680
2016-08-10 12:46:54,455 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:46:54,456 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1817535523 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:46:55,408 INFO  encryption.Paillier  [] - testBit false

2016-08-10 12:46:57,401 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:46:57,403 INFO  encryption.Paillier  [] - Parameters = p = 1801526935 q = 1423883511 N = 1927089 NSquared = -1474697119 lambdaN = 1610236422 bitLength = 3072
2016-08-10 12:46:57,513 INFO  general.PaillierTest  [] - encM1 = -1958337390 encM2 = 1661165719
2016-08-10 12:46:57,629 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:46:57,681 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1179322650 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:46:59,908 INFO  encryption.Paillier  [] - testBit false

2016-08-10 12:47:05,313 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:47:05,315 INFO  encryption.Paillier  [] - Parameters = p = 1664905319 q = 1109842077 N = 405919531 NSquared = 592396601 lambdaN = 963069716 bitLength = 3222
2016-08-10 12:47:05,445 INFO  general.PaillierTest  [] - encM1 = 802480001 encM2 = -1433814433
2016-08-10 12:47:05,570 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:47:05,638 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1681016926 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:47:05,639 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 12:47:05,639 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:47:05,641 INFO  encryption.Paillier  [] - Parameters = p = 271995581 q = -362144087 N = 366003397 NSquared = -1453441127 lambdaN = -959703848 bitLength = 201
2016-08-10 12:47:05,642 INFO  general.PaillierTest  [] - encM1 = 1238913274 encM2 = 317045536
2016-08-10 12:47:05,642 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:47:05,642 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2125938910 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:47:08,357 INFO  encryption.Paillier  [] - Parameters = p = 1142371499 q = 1170296359 N = 1031806989 NSquared = 1124286633 lambdaN = 1218178954 bitLength = 3072
2016-08-10 12:47:08,476 INFO  general.PaillierTest  [] - encM1 = 453193801 encM2 = 599728640
2016-08-10 12:47:08,584 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:47:08,641 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1976479896 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:47:50,639 INFO  encryption.Paillier  [] - Parameters = p = 1008724409 q = -886552105 N = -799339681 NSquared = 1980452161 lambdaN = -834141528 bitLength = 6112
2016-08-10 12:47:51,494 INFO  general.PaillierTest  [] - encM1 = -1465765585 encM2 = -205231052
2016-08-10 12:47:52,336 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:47:52,753 INFO  general.PaillierTest  [] - encM1_times_encM2 = -463445842 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:47:52,753 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 12:47:52,754 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:47:52,759 INFO  encryption.Paillier  [] - testBit true
 N = 10110101010011011111011001010101111101100110100000010100101111010110000111000100110010001010010001111111111010000110010000111100001001100100101111000011010100000000100010111010101011100110010111110011
2016-08-10 12:47:52,759 INFO  encryption.Paillier  [] - Parameters = p = 1388478105 q = -1973887893 N = -1162975757 NSquared = -621960023 lambdaN = 619566888 bitLength = 201
2016-08-10 12:47:52,760 INFO  general.PaillierTest  [] - encM1 = 2100284 encM2 = 481012129
2016-08-10 12:47:52,760 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:47:52,760 INFO  general.PaillierTest  [] - encM1_times_encM2 = -667901221 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:47:53,756 INFO  encryption.Paillier  [] - testBit false

2016-08-10 12:47:55,048 INFO  encryption.Paillier  [] - testBit false

2016-08-10 12:47:55,519 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:47:55,521 INFO  encryption.Paillier  [] - Parameters = p = 1285541693 q = -1320740131 N = 132979113 NSquared = -1015254639 lambdaN = 1115786212 bitLength = 3072
2016-08-10 12:47:55,633 INFO  general.PaillierTest  [] - encM1 = -1378099233 encM2 = 1114751228
2016-08-10 12:47:55,745 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:47:55,804 INFO  general.PaillierTest  [] - encM1_times_encM2 = -661241862 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:48:03,954 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:48:03,957 INFO  encryption.Paillier  [] - Parameters = p = 1071405479 q = -1417971599 N = 445045431 NSquared = -563073327 lambdaN = 1563591024 bitLength = 4670
2016-08-10 12:48:04,343 INFO  general.PaillierTest  [] - encM1 = -907803682 encM2 = 187363825
2016-08-10 12:48:04,720 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:48:04,913 INFO  general.PaillierTest  [] - encM1_times_encM2 = -499868042 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:48:04,914 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 12:48:04,914 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:48:04,916 INFO  encryption.Paillier  [] - Parameters = p = 482359993 q = -1365741913 N = -159789905 NSquared = 1964335009 lambdaN = -1785687640 bitLength = 201
2016-08-10 12:48:04,916 INFO  general.PaillierTest  [] - encM1 = 1402925153 encM2 = -2024511628
2016-08-10 12:48:04,916 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:48:04,917 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2001178443 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:48:06,442 INFO  encryption.Paillier  [] - Parameters = p = -1174840653 q = -2143371039 N = -276236461 NSquared = -1323219735 lambdaN = 1520987616 bitLength = 3072
2016-08-10 12:48:06,559 INFO  general.PaillierTest  [] - encM1 = 1712279888 encM2 = 1257815764
2016-08-10 12:48:06,667 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:48:06,723 INFO  general.PaillierTest  [] - encM1_times_encM2 = 626249923 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:48:10,130 INFO  encryption.Paillier  [] - Parameters = p = 543239027 q = 1874253783 N = -1915022699 NSquared = -297317703 lambdaN = -18774106 bitLength = 3185
2016-08-10 12:48:10,256 INFO  general.PaillierTest  [] - encM1 = 2052101051 encM2 = -746180474
2016-08-10 12:48:10,382 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:48:10,445 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1175883310 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:48:10,445 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 12:48:10,445 INFO  general.PaillierTest  [] - i = 0
2016-08-10 12:48:10,447 INFO  encryption.Paillier  [] - testBit false
 N = 10100110100010001100101011000010110101000010100011100001101001010010111100010000111100011100010111110011110111101011010001011001110111111010100111001111100110111100110000001000000100100110100100000011
2016-08-10 12:48:10,449 INFO  encryption.Paillier  [] - testBit false
 N = 10110000110011001111110001110000110111010110000000001110010010111101001000011110010010111000010000101011010101000011000110000001001010010011011011000110001101100100000101010110000000101111111000000011
2016-08-10 12:48:10,451 INFO  encryption.Paillier  [] - testBit false
 N = 11011010100010110001110111101110110100110110110000101101110000010111101001110010101010110010101011010001111101001110111111111011110101101101100100010101001110011011110000100110110100101110100010010111
2016-08-10 12:48:10,452 INFO  encryption.Paillier  [] - testBit true
 N = 10101111100100001000000111101001001111000100111000000010001000000001000111110111110011100111100101101110010000011110110001010100100100110000111101101011010010110111110110000010001100111000011010111101
2016-08-10 12:48:10,452 INFO  encryption.Paillier  [] - Parameters = p = 1163524489 q = -1944421739 N = -2110552387 NSquared = -365402231 lambdaN = -1406155608 bitLength = 201
2016-08-10 12:48:10,453 INFO  general.PaillierTest  [] - encM1 = -884593703 encM2 = -1416475123
2016-08-10 12:48:10,453 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:48:10,453 INFO  general.PaillierTest  [] - encM1_times_encM2 = -881364773 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:48:10,952 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:48:10,953 INFO  encryption.Paillier  [] - Parameters = p = 144870561 q = -759491495 N = 2132441081 NSquared = -1530040271 lambdaN = -193488160 bitLength = 3072
2016-08-10 12:48:11,064 INFO  general.PaillierTest  [] - encM1 = -35461120 encM2 = 749157811
2016-08-10 12:48:11,178 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:48:11,233 INFO  general.PaillierTest  [] - encM1_times_encM2 = -563646911 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:48:48,234 INFO  encryption.Paillier  [] - testBit true

2016-08-10 12:48:48,239 INFO  encryption.Paillier  [] - Parameters = p = 462433001 q = 1476839339 N = -1809987421 NSquared = -1976756279 lambdaN = 272853768 bitLength = 5609
2016-08-10 12:48:48,881 INFO  general.PaillierTest  [] - encM1 = -213157523 encM2 = 402382270
2016-08-10 12:48:49,519 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:48:49,836 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1287746643 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 12:48:49,836 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 12:48:49,837 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 12:48:49,837 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 12:48:49,837 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-10 12:48:49,841 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 12:48:49,844 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 12:48:49,845 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-10 12:48:49,846 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 12:48:49,846 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-10 12:48:49,846 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 12:48:49,846 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-10 12:48:49,847 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-10 12:48:49,848 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-10 12:48:49,850 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-10 12:48:49,851 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-10 12:48:49,853 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-10 12:48:49,853 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-10 12:48:49,854 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-10 12:48:49,855 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-10 12:48:49,855 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-10 12:48:49,862 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3639428312652249793.xml
2016-08-10 12:48:49,906 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-10 12:48:49,906 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3639428312652249793.xml hdfs = false
2016-08-10 12:48:49,906 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3639428312652249793.xml
2016-08-10 12:48:49,910 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,911 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 12:48:49,911 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:48:49,912 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,912 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,912 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,912 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,912 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,913 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,913 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3639428312652249793.xml hdfs = false
2016-08-10 12:48:49,913 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3639428312652249793.xml
2016-08-10 12:48:49,915 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,915 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 12:48:49,916 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:48:49,916 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,916 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,916 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,917 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,917 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,917 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,917 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 12:48:49,918 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml
2016-08-10 12:48:49,918 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml
2016-08-10 12:48:49,919 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 12:48:49,920 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:48:49,920 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:49,920 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 12:48:49,920 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 12:48:49,920 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:48:49,922 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 12:48:49,922 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2046962496430178260.xml
2016-08-10 12:48:49,923 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2046962496430178260.xml
2016-08-10 12:48:49,924 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:48:49,924 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:49,924 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:48:49,925 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 12:48:49,925 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1590685965368846471.xml
2016-08-10 12:48:49,926 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2046962496430178260.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1590685965368846471.xml
2016-08-10 12:48:49,927 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:48:49,927 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:48:49,927 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:49,929 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 12:48:49,929 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1402597300541759045.xml
2016-08-10 12:48:49,929 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2046962496430178260.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1590685965368846471.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1402597300541759045.xml
2016-08-10 12:48:49,931 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:48:49,931 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:49,931 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:48:49,933 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 12:48:49,933 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1588259062752474907.xml
2016-08-10 12:48:49,933 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2046962496430178260.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1590685965368846471.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1402597300541759045.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1588259062752474907.xml
2016-08-10 12:48:49,935 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:48:49,935 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:49,935 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:48:49,938 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-10 12:48:49,938 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml
2016-08-10 12:48:49,939 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml
2016-08-10 12:48:49,941 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,942 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 12:48:49,942 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,942 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:48:49,943 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:48:49,943 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 12:48:49,943 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,944 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:49,944 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,944 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:48:49,944 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,944 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 12:48:49,944 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,945 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 12:48:49,945 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,945 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 12:48:49,946 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2046962496430178260.xml
2016-08-10 12:48:49,946 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2046962496430178260.xml
2016-08-10 12:48:49,948 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,948 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 12:48:49,948 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,949 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 12:48:49,949 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,949 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 12:48:49,949 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,949 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 12:48:49,950 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,950 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 12:48:49,950 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1590685965368846471.xml
2016-08-10 12:48:49,950 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1590685965368846471.xml
2016-08-10 12:48:49,952 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,952 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 12:48:49,952 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,952 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:48:49,952 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,952 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:48:49,953 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,953 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:49,953 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,953 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:48:49,953 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1402597300541759045.xml
2016-08-10 12:48:49,954 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1402597300541759045.xml
2016-08-10 12:48:49,956 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,956 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 12:48:49,956 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,956 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:48:49,957 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,957 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:48:49,957 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,957 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:49,957 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,958 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:48:49,958 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1588259062752474907.xml
2016-08-10 12:48:49,958 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1588259062752474907.xml
2016-08-10 12:48:49,961 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,961 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 12:48:49,961 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,961 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:48:49,962 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,962 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:48:49,962 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,962 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:49,962 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,962 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:48:49,963 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml
2016-08-10 12:48:49,963 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1356493465357336999.xml
2016-08-10 12:48:49,965 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,965 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 12:48:49,965 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,965 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:48:49,966 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:48:49,966 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 12:48:49,966 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,967 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:49,967 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,967 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:48:49,967 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,967 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 12:48:49,968 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,968 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 12:48:49,968 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,968 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 12:48:49,968 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2046962496430178260.xml
2016-08-10 12:48:49,969 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2046962496430178260.xml
2016-08-10 12:48:49,971 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,971 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 12:48:49,972 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,972 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 12:48:49,972 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,973 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 12:48:49,973 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,973 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 12:48:49,973 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,973 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 12:48:49,974 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1590685965368846471.xml
2016-08-10 12:48:49,974 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1590685965368846471.xml
2016-08-10 12:48:49,976 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,976 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 12:48:49,976 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,977 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:48:49,977 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,977 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:48:49,977 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,977 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:49,978 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,978 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:48:49,978 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1402597300541759045.xml
2016-08-10 12:48:49,978 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1402597300541759045.xml
2016-08-10 12:48:49,980 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,980 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 12:48:49,980 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,980 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:48:49,980 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,981 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:48:49,981 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,981 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:49,981 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,981 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:48:49,981 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1588259062752474907.xml
2016-08-10 12:48:49,982 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1588259062752474907.xml
2016-08-10 12:48:49,984 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:49,984 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 12:48:49,985 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:49,985 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:48:49,985 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:49,985 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:48:49,985 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,985 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:49,986 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:49,986 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:48:50,029 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,030 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,030 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,030 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,031 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,032 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 12:48:50,032 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,032 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 12:48:50,032 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,033 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 12:48:50,033 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,033 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 12:48:50,034 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,034 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 12:48:50,034 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,034 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 12:48:50,035 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,035 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 12:48:50,035 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,035 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 12:48:50,036 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,036 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,036 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,036 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,037 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,037 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 12:48:50,037 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,037 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 12:48:50,038 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,038 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,038 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,038 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,039 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,039 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 12:48:50,039 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,039 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 12:48:50,040 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,040 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 12:48:50,040 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,040 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 12:48:50,043 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,044 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 12:48:50,044 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,044 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 12:48:50,045 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,045 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 12:48:50,045 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,045 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 12:48:50,046 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,046 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,046 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,047 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,047 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,047 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 12:48:50,047 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,048 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 12:48:50,048 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,048 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,048 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,048 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,049 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,049 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 12:48:50,049 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,049 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 12:48:50,050 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,050 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 12:48:50,050 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,050 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 12:48:50,051 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,051 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 12:48:50,051 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,051 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 12:48:50,051 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,052 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 12:48:50,052 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,052 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 12:48:50,052 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,053 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,053 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,053 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,053 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,053 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 12:48:50,054 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,054 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 12:48:50,058 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 12:48:50,059 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 12:48:50,059 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 12:48:50,059 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 12:48:50,060 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 12:48:50,060 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 12:48:50,060 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 12:48:50,060 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 12:48:50,061 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 12:48:50,061 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 12:48:50,061 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 12:48:50,061 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 12:48:50,062 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 12:48:50,062 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 12:48:50,062 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 12:48:50,063 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 12:48:50,063 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 12:48:50,063 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 12:48:50,063 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 12:48:50,063 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 12:48:50,063 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 12:48:50,064 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 12:48:50,064 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 12:48:50,064 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,064 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,064 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,064 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,064 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,064 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,064 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 12:48:50,065 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 12:48:50,065 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:48:50,065 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,065 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,065 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,065 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,065 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,066 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,066 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,066 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 12:48:50,066 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 12:48:50,066 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,066 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,066 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,067 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,067 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,067 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,067 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 12:48:50,067 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 12:48:50,068 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 12:48:50,068 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 12:48:50,068 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,068 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:48:50,068 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 12:48:50,068 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,068 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:48:50,069 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 12:48:50,069 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,069 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:48:50,069 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 12:48:50,069 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:48:50,069 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 12:48:50,069 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:48:50,070 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 12:48:50,070 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 12:48:50,070 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 12:48:50,071 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 12:48:50,071 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 12:48:50,071 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 12:48:50,071 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 12:48:50,071 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 12:48:50,071 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,071 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,071 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,072 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,072 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,072 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,072 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 12:48:50,072 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 12:48:50,072 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:48:50,073 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,073 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,073 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,073 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,073 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,073 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,073 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,073 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 12:48:50,074 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 12:48:50,074 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,074 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,074 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,074 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,074 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,074 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,074 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 12:48:50,075 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 12:48:50,075 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 12:48:50,075 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 12:48:50,075 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,075 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:48:50,075 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 12:48:50,075 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,076 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:48:50,076 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 12:48:50,076 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,076 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:48:50,076 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 12:48:50,076 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:48:50,076 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 12:48:50,076 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:48:50,077 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 12:48:50,077 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 12:48:50,077 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 12:48:50,077 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,077 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 12:48:50,077 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,077 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 12:48:50,077 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,078 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 12:48:50,078 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:48:50,078 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 12:48:50,078 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 12:48:50,078 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 12:48:50,078 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,078 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 12:48:50,079 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,079 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 12:48:50,079 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,079 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 12:48:50,079 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 12:48:50,079 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 12:48:50,079 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 12:48:50,080 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 12:48:50,080 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 12:48:50,080 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 12:48:50,080 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 12:48:50,080 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 12:48:50,080 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,080 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,081 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,081 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,081 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,081 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,081 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 12:48:50,081 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 12:48:50,081 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:48:50,082 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,082 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,082 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,082 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,082 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,082 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,082 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,082 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 12:48:50,083 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 12:48:50,083 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,083 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,083 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,083 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,083 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 12:48:50,083 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,083 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 12:48:50,084 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 12:48:50,084 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 12:48:50,084 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 12:48:50,084 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,084 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:48:50,084 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 12:48:50,084 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,084 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:48:50,085 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 12:48:50,085 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,085 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 12:48:50,085 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 12:48:50,085 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:48:50,085 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 12:48:50,085 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 12:48:50,086 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 12:48:50,086 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 12:48:50,086 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 12:48:50,086 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,087 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 12:48:50,087 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,087 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 12:48:50,087 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,087 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 12:48:50,087 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 12:48:50,087 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 12:48:50,088 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 12:48:50,088 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 12:48:50,088 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,088 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 12:48:50,088 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,089 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 12:48:50,089 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 12:48:50,089 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 12:48:50,090 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,090 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,090 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,090 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,091 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,091 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,091 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,091 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,092 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,092 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,092 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,092 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,093 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,094 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,094 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,094 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,095 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,095 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,095 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,095 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,096 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,096 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,096 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,096 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,097 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,098 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,098 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,098 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,099 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,099 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,099 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,099 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,100 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,100 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,100 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,100 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,101 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,101 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,101 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,102 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,102 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,102 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,102 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,103 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 12:48:50,103 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-10 12:48:50,104 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-10 12:48:50,106 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-10 12:48:50,106 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-10 12:48:50,109 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner5752012061714863477.xml
2016-08-10 12:48:50,112 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner5752012061714863477.xml hdfs = false
2016-08-10 12:48:50,112 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner5752012061714863477.xml
2016-08-10 12:48:50,114 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,114 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:48:50,115 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile7088692840367583124.xml
2016-08-10 12:48:50,117 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile7088692840367583124.xml hdfs = false
2016-08-10 12:48:50,117 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile7088692840367583124.xml
2016-08-10 12:48:50,119 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,119 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:48:50,119 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,119 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,119 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,120 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType5767679924387713944.xml
2016-08-10 12:48:50,122 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType5767679924387713944.xml hdfs = false
2016-08-10 12:48:50,122 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType5767679924387713944.xml
2016-08-10 12:48:50,123 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,124 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:48:50,126 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-10 12:48:50,126 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 12:48:50,126 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6567635000202977978.xml
2016-08-10 12:48:50,127 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6567635000202977978.xml
2016-08-10 12:48:50,128 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 12:48:50,128 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 12:48:50,128 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 12:48:50,130 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6567635000202977978.xml
2016-08-10 12:48:50,130 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6567635000202977978.xml
2016-08-10 12:48:50,132 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,133 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 12:48:50,133 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 12:48:50,133 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 12:48:50,133 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-10 12:48:50,134 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-10 12:48:50,134 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 12:48:50,135 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile7913011043467649961.tmp
2016-08-10 12:48:50,135 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8134963462566981890.xml
2016-08-10 12:48:50,138 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8134963462566981890.xml hdfs = false
2016-08-10 12:48:50,138 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8134963462566981890.xml
2016-08-10 12:48:50,140 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,140 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:48:50,141 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,141 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,141 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,141 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,142 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 12:48:50,142 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile255328009935820291.xml
2016-08-10 12:48:50,143 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile255328009935820291.xml
2016-08-10 12:48:50,144 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 12:48:50,144 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 12:48:50,144 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 12:48:50,144 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 12:48:50,146 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile255328009935820291.xml
2016-08-10 12:48:50,146 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile255328009935820291.xml
2016-08-10 12:48:50,148 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,148 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 12:48:50,148 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 12:48:50,148 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 12:48:50,148 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,149 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-10 12:48:50,149 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,149 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-10 12:48:50,149 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,149 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-10 12:48:50,149 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-10 12:48:50,360 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-10 12:48:50,724 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-10 12:48:50,725 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-10 12:48:50,725 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1356355945555010289.xml
2016-08-10 12:48:50,728 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1356355945555010289.xml hdfs = false
2016-08-10 12:48:50,728 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1356355945555010289.xml
2016-08-10 12:48:50,731 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,731 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:48:50,731 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,731 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,731 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,732 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,732 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 12:48:50,732 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2708055933863636525.xml
2016-08-10 12:48:50,732 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2708055933863636525.xml
2016-08-10 12:48:50,733 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 12:48:50,733 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 12:48:50,733 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 12:48:50,734 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 12:48:50,735 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2708055933863636525.xml
2016-08-10 12:48:50,735 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2708055933863636525.xml
2016-08-10 12:48:50,736 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,736 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 12:48:50,737 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 12:48:50,737 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 12:48:50,737 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-10 12:48:50,737 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1875494943475422060.xml
2016-08-10 12:48:50,739 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1875494943475422060.xml hdfs = false
2016-08-10 12:48:50,740 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1875494943475422060.xml
2016-08-10 12:48:50,741 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,741 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 12:48:50,741 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,742 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,742 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,742 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,742 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 12:48:50,743 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8335577565308776093.xml
2016-08-10 12:48:50,743 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8335577565308776093.xml
2016-08-10 12:48:50,744 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 12:48:50,745 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 12:48:50,745 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 12:48:50,745 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 12:48:50,747 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8335577565308776093.xml
2016-08-10 12:48:50,747 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8335577565308776093.xml
2016-08-10 12:48:50,749 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,749 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 12:48:50,750 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 12:48:50,750 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 12:48:50,750 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-10 12:48:50,970 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 12:48:50,970 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile4584066256967352691.tmp
2016-08-10 12:48:50,971 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile4584066256967352691.tmp
2016-08-10 12:48:50,971 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5535753858168715275.xml
2016-08-10 12:48:50,974 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5535753858168715275.xml hdfs = false
2016-08-10 12:48:50,974 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5535753858168715275.xml
2016-08-10 12:48:50,976 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,976 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 12:48:50,976 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:48:50,976 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,977 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,977 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,977 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,977 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,977 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,978 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 12:48:50,978 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8426034936639718265.xml
2016-08-10 12:48:50,978 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8426034936639718265.xml
2016-08-10 12:48:50,979 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 12:48:50,980 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:48:50,980 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:50,980 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 12:48:50,980 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 12:48:50,980 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:48:50,981 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 12:48:50,982 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 12:48:50,982 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8182525556086550299.xml
2016-08-10 12:48:50,982 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8426034936639718265.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8182525556086550299.xml
2016-08-10 12:48:50,984 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:48:50,984 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:50,984 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:48:50,984 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 12:48:50,986 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 12:48:50,986 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7880127400643047383.xml
2016-08-10 12:48:50,986 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8426034936639718265.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8182525556086550299.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7880127400643047383.xml
2016-08-10 12:48:50,987 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:48:50,987 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 12:48:50,987 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:50,987 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 12:48:50,988 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 12:48:50,989 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3932875019317328231.xml
2016-08-10 12:48:50,989 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8426034936639718265.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8182525556086550299.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7880127400643047383.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3932875019317328231.xml
2016-08-10 12:48:50,990 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:48:50,990 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:50,990 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:48:50,990 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-10 12:48:50,990 INFO  utils.TestUtils    [] - filterName = ip
2016-08-10 12:48:50,991 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 12:48:50,991 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file851345216685525668.xml
2016-08-10 12:48:50,992 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8426034936639718265.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8182525556086550299.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7880127400643047383.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3932875019317328231.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file851345216685525668.xml
2016-08-10 12:48:50,992 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 12:48:50,992 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 12:48:50,993 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 12:48:50,994 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8426034936639718265.xml
2016-08-10 12:48:50,994 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file8426034936639718265.xml
2016-08-10 12:48:50,995 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:50,995 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 12:48:50,995 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:50,996 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:48:50,996 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 12:48:50,996 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 12:48:50,996 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,996 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:50,996 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,996 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:48:50,997 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,997 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 12:48:50,997 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:50,997 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 12:48:50,997 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:50,997 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 12:48:50,997 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 12:48:51,033 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8182525556086550299.xml
2016-08-10 12:48:51,033 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8182525556086550299.xml
2016-08-10 12:48:51,034 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:51,035 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 12:48:51,035 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:51,035 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 12:48:51,037 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:51,038 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 12:48:51,039 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:51,039 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 12:48:51,039 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:51,039 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 12:48:51,039 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 12:48:51,072 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7880127400643047383.xml
2016-08-10 12:48:51,073 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7880127400643047383.xml
2016-08-10 12:48:51,074 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:51,075 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 12:48:51,075 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:51,075 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 12:48:51,075 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:51,075 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:48:51,076 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:51,076 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:51,076 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:51,076 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 12:48:51,076 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 12:48:51,100 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3932875019317328231.xml
2016-08-10 12:48:51,100 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3932875019317328231.xml
2016-08-10 12:48:51,102 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:51,102 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 12:48:51,102 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:51,103 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:48:51,103 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:51,103 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:48:51,103 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:51,103 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:51,103 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:51,103 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:48:51,104 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-10 12:48:51,104 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-10 12:48:51,125 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file851345216685525668.xml
2016-08-10 12:48:51,125 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file851345216685525668.xml
2016-08-10 12:48:51,127 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 12:48:51,127 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 12:48:51,127 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 12:48:51,127 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 12:48:51,128 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 12:48:51,128 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 12:48:51,128 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:51,128 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 12:48:51,128 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 12:48:51,132 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 12:48:51,135 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:48:51,136 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:51,137 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6735534922910398368.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7367518231149063147.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse9112258891500364121.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8606570746028799592.txt
2016-08-10 12:48:51,139 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:51,155 INFO  encryption.Paillier  [] - Parameters = p = 1708746277 q = 1614908497 N = -318075467 NSquared = -2104172039 lambdaN = -910432560 bitLength = 384
2016-08-10 12:48:51,155 INFO  encryption.Paillier  [] - Parameters = p = 1708746277 q = 1614908497 N = -318075467 NSquared = -2104172039 lambdaN = -910432560 bitLength = 384
2016-08-10 12:48:51,155 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:51,991 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:48:51,992 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:52,224 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:52,336 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:52,337 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:48:52,340 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:52,343 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:52,347 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:52,353 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:52,356 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:52,359 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:48:52,364 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:48:52,367 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:48:52,370 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:52,370 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:52,378 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:52,378 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:52,508 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:52,520 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:52,521 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:52,524 INFO  utils.BaseTests    [] - results:
2016-08-10 12:48:52,524 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:48:52,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:48:52,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:52,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:52,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:48:52,526 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:52,526 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:52,526 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:48:52,526 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:48:52,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:52,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:52,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:48:52,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:52,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:52,528 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:48:52,529 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:48:52,529 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 12:48:52,529 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:52,530 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1078558348157836460.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5648077727972161462.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse853952315890986850.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7228054524009145246.txt
2016-08-10 12:48:52,531 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:52,542 INFO  encryption.Paillier  [] - Parameters = p = 278362525 q = -2097912461 N = -626355577 NSquared = -617987279 lambdaN = 1519840676 bitLength = 384
2016-08-10 12:48:52,543 INFO  encryption.Paillier  [] - Parameters = p = 278362525 q = -2097912461 N = -626355577 NSquared = -617987279 lambdaN = 1519840676 bitLength = 384
2016-08-10 12:48:52,543 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:53,027 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:48:53,027 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:53,148 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:53,227 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:53,227 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 12:48:53,229 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 12:48:53,230 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 12:48:53,231 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 12:48:53,233 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 12:48:53,234 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 12:48:53,235 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 12:48:53,237 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:48:53,239 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 12:48:53,244 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:53,244 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:53,245 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:53,245 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:53,299 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:53,300 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:53,301 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:53,301 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:53,302 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:53,302 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 12:48:53,303 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 12:48:53,303 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 12:48:53,303 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 12:48:53,303 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:53,304 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 12:48:53,304 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 12:48:53,304 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 12:48:53,304 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:53,305 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1171376900655781596.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8212803151299631956.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2270858307012538906.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6589175262447079223.txt
2016-08-10 12:48:53,305 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:53,312 INFO  encryption.Paillier  [] - Parameters = p = 455245857 q = 2082361605 N = 1913975205 NSquared = -1713367975 lambdaN = 1737600352 bitLength = 384
2016-08-10 12:48:53,312 INFO  encryption.Paillier  [] - Parameters = p = 455245857 q = 2082361605 N = 1913975205 NSquared = -1713367975 lambdaN = 1737600352 bitLength = 384
2016-08-10 12:48:53,313 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:53,710 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:48:53,710 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:53,818 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:53,868 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:53,868 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 12:48:53,869 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:48:53,871 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 12:48:53,872 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 12:48:53,873 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:48:53,874 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:48:53,875 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 12:48:53,876 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 12:48:53,877 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 12:48:53,879 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:53,879 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:53,880 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:53,880 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:53,937 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:53,938 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:53,938 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:53,940 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:53,940 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:53,941 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:53,941 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:53,941 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:53,941 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 12:48:53,941 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 12:48:53,942 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 12:48:53,942 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 12:48:53,943 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 12:48:53,943 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:53,943 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2048398799148469696.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1753060470155682728.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse432717879202671331.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3582404590183144051.txt
2016-08-10 12:48:53,943 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:53,954 INFO  encryption.Paillier  [] - Parameters = p = 208108851 q = 1848851711 N = 2006362573 NSquared = 47992361 lambdaN = -3614142 bitLength = 384
2016-08-10 12:48:53,954 INFO  encryption.Paillier  [] - Parameters = p = 208108851 q = 1848851711 N = 2006362573 NSquared = 47992361 lambdaN = -3614142 bitLength = 384
2016-08-10 12:48:53,954 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:54,320 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:48:54,320 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:54,425 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:54,476 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:54,476 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:54,477 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:54,477 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:54,478 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:54,478 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:54,528 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:54,529 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:54,529 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:54,529 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:54,530 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:54,530 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:54,531 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 12:48:54,531 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 12:48:54,531 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:48:54,531 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:54,532 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2083137794721075747.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query695468665954902284.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse896422464901262708.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6438090987583469498.txt
2016-08-10 12:48:54,532 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:54,543 INFO  encryption.Paillier  [] - Parameters = p = -930394955 q = 190663897 N = -40189587 NSquared = -1152808855 lambdaN = 1248627192 bitLength = 384
2016-08-10 12:48:54,544 INFO  encryption.Paillier  [] - Parameters = p = -930394955 q = 190663897 N = -40189587 NSquared = -1152808855 lambdaN = 1248627192 bitLength = 384
2016-08-10 12:48:54,544 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:55,301 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:48:55,301 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:55,408 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:55,453 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:55,453 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:48:55,454 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:55,456 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:55,457 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:55,458 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:55,460 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:55,461 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:48:55,462 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:48:55,464 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:48:55,465 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:55,465 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:55,468 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:55,468 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:55,547 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:55,553 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:55,553 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:55,555 INFO  utils.BaseTests    [] - results:
2016-08-10 12:48:55,555 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:48:55,555 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:48:55,555 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:55,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:55,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:48:55,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:55,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:55,556 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:48:55,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:48:55,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:55,556 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:55,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:48:55,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:55,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:55,557 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:48:55,558 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:48:55,558 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:48:55,558 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:55,558 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8134031807668134209.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7107863608162446636.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6376805878570248910.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6585979834590010183.txt
2016-08-10 12:48:55,558 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:55,563 INFO  encryption.Paillier  [] - Parameters = p = -885861193 q = 3965451 N = 1712853469 NSquared = 1991186633 lambdaN = -1715025446 bitLength = 384
2016-08-10 12:48:55,563 INFO  encryption.Paillier  [] - Parameters = p = -885861193 q = 3965451 N = 1712853469 NSquared = 1991186633 lambdaN = -1715025446 bitLength = 384
2016-08-10 12:48:55,563 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:56,313 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:48:56,313 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:56,420 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:56,471 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:56,471 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:48:56,472 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:56,474 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:56,475 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:56,476 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:56,477 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:56,478 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:48:56,480 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:48:56,481 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:48:56,483 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:56,483 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:56,486 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:56,486 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:56,563 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:56,569 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:56,569 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:56,573 INFO  utils.BaseTests    [] - results:
2016-08-10 12:48:56,573 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:48:56,574 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:48:56,574 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:56,574 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:56,574 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:48:56,574 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:56,574 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:56,574 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:48:56,574 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:48:56,575 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:56,575 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:56,575 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:48:56,575 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:56,575 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:56,575 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:48:56,576 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:48:56,576 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:48:56,576 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:56,577 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1049516786586099381.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2776142746331613838.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4990615115385373065.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6555569198518131608.txt
2016-08-10 12:48:56,577 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:56,586 INFO  encryption.Paillier  [] - Parameters = p = -2007617659 q = -755187065 N = 375511331 NSquared = 1219648201 lambdaN = -578325620 bitLength = 384
2016-08-10 12:48:56,586 INFO  encryption.Paillier  [] - Parameters = p = -2007617659 q = -755187065 N = 375511331 NSquared = 1219648201 lambdaN = -578325620 bitLength = 384
2016-08-10 12:48:56,586 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:57,378 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:48:57,379 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:57,492 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:57,542 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:57,542 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:48:57,543 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:57,545 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:57,546 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:57,547 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:57,549 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:57,550 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:48:57,551 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:48:57,555 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:48:57,557 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:57,557 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:57,560 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:57,560 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:57,641 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:48:57,646 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:57,646 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:57,647 INFO  utils.BaseTests    [] - results:
2016-08-10 12:48:57,647 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:48:57,648 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:48:57,648 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:57,648 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:57,648 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:48:57,648 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:57,648 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:57,648 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:48:57,648 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:48:57,649 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:57,649 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:57,649 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:48:57,649 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:57,649 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:57,649 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:48:57,650 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:48:57,650 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:48:57,650 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:57,650 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7683048162749112553.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7432476730894113420.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6371815481756614311.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2867261661321771243.txt
2016-08-10 12:48:57,650 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:57,661 INFO  encryption.Paillier  [] - Parameters = p = -1263341523 q = 852523843 N = 852130503 NSquared = -1192343887 lambdaN = 631474092 bitLength = 384
2016-08-10 12:48:57,661 INFO  encryption.Paillier  [] - Parameters = p = -1263341523 q = 852523843 N = 852130503 NSquared = -1192343887 lambdaN = 631474092 bitLength = 384
2016-08-10 12:48:57,661 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:58,423 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:48:58,423 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:58,535 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:58,583 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:58,583 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:48:58,584 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:58,585 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:58,587 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:58,588 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:58,589 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:48:58,590 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:48:58,591 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:48:58,593 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:48:58,594 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:58,594 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:58,596 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:58,597 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:58,672 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:58,678 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:58,678 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:58,682 INFO  utils.BaseTests    [] - results:
2016-08-10 12:48:58,683 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:48:58,683 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 12:48:58,683 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:58,683 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:58,683 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:48:58,684 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:58,684 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:48:58,684 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:48:58,684 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:48:58,684 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:58,685 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:58,685 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:48:58,685 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:58,685 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:48:58,685 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 12:48:58,686 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 12:48:58,686 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 12:48:58,686 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:58,687 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6078983635107464584.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1106395945599260396.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7153092276041624672.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5114425949415753421.txt
2016-08-10 12:48:58,687 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:58,694 INFO  encryption.Paillier  [] - Parameters = p = -100579451 q = 171770079 N = 63851739 NSquared = -377044135 lambdaN = -3669444 bitLength = 384
2016-08-10 12:48:58,694 INFO  encryption.Paillier  [] - Parameters = p = -100579451 q = 171770079 N = 63851739 NSquared = -377044135 lambdaN = -3669444 bitLength = 384
2016-08-10 12:48:58,694 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:59,112 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:48:59,112 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:59,219 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:59,266 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:59,266 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 12:48:59,267 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 12:48:59,268 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 12:48:59,269 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 12:48:59,270 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 12:48:59,271 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 12:48:59,272 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 12:48:59,273 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:48:59,274 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 12:48:59,275 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:59,275 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:59,277 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:59,277 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:59,331 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:59,332 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:59,333 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:59,333 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:59,334 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:59,334 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 12:48:59,334 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 12:48:59,334 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 12:48:59,334 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 12:48:59,334 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:59,335 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 12:48:59,335 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 12:48:59,335 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 12:48:59,335 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:59,335 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier3185997842447795851.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query9166635515113732492.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2236141180494255261.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3876895793657673024.txt
2016-08-10 12:48:59,336 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:59,340 INFO  encryption.Paillier  [] - Parameters = p = -1077739227 q = 63156589 N = -939454015 NSquared = -1262668927 lambdaN = 18782156 bitLength = 384
2016-08-10 12:48:59,340 INFO  encryption.Paillier  [] - Parameters = p = -1077739227 q = 63156589 N = -939454015 NSquared = -1262668927 lambdaN = 18782156 bitLength = 384
2016-08-10 12:48:59,340 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:48:59,732 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:48:59,733 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:48:59,837 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:48:59,887 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:48:59,887 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 12:48:59,888 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:48:59,889 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 12:48:59,890 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 12:48:59,892 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:48:59,892 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 12:48:59,893 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 12:48:59,894 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 12:48:59,895 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 12:48:59,896 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:48:59,896 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:48:59,897 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:48:59,897 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:48:59,955 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:59,955 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:59,955 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:59,956 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:48:59,957 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:48:59,957 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:59,957 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:59,958 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 12:48:59,958 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 12:48:59,958 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 12:48:59,958 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 12:48:59,958 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 12:48:59,958 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 12:48:59,958 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:48:59,959 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8214685219149400248.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8497717018611996659.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2807719803782483884.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile711940122230193426.txt
2016-08-10 12:48:59,959 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:48:59,964 INFO  encryption.Paillier  [] - Parameters = p = 1385384389 q = 1999168127 N = 402227899 NSquared = 747140249 lambdaN = 656321340 bitLength = 384
2016-08-10 12:48:59,964 INFO  encryption.Paillier  [] - Parameters = p = 1385384389 q = 1999168127 N = 402227899 NSquared = 747140249 lambdaN = 656321340 bitLength = 384
2016-08-10 12:48:59,964 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:49:00,350 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 12:49:00,350 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:49:00,461 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:49:00,509 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:49:00,509 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:49:00,510 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:49:00,510 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:49:00,511 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:49:00,511 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:49:00,561 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:49:00,561 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:49:00,561 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:49:00,562 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 12:49:00,562 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:49:00,563 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:49:00,563 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 12:49:00,564 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 12:49:00,564 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 12:49:00,564 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 12:49:00,564 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5723365203515152000.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5411052173569939738.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7767545383614187811.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1772616532729789821.txt
2016-08-10 12:49:00,565 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:49:00,574 INFO  encryption.Paillier  [] - Parameters = p = 1079643583 q = 1003838143 N = 552626049 NSquared = 2075725569 lambdaN = -109346834 bitLength = 384
2016-08-10 12:49:00,574 INFO  encryption.Paillier  [] - Parameters = p = 1079643583 q = 1003838143 N = 552626049 NSquared = 2075725569 lambdaN = -109346834 bitLength = 384
2016-08-10 12:49:00,574 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 12:49:01,356 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 12:49:01,357 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 12:49:01,357 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-10 12:49:01,463 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 12:49:01,516 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 12:49:01,516 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 12:49:01,518 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:49:01,519 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:49:01,521 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:49:01,522 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:49:01,524 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 12:49:01,525 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 12:49:01,527 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 12:49:01,528 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 12:49:01,530 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 12:49:01,530 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 12:49:01,533 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 12:49:01,533 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 12:49:01,617 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 12:49:01,622 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 12:49:01,622 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 12:49:01,624 INFO  utils.BaseTests    [] - results:
2016-08-10 12:49:01,624 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 12:49:01,624 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:49:01,624 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:49:01,624 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 12:49:01,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:49:01,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 12:49:01,625 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 12:49:01,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 12:49:01,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:49:01,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:49:01,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 12:49:01,626 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:49:01,626 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 12:49:01,626 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 17:59:23,912 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-10 17:59:23,917 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-10 17:59:23,920 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-10 17:59:23,921 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 17:59:23,922 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 17:59:23,922 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 17:59:23,922 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-10 17:59:23,923 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-10 17:59:23,931 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-10 17:59:23,932 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-10 17:59:23,932 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-10 17:59:23,932 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-10 17:59:23,933 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-10 17:59:23,933 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-10 17:59:23,934 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-10 17:59:23,934 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-10 17:59:23,934 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-10 17:59:23,935 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-10 17:59:23,936 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-10 17:59:23,936 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-10 17:59:23,936 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-10 17:59:23,937 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-10 17:59:23,937 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 17:59:24,024 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 17:59:24,025 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 17:59:24,025 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 17:59:24,026 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 17:59:24,026 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 17:59:24,026 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 17:59:24,026 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 17:59:24,030 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-10 17:59:24,030 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-10 17:59:24,034 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 17:59:24,035 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 17:59:24,036 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 17:59:24,038 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 17:59:24,038 INFO  general.PaillierTest  [] - i = 0
2016-08-10 17:59:24,042 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-10 17:59:24,080 INFO  encryption.Paillier  [] - Parameters = p = 691263323 q = 2140556677 N = 1409761607 NSquared = 981934513 lambdaN = -711029196 bitLength = 201
2016-08-10 17:59:24,140 INFO  general.PaillierTest  [] - encM1 = -1892373944 encM2 = 305461684
2016-08-10 17:59:24,140 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 17:59:24,141 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1440414837 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 17:59:24,900 INFO  encryption.Paillier  [] - Parameters = p = -1717836765 q = 982253169 N = 1194028403 NSquared = -1116921431 lambdaN = 964806000 bitLength = 3072
2016-08-10 17:59:25,035 INFO  general.PaillierTest  [] - encM1 = -1435934262 encM2 = -1156373468
2016-08-10 17:59:25,152 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 17:59:25,212 INFO  general.PaillierTest  [] - encM1_times_encM2 = -402024644 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 17:59:52,236 INFO  encryption.Paillier  [] - Parameters = p = -685177887 q = -1685283941 N = 1966773307 NSquared = 1854948761 lambdaN = 21133920 bitLength = 4883
2016-08-10 17:59:52,706 INFO  general.PaillierTest  [] - encM1 = 528075880 encM2 = -2137199077
2016-08-10 17:59:53,171 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 17:59:53,406 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1871784181 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 17:59:53,406 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 17:59:53,406 INFO  general.PaillierTest  [] - i = 0
2016-08-10 17:59:53,415 INFO  encryption.Paillier  [] - testBit false
 N = 11000100000010001110111011010011110110101011011110100101111101101111010111110001101011010010010000100000101001110101111101010111100100100001011111110010100010110110001111111101110010101001100110010111
2016-08-10 17:59:53,418 INFO  encryption.Paillier  [] - testBit false
 N = 11000011101100011011101111011101001000011110011101011001100001111100010100011110001000110110000100110000111011101110100010011110110101000100101001010011111000001011000001101110100000000011010101011111
2016-08-10 17:59:53,421 INFO  encryption.Paillier  [] - testBit false
 N = 11110100000001011000010101001111001111000101000110111001111001010101000110110001100110101011010010000010101011111000001010011000110111001110001001011011111000111010110011010100101000110001100000001011
2016-08-10 17:59:53,424 INFO  encryption.Paillier  [] - testBit true
 N = 11000000101110110100001100000000111000111011110010011111111111000110110010000000001010111010001110111011011011000001010010101001011010111011100011110001001010101111100010000010100111100111011100100101
2016-08-10 17:59:53,424 INFO  encryption.Paillier  [] - Parameters = p = -1558865005 q = 527500647 N = -2103544027 NSquared = -585143463 lambdaN = 1611393814 bitLength = 201
2016-08-10 17:59:53,425 INFO  general.PaillierTest  [] - encM1 = 2096389629 encM2 = 1810886146
2016-08-10 17:59:53,425 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 17:59:53,425 INFO  general.PaillierTest  [] - encM1_times_encM2 = 658417274 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 17:59:57,685 INFO  encryption.Paillier  [] - testBit false

2016-08-10 17:59:58,285 INFO  encryption.Paillier  [] - testBit true

2016-08-10 17:59:58,287 INFO  encryption.Paillier  [] - Parameters = p = 300774195 q = 38431617 N = -91529805 NSquared = 2125302569 lambdaN = -787617152 bitLength = 3072
2016-08-10 17:59:58,407 INFO  general.PaillierTest  [] - encM1 = 1853159280 encM2 = 615636470
2016-08-10 17:59:58,529 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 17:59:58,587 INFO  general.PaillierTest  [] - encM1_times_encM2 = 964668966 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:01,357 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:00:01,359 INFO  encryption.Paillier  [] - Parameters = p = -1694645295 q = -1551465905 N = 1143312255 NSquared = 1126506753 lambdaN = -606819888 bitLength = 3415
2016-08-10 18:00:01,522 INFO  general.PaillierTest  [] - encM1 = -1443134415 encM2 = -264698763
2016-08-10 18:00:01,681 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:01,770 INFO  general.PaillierTest  [] - encM1_times_encM2 = -972734841 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:01,770 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:00:01,771 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:00:01,775 INFO  encryption.Paillier  [] - Parameters = p = -1027812553 q = -947534927 N = -167514617 NSquared = -444922831 lambdaN = 1356264432 bitLength = 201
2016-08-10 18:00:01,775 INFO  general.PaillierTest  [] - encM1 = 1686194987 encM2 = -1736517566
2016-08-10 18:00:01,776 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:01,776 INFO  general.PaillierTest  [] - encM1_times_encM2 = 914219854 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:04,095 INFO  encryption.Paillier  [] - Parameters = p = 2137580975 q = 1341434017 N = -478196977 NSquared = 686017249 lambdaN = 1487948320 bitLength = 3072
2016-08-10 18:00:04,219 INFO  general.PaillierTest  [] - encM1 = -1696545143 encM2 = 1577523099
2016-08-10 18:00:04,344 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:04,403 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1904361736 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:15,692 INFO  encryption.Paillier  [] - Parameters = p = 608811531 q = -1897225773 N = 1859338769 NSquared = -1793931999 lambdaN = -573607142 bitLength = 6619
2016-08-10 18:00:16,828 INFO  general.PaillierTest  [] - encM1 = 1073558814 encM2 = -1128323431
2016-08-10 18:00:17,985 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:18,550 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1287335601 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:18,551 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:00:18,551 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:00:18,564 INFO  encryption.Paillier  [] - testBit true
 N = 10100110010010100110000110110000000110000000111101010110010100111000011000110100011101010100000100110101101111011001011100110100111011011111000100101101001000001101100100011111011101001001000111101011
2016-08-10 18:00:18,565 INFO  encryption.Paillier  [] - Parameters = p = -1188769311 q = -534268597 N = 527733227 NSquared = 2049183161 lambdaN = 1806784288 bitLength = 201
2016-08-10 18:00:18,565 INFO  general.PaillierTest  [] - encM1 = -749859934 encM2 = -214695993
2016-08-10 18:00:18,566 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:18,566 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2051825361 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:19,606 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:00:19,609 INFO  encryption.Paillier  [] - Parameters = p = -1340618915 q = 746428757 N = 41207521 NSquared = 1516818881 lambdaN = 158849420 bitLength = 3072
2016-08-10 18:00:19,732 INFO  general.PaillierTest  [] - encM1 = 681598109 encM2 = -1157967925
2016-08-10 18:00:19,852 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:19,916 INFO  general.PaillierTest  [] - encM1_times_encM2 = 119139870 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:33,631 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:00:34,999 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:00:35,002 INFO  encryption.Paillier  [] - Parameters = p = 1589537743 q = 1031065867 N = -1258381083 NSquared = -1282732839 lambdaN = -1083255566 bitLength = 3767
2016-08-10 18:00:35,216 INFO  general.PaillierTest  [] - encM1 = 1185750510 encM2 = -527544080
2016-08-10 18:00:35,449 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:35,557 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1365786317 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:35,558 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:00:35,558 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:00:35,560 INFO  encryption.Paillier  [] - Parameters = p = 830295617 q = -1029175175 N = -346815303 NSquared = -1082241615 lambdaN = 1592120768 bitLength = 201
2016-08-10 18:00:35,560 INFO  general.PaillierTest  [] - encM1 = -919995943 encM2 = -949040712
2016-08-10 18:00:35,560 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:35,561 INFO  general.PaillierTest  [] - encM1_times_encM2 = 674966483 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:35,932 INFO  encryption.Paillier  [] - Parameters = p = 1386732991 q = -692699163 N = -1887085349 NSquared = 1195123545 lambdaN = 1765478844 bitLength = 3072
2016-08-10 18:00:36,048 INFO  general.PaillierTest  [] - encM1 = -1164355183 encM2 = -346819523
2016-08-10 18:00:36,171 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:36,227 INFO  general.PaillierTest  [] - encM1_times_encM2 = 536779111 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:48,883 INFO  encryption.Paillier  [] - Parameters = p = 1517355655 q = -1581099385 N = 2042605361 NSquared = 889325409 lambdaN = -1094309102 bitLength = 6533
2016-08-10 18:00:49,999 INFO  general.PaillierTest  [] - encM1 = 293014517 encM2 = -921519018
2016-08-10 18:00:51,121 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:51,676 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1671818467 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:51,677 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:00:51,677 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:00:51,679 INFO  encryption.Paillier  [] - testBit false
 N = 11000100010100010100110100110011111111101100001010110101111001110011011011011011110100101101110001011101010011111100000110110000101011010010010101100000010110000110100011001000000111001101010000000101
2016-08-10 18:00:51,682 INFO  encryption.Paillier  [] - testBit false
 N = 11100000001100111010110001000001001111101001100100000000010001110111111001111101111111011000111101001010101010100011100010101100110101000111111110000111000001110010001110010100011101011110101110010101
2016-08-10 18:00:51,684 INFO  encryption.Paillier  [] - testBit true
 N = 10101000100100110000111111001100111111001111010000000010111110000011111110110111101011010111001111100000110011111111111100100011001001011111110010010010100010011111100001111011100000111001110101101001
2016-08-10 18:00:51,685 INFO  encryption.Paillier  [] - Parameters = p = 2071113789 q = -344708963 N = 2072223081 NSquared = 1614804241 lambdaN = 86454564 bitLength = 201
2016-08-10 18:00:51,685 INFO  general.PaillierTest  [] - encM1 = 1355480116 encM2 = -1293400931
2016-08-10 18:00:51,686 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:51,686 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1601971659 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:00:54,695 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:00:54,698 INFO  encryption.Paillier  [] - Parameters = p = -364180001 q = -891108495 N = -879756177 NSquared = 116176929 lambdaN = -2084894928 bitLength = 3072
2016-08-10 18:00:54,814 INFO  general.PaillierTest  [] - encM1 = 275267294 encM2 = 316081498
2016-08-10 18:00:54,928 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:00:54,987 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1628118222 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:01:15,352 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:01:15,357 INFO  encryption.Paillier  [] - Parameters = p = -930075661 q = -134612445 N = 1794920505 NSquared = 1029418161 lambdaN = -955054330 bitLength = 5347
2016-08-10 18:01:15,986 INFO  general.PaillierTest  [] - encM1 = -697859108 encM2 = 1954906671
2016-08-10 18:01:16,607 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:01:16,916 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1763843372 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:01:16,917 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:01:16,918 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:01:16,922 INFO  encryption.Paillier  [] - Parameters = p = 440645693 q = 1784823503 N = 1824178003 NSquared = -1684474647 lambdaN = 1946838052 bitLength = 201
2016-08-10 18:01:16,922 INFO  general.PaillierTest  [] - encM1 = -1909322169 encM2 = 290350710
2016-08-10 18:01:16,923 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:01:16,923 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2142797022 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:01:18,145 INFO  encryption.Paillier  [] - Parameters = p = -1344006605 q = 305443239 N = -1988116923 NSquared = 803241625 lambdaN = 1672706870 bitLength = 3072
2016-08-10 18:01:18,265 INFO  general.PaillierTest  [] - encM1 = -1883363052 encM2 = 840622763
2016-08-10 18:01:18,389 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:01:18,449 INFO  general.PaillierTest  [] - encM1_times_encM2 = -72124203 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:01:24,097 INFO  encryption.Paillier  [] - Parameters = p = -1502929197 q = -853741015 N = 1079993803 NSquared = 891539193 lambdaN = 572777336 bitLength = 4651
2016-08-10 18:01:24,509 INFO  general.PaillierTest  [] - encM1 = 573044037 encM2 = 1876925742
2016-08-10 18:01:24,926 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:01:25,136 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1920971318 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:01:25,136 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:01:25,136 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:01:25,142 INFO  encryption.Paillier  [] - testBit false
 N = 11001010010111100011010110010101000111011111111111111001110110101100100010011110100011010101001110000100101011010001110010001010100110011001011101011001111010111101111000001011000101111000110101000001
2016-08-10 18:01:25,145 INFO  encryption.Paillier  [] - testBit false
 N = 11011000111011000011000001010101111011101110110010001110000001100101110011011011010101101011001010101000110010101010010011011000110101010010000100011100111011001011010111110101010101100000110011011101
2016-08-10 18:01:25,147 INFO  encryption.Paillier  [] - testBit true
 N = 11110111100001110000000001111110010101001110111100011111110000111100010001010111101100111101001000010000111111100101000010011110000001101110010000000011000110101110110110010101101110000100010000100011
2016-08-10 18:01:25,147 INFO  encryption.Paillier  [] - Parameters = p = -2098022287 q = -412766253 N = -1783086045 NSquared = -1032676151 lambdaN = -1783632400 bitLength = 201
2016-08-10 18:01:25,148 INFO  general.PaillierTest  [] - encM1 = 2104561876 encM2 = 1159809517
2016-08-10 18:01:25,148 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:01:25,148 INFO  general.PaillierTest  [] - encM1_times_encM2 = 563044668 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:01:26,984 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:01:26,985 INFO  encryption.Paillier  [] - Parameters = p = 1624221633 q = 109767081 N = -590452887 NSquared = 247572753 lambdaN = 1856928448 bitLength = 3072
2016-08-10 18:01:27,106 INFO  general.PaillierTest  [] - encM1 = -680306055 encM2 = -446875668
2016-08-10 18:01:27,226 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:01:27,285 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2075837783 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:01:31,888 INFO  encryption.Paillier  [] - testBit false
 N = 1100010001110100111111001011100001111000000101011110101000100000110000011001001111001111111001000001010000011011100101110011111001111100010001010100110010001000011010110010010100010110110010011011101010000100101111100111110011010100110110111000010010101000010110010000011001010000110000000011000111111000000111111001011111100100000101101010100100100111100101000000000111010111001010110001110101011100100010001110101010001011101111011001110101101110101001000010000111001011100110010100011110000101110101110101001111101100111110000010101010010011011101111101000111011010000100111010000001001010001011100101010110011010100100001010111101001101100011100001101111110100101001000110010001010011011100110000101011011011001000011110101100101001000010000110100111011111101011100101011001101110010001000011110101100110011001111010000000110110101100010100010001001000000110111110011010000011000011000111010110000101111010101101101010110000100101011000111110110100100101010101100000100111001010011011000010001101011011011101100011010010111010100100111001101001110110011010111101000110111111001111011001100101101111101001001000111101110101001001101111111111100111110011100101110001000100111111001010101111010000000101010100110100110101111101011111000110100110100000010010000110010011001110001010110011011010101001101101000100100110111001110001100011110010110000001010011111010011110010111010100101111010101101000100000011010000010010011010010001111100010010010100001101111111110001010110110010011111001000011011000111010100010110000011110011110111000100001010001001001000110001100000101101010010001100011001001111000111110000110010100001000101001100001110100001010010111000001101101001010111010111010101010101101111101010111100101010000111110100101111110010110111110110110001111011001010001011000100001001010111101100011001001001001010011000011101011110110000000000001011001101100100110110110010111000110101011100000001111011101110111101000001000101110110100011011001110000010010001010111110111110100110000100111010001110101000010011111011110001110111000100011100001011010100101010001110100010110000101110000100001100001001110101001100111011100001101111110000010011000010110011010001101100001100011100110011101100011000100011111101111101111110001010001000100001010011001011100110111010110010110101010000000101110110001100111111001010110110101111101100001010011101100010010000011110100011101110100000010010001001001110001101001101011010110111000000110101100001000100111001011111110111100111000001000000100000010011111011000001001100001001001001001000100100000001010110111101001101000000101010110001000001110000010111100000010000001000111110111111000001000010000000011010101111101111001101101010000100011111010110010111111100100100000001101010110001111001010000010001001110111101110010110101110001010101010000000010010101111011011100001100111110101101000011111011100101011001000010010110111000010000000011110010010000100101111011101001010100001010011111001110000110111001111111111100101110111001100111001001011111000011100001000100111110001010000100111101001001010011110010011001011001001001001101011111111000010011100100100100010010010100110101110010100110100011101001110001001110010110111111001000010110000101110100101011101001110101000101000000100100110100011111111011101110001111011011001010000010110100011100000011101001010110101000011001011011110010100100010011111001100100011001001100000001111100010100010101110011101100000001001101100001011010001010110000000001101011101101000011001101110000011010110011111001010100001011010011011111100111101101011010010110001000000001100111101011100100011101101100000001001000111101000001000001111011011110001111011110000111001010000100100101101110010111110001100001010000100010111111111110111011011111101001010010001111100000000011111010111101110001110010011100010111011011011001111010100100100011011011001101100101011101110111100101011000011001001110110010101011000100010110010010001011100100101110000011100011001001010100010110110100000010010111001101010001011001011001010100011101011101110010101000011011011110101011001110001011111110101000111110110010000001100101111101110111110101001010101110001101110011010000111011110101011000011101100010110101011111000111001101110011010011010010011000010101101110110011000010111001111000001010101001100101110110000101101000101010001011101110010010101101001100100001010110001001101111110110010001111011100110000110110100111111100001010110100010100011001110011110010110110000110111001011110010100011010000001011111011011011001110011011100010010100101111001000111001011010000001101100011100110110010000010111001111011011111011110111101100001011101011101011001000011111001101110000010101001110011101110010110111111110001000110011101100111110001011000010100110000110101001111011110001001010010010110101010001001011000001010100011000111001101100010101000100110110001000111000101110001111001011011100011001100101100011101001100111011010011011010010110100000000100010010000000010011011100100001010010111101100000000100100011100100011011010010101011110001010110000101001010000010001100111010010001000111010100011010100011010001011111100111111000101101100100100111010001110010110010010010000100010100001110101010010010111001001111000010101010110101001110110001010100101111001111010100001101001110111000100011110100010101100111011000000111111111110001000000001110101100100000111010001101111110011110111000100010100110001000010100111101111000101110001000101010101011110111000111001000001010100110100001100001100101111100000110001000011101110010010010010010000001010100011010000000010110111101101001110010000110101000100000110100111110101011001010000110000111010111011011011000101000100111111010111011111101110010011000011001011110101111110010001011011010110111100010110100010010000101111001000010111110100001110000110000000101110001001011011001101110101001111010100000011000001110111101011111011010011110010111110011111111010010100000010000111110110001010110110010000101110101000001011010001101000011000000000000110011101000100110010110001001100100111101101110010111101000000001100100011010111101010110111001110111111010001101001100111000001100100001100010010110000111000101010110101100000000110001111010010101001001100111011000101101100011011011011111011100111010001010110000001011001101100101101011100010110111001011111100101100010001101011011100011100101100111111001000100010011100101100111100111101100011101111111001001011010000101110011110101000010000010100011001101000101110100110010010011000110101110000110110101000000001111100000110110101010000011110100100100110011110111000101011011001101101011011010000001000000001101
2016-08-10 18:02:10,046 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:02:10,051 INFO  encryption.Paillier  [] - Parameters = p = 271218513 q = -1152214503 N = -2099355415 NSquared = -590638063 lambdaN = -1762907664 bitLength = 6586
2016-08-10 18:02:11,158 INFO  general.PaillierTest  [] - encM1 = 469157634 encM2 = 2033071214
2016-08-10 18:02:12,287 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:02:12,847 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1074011375 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:02:12,848 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 18:02:12,848 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 18:02:12,848 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 18:02:12,849 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-10 18:02:12,856 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 18:02:12,858 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 18:02:12,859 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-10 18:02:12,861 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 18:02:12,861 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-10 18:02:12,861 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:02:12,861 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-10 18:02:12,862 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-10 18:02:12,864 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-10 18:02:12,866 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-10 18:02:12,866 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-10 18:02:12,874 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-10 18:02:12,875 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-10 18:02:12,883 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7396674880210110804.xml
2016-08-10 18:02:12,937 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-10 18:02:12,938 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7396674880210110804.xml hdfs = false
2016-08-10 18:02:12,938 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7396674880210110804.xml
2016-08-10 18:02:12,940 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:02:12,942 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:02:12,942 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:02:12,943 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,943 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,943 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,943 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,944 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,944 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,944 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7396674880210110804.xml hdfs = false
2016-08-10 18:02:12,944 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7396674880210110804.xml
2016-08-10 18:02:12,947 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:02:12,947 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:02:12,947 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:02:12,947 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,948 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,948 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,948 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,948 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,948 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,949 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 18:02:12,949 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml
2016-08-10 18:02:12,949 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml
2016-08-10 18:02:12,950 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 18:02:12,951 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:02:12,951 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:12,951 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 18:02:12,951 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 18:02:12,951 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:02:12,954 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 18:02:12,954 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3585459305674303864.xml
2016-08-10 18:02:12,954 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3585459305674303864.xml
2016-08-10 18:02:12,956 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:02:12,956 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:12,956 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:02:12,958 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 18:02:12,958 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2012755981396700565.xml
2016-08-10 18:02:12,958 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3585459305674303864.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2012755981396700565.xml
2016-08-10 18:02:12,960 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:02:12,960 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:02:12,960 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:12,961 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 18:02:12,962 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2983399095091700650.xml
2016-08-10 18:02:12,962 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3585459305674303864.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2012755981396700565.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2983399095091700650.xml
2016-08-10 18:02:12,963 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:02:12,964 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:12,964 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:02:12,965 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 18:02:12,966 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5415231902287178040.xml
2016-08-10 18:02:12,966 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3585459305674303864.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2012755981396700565.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2983399095091700650.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5415231902287178040.xml
2016-08-10 18:02:12,967 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:02:12,968 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:12,968 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:02:12,971 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-10 18:02:12,972 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml
2016-08-10 18:02:12,972 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml
2016-08-10 18:02:12,974 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:12,975 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:02:12,975 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:12,975 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:02:12,976 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:02:12,976 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:02:12,976 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,976 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:12,976 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,977 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:02:12,977 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,977 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:02:12,977 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,978 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:02:12,978 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,978 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:02:12,979 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3585459305674303864.xml
2016-08-10 18:02:12,979 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3585459305674303864.xml
2016-08-10 18:02:12,981 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:12,981 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:02:12,982 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:12,982 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:02:12,982 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,982 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:02:12,982 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,983 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:02:12,983 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,983 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:02:12,983 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2012755981396700565.xml
2016-08-10 18:02:12,983 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2012755981396700565.xml
2016-08-10 18:02:12,985 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:12,987 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:02:12,987 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:12,987 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:02:12,988 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,988 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:02:12,988 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,988 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:12,988 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,989 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:02:12,989 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2983399095091700650.xml
2016-08-10 18:02:12,989 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2983399095091700650.xml
2016-08-10 18:02:12,991 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:12,992 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:02:12,992 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:12,992 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:02:12,993 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,993 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:02:12,993 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,993 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:12,993 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,993 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:02:12,994 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5415231902287178040.xml
2016-08-10 18:02:12,994 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5415231902287178040.xml
2016-08-10 18:02:12,997 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:12,997 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:02:12,998 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:12,998 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:02:12,998 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:12,998 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:02:12,999 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,999 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:12,999 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:12,999 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:02:12,999 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml
2016-08-10 18:02:12,999 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4773358695976659295.xml
2016-08-10 18:02:13,001 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,001 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:02:13,002 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:13,002 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:02:13,002 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:02:13,002 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:02:13,002 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,002 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:13,003 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,003 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:02:13,003 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,003 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:02:13,003 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,004 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:02:13,004 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,004 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:02:13,004 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3585459305674303864.xml
2016-08-10 18:02:13,004 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3585459305674303864.xml
2016-08-10 18:02:13,006 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,007 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:02:13,007 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:13,007 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:02:13,007 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,007 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:02:13,007 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,008 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:02:13,008 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,008 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:02:13,008 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2012755981396700565.xml
2016-08-10 18:02:13,009 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2012755981396700565.xml
2016-08-10 18:02:13,010 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,011 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:02:13,011 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:13,011 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:02:13,011 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,011 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:02:13,012 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,012 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:13,012 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,012 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:02:13,012 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2983399095091700650.xml
2016-08-10 18:02:13,012 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file2983399095091700650.xml
2016-08-10 18:02:13,014 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,014 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:02:13,015 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:13,015 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:02:13,015 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,015 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:02:13,015 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,016 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:13,016 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,016 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:02:13,016 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5415231902287178040.xml
2016-08-10 18:02:13,017 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5415231902287178040.xml
2016-08-10 18:02:13,018 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,018 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:02:13,019 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:13,019 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:02:13,019 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,019 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:02:13,019 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,019 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:13,020 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,020 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:02:13,080 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,081 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,081 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,081 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,083 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,083 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 18:02:13,083 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,084 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 18:02:13,084 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,085 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 18:02:13,085 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,085 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 18:02:13,086 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,087 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 18:02:13,087 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,087 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 18:02:13,088 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,088 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 18:02:13,088 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,089 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 18:02:13,089 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,090 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,090 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,090 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,091 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,091 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 18:02:13,092 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,092 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 18:02:13,093 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,093 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,093 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,094 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,094 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,094 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 18:02:13,095 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,095 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 18:02:13,095 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,095 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 18:02:13,096 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,096 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 18:02:13,096 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,096 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 18:02:13,097 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,097 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 18:02:13,097 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,098 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 18:02:13,098 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,098 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 18:02:13,098 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,099 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,099 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,099 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,099 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,100 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 18:02:13,100 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,100 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 18:02:13,100 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,101 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,101 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,101 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,101 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,102 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 18:02:13,102 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,102 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 18:02:13,102 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,103 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 18:02:13,103 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,103 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 18:02:13,103 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,103 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 18:02:13,104 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,104 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 18:02:13,104 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,104 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 18:02:13,105 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,105 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 18:02:13,105 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,105 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,106 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,106 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,106 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,106 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 18:02:13,107 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,107 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 18:02:13,112 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 18:02:13,113 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 18:02:13,113 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 18:02:13,113 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 18:02:13,113 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 18:02:13,114 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 18:02:13,114 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 18:02:13,114 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 18:02:13,114 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 18:02:13,115 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 18:02:13,115 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 18:02:13,115 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 18:02:13,115 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 18:02:13,116 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 18:02:13,117 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 18:02:13,118 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 18:02:13,118 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 18:02:13,118 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 18:02:13,118 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 18:02:13,119 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 18:02:13,119 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 18:02:13,119 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 18:02:13,119 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 18:02:13,119 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,119 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,120 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,120 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,120 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,120 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,120 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 18:02:13,120 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 18:02:13,121 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:02:13,121 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,121 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,121 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,121 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,121 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,121 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,121 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,122 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 18:02:13,122 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 18:02:13,122 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,122 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,122 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,123 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,123 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,123 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,123 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 18:02:13,123 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 18:02:13,123 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 18:02:13,124 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 18:02:13,124 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,124 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:02:13,124 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 18:02:13,124 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,125 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:02:13,125 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 18:02:13,125 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,125 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:02:13,125 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 18:02:13,125 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:02:13,126 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 18:02:13,126 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:02:13,127 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 18:02:13,127 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 18:02:13,127 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 18:02:13,127 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 18:02:13,127 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 18:02:13,127 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 18:02:13,128 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 18:02:13,128 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 18:02:13,128 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,128 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,128 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,128 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,129 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,129 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,129 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 18:02:13,129 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 18:02:13,129 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:02:13,129 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,130 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,130 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,130 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,130 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,130 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,130 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,131 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 18:02:13,131 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 18:02:13,131 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,131 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,131 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,131 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,131 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,132 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,132 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 18:02:13,132 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 18:02:13,132 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 18:02:13,132 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 18:02:13,132 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,132 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:02:13,133 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 18:02:13,133 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,133 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:02:13,133 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 18:02:13,133 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,133 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:02:13,133 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 18:02:13,133 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:02:13,133 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 18:02:13,134 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:02:13,134 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 18:02:13,134 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:02:13,134 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:02:13,134 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,135 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:02:13,135 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,135 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:02:13,135 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,135 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:02:13,135 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:02:13,135 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 18:02:13,135 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:02:13,136 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:02:13,136 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,136 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:02:13,136 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,136 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:02:13,136 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,137 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:02:13,137 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 18:02:13,137 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 18:02:13,137 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 18:02:13,137 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 18:02:13,137 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 18:02:13,137 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 18:02:13,138 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 18:02:13,138 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 18:02:13,138 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,138 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,138 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,139 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,139 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,139 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,139 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 18:02:13,140 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 18:02:13,140 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:02:13,140 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,140 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,140 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,141 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,141 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,141 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,141 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,141 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 18:02:13,141 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 18:02:13,142 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,142 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,142 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,142 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,142 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:02:13,142 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,142 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 18:02:13,143 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 18:02:13,143 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 18:02:13,143 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 18:02:13,143 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,143 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:02:13,143 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 18:02:13,143 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,144 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:02:13,144 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 18:02:13,144 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,144 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:02:13,144 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 18:02:13,144 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:02:13,144 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 18:02:13,144 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:02:13,145 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 18:02:13,145 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:02:13,145 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:02:13,145 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,145 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:02:13,146 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,146 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:02:13,146 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,146 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:02:13,146 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:02:13,146 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 18:02:13,147 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:02:13,147 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:02:13,147 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,147 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:02:13,147 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,147 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:02:13,148 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:02:13,148 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:02:13,148 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,149 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,149 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,149 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,150 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,150 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,150 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,150 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,151 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,151 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,151 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,152 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,152 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,153 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,153 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,153 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,154 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,154 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,154 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,154 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,155 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,155 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,155 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,155 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,156 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,156 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,156 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,156 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,157 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,157 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,157 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,157 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,158 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,158 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,158 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,158 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,159 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,159 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,159 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,159 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,159 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,160 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,160 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,160 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:02:13,161 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-10 18:02:13,161 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-10 18:02:13,162 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-10 18:02:13,163 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-10 18:02:13,167 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner2565914302978785526.xml
2016-08-10 18:02:13,170 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner2565914302978785526.xml hdfs = false
2016-08-10 18:02:13,170 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner2565914302978785526.xml
2016-08-10 18:02:13,171 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,172 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:02:13,173 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2308632505025098857.xml
2016-08-10 18:02:13,175 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2308632505025098857.xml hdfs = false
2016-08-10 18:02:13,176 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2308632505025098857.xml
2016-08-10 18:02:13,178 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,178 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:02:13,178 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,178 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,179 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,179 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType591442698270594096.xml
2016-08-10 18:02:13,181 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType591442698270594096.xml hdfs = false
2016-08-10 18:02:13,181 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType591442698270594096.xml
2016-08-10 18:02:13,183 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,183 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:02:13,186 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-10 18:02:13,186 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:02:13,187 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5304355388710673656.xml
2016-08-10 18:02:13,187 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5304355388710673656.xml
2016-08-10 18:02:13,189 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:02:13,189 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:02:13,189 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:02:13,191 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5304355388710673656.xml
2016-08-10 18:02:13,191 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5304355388710673656.xml
2016-08-10 18:02:13,193 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,193 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:02:13,193 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:02:13,193 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 18:02:13,194 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-10 18:02:13,194 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-10 18:02:13,194 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 18:02:13,195 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile6133596750585520860.tmp
2016-08-10 18:02:13,196 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile4513686382422203411.xml
2016-08-10 18:02:13,200 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile4513686382422203411.xml hdfs = false
2016-08-10 18:02:13,200 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile4513686382422203411.xml
2016-08-10 18:02:13,204 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,204 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:02:13,204 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,205 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,206 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,207 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,208 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:02:13,208 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5764391274715896548.xml
2016-08-10 18:02:13,208 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5764391274715896548.xml
2016-08-10 18:02:13,209 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:02:13,210 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:02:13,210 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:02:13,210 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 18:02:13,211 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5764391274715896548.xml
2016-08-10 18:02:13,211 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5764391274715896548.xml
2016-08-10 18:02:13,212 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,213 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:02:13,213 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:02:13,213 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 18:02:13,213 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,213 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-10 18:02:13,214 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,214 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-10 18:02:13,214 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,214 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-10 18:02:13,214 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-10 18:02:13,484 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-10 18:02:13,762 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-10 18:02:13,763 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-10 18:02:13,763 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile806483006242832585.xml
2016-08-10 18:02:13,767 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile806483006242832585.xml hdfs = false
2016-08-10 18:02:13,767 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile806483006242832585.xml
2016-08-10 18:02:13,769 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,769 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:02:13,770 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,771 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,772 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,772 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,773 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:02:13,773 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile817071249066748086.xml
2016-08-10 18:02:13,774 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile817071249066748086.xml
2016-08-10 18:02:13,775 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:02:13,776 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:02:13,776 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:02:13,776 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 18:02:13,777 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile817071249066748086.xml
2016-08-10 18:02:13,778 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile817071249066748086.xml
2016-08-10 18:02:13,779 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,780 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:02:13,780 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:02:13,780 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 18:02:13,780 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-10 18:02:13,781 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile6021787156741706965.xml
2016-08-10 18:02:13,784 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile6021787156741706965.xml hdfs = false
2016-08-10 18:02:13,784 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile6021787156741706965.xml
2016-08-10 18:02:13,786 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,786 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:02:13,786 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,786 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,787 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:13,787 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:13,787 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:02:13,787 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5541463505443719054.xml
2016-08-10 18:02:13,787 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5541463505443719054.xml
2016-08-10 18:02:13,789 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:02:13,790 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:02:13,790 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:02:13,790 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 18:02:13,797 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5541463505443719054.xml
2016-08-10 18:02:13,797 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5541463505443719054.xml
2016-08-10 18:02:13,799 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:13,799 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:02:13,799 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:02:13,800 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 18:02:13,800 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-10 18:02:14,103 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 18:02:14,103 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile6741890010586241992.tmp
2016-08-10 18:02:14,104 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile6741890010586241992.tmp
2016-08-10 18:02:14,104 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8403697850200909922.xml
2016-08-10 18:02:14,107 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8403697850200909922.xml hdfs = false
2016-08-10 18:02:14,107 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8403697850200909922.xml
2016-08-10 18:02:14,109 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:02:14,109 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:02:14,110 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:02:14,110 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:14,110 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,110 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,110 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:14,110 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:14,111 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,111 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 18:02:14,111 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1894368641385547945.xml
2016-08-10 18:02:14,111 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1894368641385547945.xml
2016-08-10 18:02:14,113 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 18:02:14,113 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:02:14,113 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:14,113 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 18:02:14,114 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 18:02:14,114 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:02:14,114 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 18:02:14,115 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 18:02:14,116 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4692867678092417139.xml
2016-08-10 18:02:14,116 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1894368641385547945.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4692867678092417139.xml
2016-08-10 18:02:14,117 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:02:14,117 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:14,117 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:02:14,117 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 18:02:14,118 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 18:02:14,119 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4903284553697139412.xml
2016-08-10 18:02:14,119 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1894368641385547945.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4692867678092417139.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4903284553697139412.xml
2016-08-10 18:02:14,120 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:02:14,120 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:02:14,120 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:14,120 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 18:02:14,121 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 18:02:14,122 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6613047301431554476.xml
2016-08-10 18:02:14,122 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1894368641385547945.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4692867678092417139.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4903284553697139412.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6613047301431554476.xml
2016-08-10 18:02:14,122 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:02:14,123 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:14,123 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:02:14,123 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-10 18:02:14,123 INFO  utils.TestUtils    [] - filterName = ip
2016-08-10 18:02:14,124 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 18:02:14,124 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file7715377111518106085.xml
2016-08-10 18:02:14,124 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1894368641385547945.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4692867678092417139.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4903284553697139412.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6613047301431554476.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file7715377111518106085.xml
2016-08-10 18:02:14,125 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:02:14,125 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:02:14,125 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:02:14,126 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1894368641385547945.xml
2016-08-10 18:02:14,126 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1894368641385547945.xml
2016-08-10 18:02:14,127 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:14,127 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:02:14,127 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:14,127 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:02:14,127 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:02:14,127 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:02:14,128 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,128 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:14,128 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,128 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:02:14,128 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:14,128 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:02:14,128 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:14,128 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:02:14,128 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,129 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:02:14,129 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:02:14,161 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4692867678092417139.xml
2016-08-10 18:02:14,161 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4692867678092417139.xml
2016-08-10 18:02:14,163 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:14,163 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:02:14,163 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:14,163 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:02:14,163 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,164 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:02:14,164 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,164 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:02:14,164 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,164 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:02:14,164 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:02:14,193 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4903284553697139412.xml
2016-08-10 18:02:14,193 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4903284553697139412.xml
2016-08-10 18:02:14,194 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:14,195 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:02:14,195 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:14,195 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:02:14,195 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:14,195 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:02:14,195 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,195 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:14,195 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,196 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:02:14,196 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:02:14,225 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6613047301431554476.xml
2016-08-10 18:02:14,225 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6613047301431554476.xml
2016-08-10 18:02:14,226 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:14,227 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:02:14,227 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:14,227 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:02:14,227 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:14,227 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:02:14,228 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,228 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:14,228 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,228 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:02:14,228 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-10 18:02:14,228 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-10 18:02:14,252 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file7715377111518106085.xml
2016-08-10 18:02:14,253 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file7715377111518106085.xml
2016-08-10 18:02:14,254 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:02:14,254 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:02:14,254 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:02:14,255 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:02:14,255 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:02:14,255 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:02:14,255 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,255 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:02:14,255 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:02:14,255 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:02:14,258 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:02:14,259 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:14,261 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1496591735177985180.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4744545719533452364.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse567048552943496222.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2493261424297490377.txt
2016-08-10 18:02:14,262 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:14,281 INFO  encryption.Paillier  [] - Parameters = p = 1152573649 q = 868388313 N = -1026183639 NSquared = 1790296721 lambdaN = -937106320 bitLength = 384
2016-08-10 18:02:14,281 INFO  encryption.Paillier  [] - Parameters = p = 1152573649 q = 868388313 N = -1026183639 NSquared = 1790296721 lambdaN = -937106320 bitLength = 384
2016-08-10 18:02:14,281 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:15,196 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:02:15,197 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:15,432 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:15,547 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:15,547 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:02:15,551 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:15,554 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:15,557 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:15,560 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:15,562 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:15,568 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:02:15,572 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:02:15,575 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:02:15,577 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:15,578 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:15,585 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:15,585 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:15,717 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:15,729 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:15,729 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:15,732 INFO  utils.BaseTests    [] - results:
2016-08-10 18:02:15,733 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:02:15,733 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:02:15,733 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:15,733 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:15,734 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:02:15,734 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:15,734 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:15,734 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:02:15,735 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:02:15,735 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:15,735 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:15,735 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:02:15,735 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:15,736 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:15,736 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:02:15,737 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:02:15,737 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 18:02:15,737 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:15,738 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2922807816941420926.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3179753030340816572.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1101916815872756465.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3008476657498950542.txt
2016-08-10 18:02:15,739 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:15,751 INFO  encryption.Paillier  [] - Parameters = p = 1412768939 q = -1219116525 N = -276672847 NSquared = -2114693535 lambdaN = -794215426 bitLength = 384
2016-08-10 18:02:15,752 INFO  encryption.Paillier  [] - Parameters = p = 1412768939 q = -1219116525 N = -276672847 NSquared = -2114693535 lambdaN = -794215426 bitLength = 384
2016-08-10 18:02:15,752 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:16,209 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:02:16,209 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:16,343 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:16,416 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:16,416 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:02:16,418 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 18:02:16,420 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 18:02:16,422 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 18:02:16,423 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 18:02:16,425 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 18:02:16,427 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 18:02:16,428 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:02:16,430 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:02:16,431 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:16,431 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:16,432 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:16,432 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:16,492 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:16,492 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:16,493 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:16,494 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:16,494 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:16,495 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:02:16,495 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:02:16,495 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 18:02:16,495 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:02:16,495 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:16,495 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:02:16,496 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 18:02:16,496 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 18:02:16,496 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:16,496 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5263133892077652412.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3464895414929250817.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2329820773064577847.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5842160257506072566.txt
2016-08-10 18:02:16,497 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:16,502 INFO  encryption.Paillier  [] - Parameters = p = -603835819 q = 1773816393 N = -839979971 NSquared = -848525687 lambdaN = -167496712 bitLength = 384
2016-08-10 18:02:16,502 INFO  encryption.Paillier  [] - Parameters = p = -603835819 q = 1773816393 N = -839979971 NSquared = -848525687 lambdaN = -167496712 bitLength = 384
2016-08-10 18:02:16,502 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:16,902 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:02:16,902 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:17,015 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:17,064 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:17,064 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 18:02:17,065 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:02:17,067 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 18:02:17,068 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 18:02:17,069 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:02:17,070 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:02:17,072 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 18:02:17,074 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:02:17,075 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:02:17,076 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:17,077 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:17,078 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:17,078 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:17,143 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:17,143 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:17,143 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:17,145 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:17,145 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:17,147 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:17,147 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:17,148 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:17,148 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 18:02:17,148 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 18:02:17,148 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 18:02:17,149 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 18:02:17,149 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 18:02:17,149 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:17,149 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8288052214377413674.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query9040106048303665693.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse236911391570307524.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5630798311055770752.txt
2016-08-10 18:02:17,150 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:17,156 INFO  encryption.Paillier  [] - Parameters = p = 1338649679 q = -892639551 N = 767025551 NSquared = -2026983967 lambdaN = -1986975936 bitLength = 384
2016-08-10 18:02:17,157 INFO  encryption.Paillier  [] - Parameters = p = 1338649679 q = -892639551 N = 767025551 NSquared = -2026983967 lambdaN = -1986975936 bitLength = 384
2016-08-10 18:02:17,157 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:17,528 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:02:17,529 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:17,644 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:17,700 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:17,700 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:17,701 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:17,702 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:17,702 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:17,702 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:17,759 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:17,759 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:17,759 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:17,760 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:17,760 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:17,761 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:17,761 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 18:02:17,761 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 18:02:17,761 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:02:17,762 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:17,762 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier954132368813567811.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query811366007309859109.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4030126575963423971.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1536960482681051853.txt
2016-08-10 18:02:17,762 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:17,771 INFO  encryption.Paillier  [] - Parameters = p = -2290703 q = 2113032121 N = 339673129 NSquared = 2083391121 lambdaN = -758254448 bitLength = 384
2016-08-10 18:02:17,771 INFO  encryption.Paillier  [] - Parameters = p = -2290703 q = 2113032121 N = 339673129 NSquared = 2083391121 lambdaN = -758254448 bitLength = 384
2016-08-10 18:02:17,771 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:18,624 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:02:18,624 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:18,742 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:18,794 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:18,795 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:02:18,796 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:18,798 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:18,799 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:18,800 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:18,802 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:18,803 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:02:18,805 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:02:18,806 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:02:18,808 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:18,808 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:18,811 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:18,811 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:18,895 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:18,901 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:18,901 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:18,903 INFO  utils.BaseTests    [] - results:
2016-08-10 18:02:18,903 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:02:18,903 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:02:18,903 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:18,903 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:18,903 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:02:18,903 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:18,903 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:18,904 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:02:18,904 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:02:18,904 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:18,904 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:18,904 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:02:18,904 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:18,904 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:18,905 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:02:18,905 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:02:18,905 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:02:18,905 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:18,906 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5206946587219656022.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4736832983652996770.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2674578697277367317.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4747103106638276318.txt
2016-08-10 18:02:18,906 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:18,911 INFO  encryption.Paillier  [] - Parameters = p = -17131385 q = -221241879 N = 17571295 NSquared = -1906030527 lambdaN = 127972280 bitLength = 384
2016-08-10 18:02:18,911 INFO  encryption.Paillier  [] - Parameters = p = -17131385 q = -221241879 N = 17571295 NSquared = -1906030527 lambdaN = 127972280 bitLength = 384
2016-08-10 18:02:18,911 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:19,758 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:02:19,758 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:19,872 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:19,924 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:19,924 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:02:19,925 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:19,927 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:19,928 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:19,930 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:19,931 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:19,932 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:02:19,934 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:02:19,935 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:02:19,937 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:19,937 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:19,940 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:19,940 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:20,025 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:20,031 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:20,031 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:20,033 INFO  utils.BaseTests    [] - results:
2016-08-10 18:02:20,033 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:02:20,033 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:02:20,033 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:20,033 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:20,034 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:02:20,034 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:20,034 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:20,034 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:02:20,035 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:02:20,035 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:20,035 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:20,035 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:02:20,035 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:20,036 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:20,036 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:02:20,037 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:02:20,037 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:02:20,037 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:20,038 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7911713155901878070.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4698298686053619695.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6555414056752410240.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8242377274083898381.txt
2016-08-10 18:02:20,038 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:20,047 INFO  encryption.Paillier  [] - Parameters = p = 62188603 q = -727261717 N = -1589262039 NSquared = -1607767919 lambdaN = -462094462 bitLength = 384
2016-08-10 18:02:20,047 INFO  encryption.Paillier  [] - Parameters = p = 62188603 q = -727261717 N = -1589262039 NSquared = -1607767919 lambdaN = -462094462 bitLength = 384
2016-08-10 18:02:20,047 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:20,880 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:02:20,881 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:20,994 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:21,046 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:21,046 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:02:21,048 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:21,049 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:21,050 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:21,052 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:21,053 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:21,054 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:02:21,056 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:02:21,057 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:02:21,059 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:21,059 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:21,062 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:21,063 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:21,149 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:21,154 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:21,154 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:21,156 INFO  utils.BaseTests    [] - results:
2016-08-10 18:02:21,156 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:02:21,156 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:02:21,156 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:21,156 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:21,156 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:02:21,157 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:21,157 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:21,157 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:02:21,157 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:02:21,157 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:21,157 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:21,157 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:02:21,157 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:21,158 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:21,158 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:02:21,158 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:02:21,158 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:02:21,158 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:21,159 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6581649586237268292.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5234851851106455513.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1836256405603964361.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6478672059265406679.txt
2016-08-10 18:02:21,159 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:21,167 INFO  encryption.Paillier  [] - Parameters = p = 1401940303 q = -336211935 N = -2135407825 NSquared = -1523473759 lambdaN = 546915552 bitLength = 384
2016-08-10 18:02:21,167 INFO  encryption.Paillier  [] - Parameters = p = 1401940303 q = -336211935 N = -2135407825 NSquared = -1523473759 lambdaN = 546915552 bitLength = 384
2016-08-10 18:02:21,167 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:22,007 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:02:22,007 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:22,116 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:22,168 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:22,168 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:02:22,170 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:22,171 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:22,173 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:22,174 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:22,175 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:22,176 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:02:22,177 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:02:22,178 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:02:22,180 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:22,180 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:22,182 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:22,183 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:22,264 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:22,270 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:22,270 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:22,272 INFO  utils.BaseTests    [] - results:
2016-08-10 18:02:22,272 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:02:22,272 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:02:22,272 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:22,273 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:22,273 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:02:22,273 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:22,273 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:22,273 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:02:22,273 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:02:22,273 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:22,273 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:22,274 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:02:22,274 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:22,274 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:22,274 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:02:22,275 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:02:22,275 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 18:02:22,275 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:22,275 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7217523916098440070.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query6816887649864300143.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7885079906660129070.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5038331217921082285.txt
2016-08-10 18:02:22,275 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:22,290 INFO  encryption.Paillier  [] - Parameters = p = -1869165413 q = -2068377071 N = 1664318539 NSquared = -1002783239 lambdaN = -1494036784 bitLength = 384
2016-08-10 18:02:22,290 INFO  encryption.Paillier  [] - Parameters = p = -1869165413 q = -2068377071 N = 1664318539 NSquared = -1002783239 lambdaN = -1494036784 bitLength = 384
2016-08-10 18:02:22,290 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:22,718 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:02:22,718 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:22,826 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:22,875 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:22,876 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:02:22,877 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 18:02:22,878 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 18:02:22,879 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 18:02:22,880 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 18:02:22,881 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 18:02:22,882 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 18:02:22,883 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:02:22,884 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:02:22,885 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:22,885 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:22,886 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:22,886 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:22,950 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:22,950 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:22,951 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:22,952 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:22,953 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:22,953 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:02:22,953 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:02:22,954 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 18:02:22,954 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:02:22,954 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:22,954 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:02:22,954 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 18:02:22,954 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 18:02:22,954 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:22,955 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4723442921350857422.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3517202930325985931.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8254286275093260269.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3025565510697880330.txt
2016-08-10 18:02:22,955 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:22,961 INFO  encryption.Paillier  [] - Parameters = p = -320196249 q = 1733381615 N = -1307108823 NSquared = -1173726575 lambdaN = 787336554 bitLength = 384
2016-08-10 18:02:22,961 INFO  encryption.Paillier  [] - Parameters = p = -320196249 q = 1733381615 N = -1307108823 NSquared = -1173726575 lambdaN = 787336554 bitLength = 384
2016-08-10 18:02:22,961 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:23,354 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:02:23,355 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:23,465 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:23,519 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:23,519 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 18:02:23,520 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:02:23,521 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 18:02:23,522 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 18:02:23,522 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:02:23,523 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:02:23,524 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 18:02:23,525 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:02:23,526 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:02:23,528 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:23,529 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:23,530 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:23,530 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:23,588 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:23,588 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:23,589 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:23,590 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:23,590 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:23,591 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:23,591 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:23,591 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:02:23,591 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 18:02:23,591 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 18:02:23,591 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 18:02:23,592 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 18:02:23,592 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 18:02:23,592 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:23,592 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1790125958291015172.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3551130874911517318.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8641852332931267657.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6934545437175260808.txt
2016-08-10 18:02:23,593 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:23,605 INFO  encryption.Paillier  [] - Parameters = p = 1745642409 q = 739816177 N = -187870183 NSquared = 1940548209 lambdaN = -1944778832 bitLength = 384
2016-08-10 18:02:23,606 INFO  encryption.Paillier  [] - Parameters = p = 1745642409 q = 739816177 N = -187870183 NSquared = 1940548209 lambdaN = -1944778832 bitLength = 384
2016-08-10 18:02:23,606 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:23,976 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:02:23,976 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:24,088 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:24,141 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:24,141 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:24,142 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:24,142 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:24,142 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:24,142 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:24,196 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:24,197 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:24,197 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:24,197 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:02:24,198 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:24,198 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:24,198 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 18:02:24,199 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 18:02:24,199 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:02:24,199 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:02:24,199 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1222360316566038491.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4605078533920624581.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3750071227694351944.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2853773519307020131.txt
2016-08-10 18:02:24,199 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:24,204 INFO  encryption.Paillier  [] - Parameters = p = -631509127 q = -454405033 N = 141301279 NSquared = -1676585023 lambdaN = -2024762104 bitLength = 384
2016-08-10 18:02:24,204 INFO  encryption.Paillier  [] - Parameters = p = -631509127 q = -454405033 N = 141301279 NSquared = -1676585023 lambdaN = -2024762104 bitLength = 384
2016-08-10 18:02:24,204 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:02:25,040 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:02:25,040 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:02:25,041 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-10 18:02:25,151 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:02:25,205 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:02:25,205 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:02:25,209 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:25,211 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:25,212 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:25,214 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:25,215 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:02:25,217 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:02:25,219 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:02:25,221 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:02:25,223 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:02:25,223 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:02:25,225 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:02:25,226 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:02:25,310 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:02:25,314 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:02:25,315 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:02:25,316 INFO  utils.BaseTests    [] - results:
2016-08-10 18:02:25,316 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:02:25,316 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:25,317 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:25,317 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:02:25,317 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:25,317 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:02:25,317 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:02:25,317 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:02:25,317 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:25,318 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:25,318 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:02:25,318 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:25,318 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:02:25,319 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:03:52,478 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-10 18:03:52,486 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-10 18:03:52,502 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-10 18:03:52,505 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-10 18:03:52,508 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 18:03:52,518 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 18:03:52,520 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 18:03:52,522 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:03:52,523 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:03:52,533 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-10 18:03:52,531 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-10 18:03:52,538 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 18:03:52,540 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 18:03:52,542 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 18:03:52,543 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-10 18:03:52,548 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-10 18:03:52,556 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-10 18:03:52,557 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-10 18:03:52,557 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-10 18:03:52,558 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-10 18:03:52,559 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-10 18:03:52,560 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-10 18:03:52,561 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-10 18:03:52,561 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-10 18:03:52,561 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-10 18:03:52,562 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-10 18:03:52,563 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-10 18:03:52,564 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-10 18:03:52,565 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-10 18:03:52,565 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-10 18:03:52,565 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 18:03:52,579 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 18:03:52,585 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 18:03:52,599 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 18:03:52,617 INFO  encryption.Paillier  [] - Parameters = p = 1732269835 q = -574639857 N = -114772827 NSquared = -318213543 lambdaN = -636201402 bitLength = 201
2016-08-10 18:03:52,624 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5380263907928720954.xml
2016-08-10 18:03:52,722 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-10 18:03:52,723 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5380263907928720954.xml hdfs = false
2016-08-10 18:03:52,723 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 18:03:52,724 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-10 18:03:52,723 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5380263907928720954.xml
2016-08-10 18:03:52,724 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 18:03:52,724 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-10 18:03:52,725 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-10 18:03:52,725 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-10 18:03:52,726 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-10 18:03:52,733 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-10 18:03:52,737 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 18:03:52,737 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,738 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 18:03:52,739 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 18:03:52,739 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:03:52,742 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:03:52,743 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,744 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,744 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,744 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:03:52,745 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,746 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,746 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,747 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5380263907928720954.xml hdfs = false
2016-08-10 18:03:52,747 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile495167768667623189.xml
2016-08-10 18:03:52,747 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5380263907928720954.xml
2016-08-10 18:03:52,748 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile495167768667623189.xml
2016-08-10 18:03:52,751 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,750 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:03:52,751 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:03:52,751 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:03:52,752 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:03:52,752 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:03:52,752 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,753 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,753 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,754 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,754 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,754 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,755 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 18:03:52,755 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml
2016-08-10 18:03:52,756 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml
2016-08-10 18:03:52,757 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 18:03:52,758 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:03:52,758 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:03:52,759 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 18:03:52,760 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 18:03:52,760 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:03:52,762 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 18:03:52,763 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2542463314458708540.xml
2016-08-10 18:03:52,763 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2542463314458708540.xml
2016-08-10 18:03:52,765 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:03:52,765 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:03:52,766 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:03:52,767 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 18:03:52,768 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7160951638520918917.xml
2016-08-10 18:03:52,768 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2542463314458708540.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7160951638520918917.xml
2016-08-10 18:03:52,771 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:03:52,771 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:03:52,772 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:03:52,774 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 18:03:52,775 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file82741429956119568.xml
2016-08-10 18:03:52,775 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2542463314458708540.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7160951638520918917.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file82741429956119568.xml
2016-08-10 18:03:52,777 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:03:52,778 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:03:52,778 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:03:52,780 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 18:03:52,781 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4063986547820172604.xml
2016-08-10 18:03:52,783 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2542463314458708540.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7160951638520918917.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file82741429956119568.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4063986547820172604.xml
2016-08-10 18:03:52,785 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:03:52,785 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:03:52,786 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:03:52,787 INFO  general.PaillierTest  [] - encM1 = -186763117 encM2 = 714945499
2016-08-10 18:03:52,789 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-10 18:03:52,789 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:03:52,790 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml
2016-08-10 18:03:52,791 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml
2016-08-10 18:03:52,791 INFO  general.PaillierTest  [] - encM1_times_encM2 = 559946618 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:03:52,793 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,794 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:03:52,795 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,795 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:03:52,795 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:03:52,796 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:03:52,796 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,796 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:03:52,796 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,797 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:03:52,797 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,797 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:03:52,798 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,798 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:03:52,798 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,798 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:03:52,799 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2542463314458708540.xml
2016-08-10 18:03:52,800 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2542463314458708540.xml
2016-08-10 18:03:52,802 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,802 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:03:52,803 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,803 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:03:52,803 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,803 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:03:52,804 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,804 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:03:52,804 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,804 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:03:52,805 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7160951638520918917.xml
2016-08-10 18:03:52,805 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7160951638520918917.xml
2016-08-10 18:03:52,807 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,808 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:03:52,808 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,808 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:03:52,809 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,809 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:03:52,809 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,810 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:03:52,810 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,810 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:03:52,811 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file82741429956119568.xml
2016-08-10 18:03:52,812 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file82741429956119568.xml
2016-08-10 18:03:52,814 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,814 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:03:52,815 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,815 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:03:52,816 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,816 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:03:52,816 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,816 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:03:52,817 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,817 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:03:52,818 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4063986547820172604.xml
2016-08-10 18:03:52,818 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4063986547820172604.xml
2016-08-10 18:03:52,821 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,821 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:03:52,822 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,822 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:03:52,823 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,823 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:03:52,823 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,823 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:03:52,824 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,824 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:03:52,824 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml
2016-08-10 18:03:52,826 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5105555826045314311.xml
2016-08-10 18:03:52,830 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,831 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:03:52,831 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,831 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:03:52,831 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:03:52,832 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:03:52,832 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,832 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:03:52,832 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,833 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:03:52,833 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,834 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:03:52,834 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,834 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:03:52,835 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,835 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:03:52,836 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2542463314458708540.xml
2016-08-10 18:03:52,836 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2542463314458708540.xml
2016-08-10 18:03:52,838 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,839 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:03:52,839 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,839 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:03:52,839 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,840 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:03:52,840 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,840 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:03:52,840 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,842 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:03:52,842 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7160951638520918917.xml
2016-08-10 18:03:52,843 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7160951638520918917.xml
2016-08-10 18:03:52,845 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,845 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:03:52,845 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,845 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:03:52,846 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,846 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:03:52,846 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,846 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:03:52,847 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,847 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:03:52,847 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file82741429956119568.xml
2016-08-10 18:03:52,847 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file82741429956119568.xml
2016-08-10 18:03:52,849 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,851 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:03:52,851 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,853 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:03:52,853 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,853 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:03:52,854 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,855 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:03:52,855 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,855 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:03:52,855 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4063986547820172604.xml
2016-08-10 18:03:52,856 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4063986547820172604.xml
2016-08-10 18:03:52,858 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,858 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:03:52,858 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:03:52,859 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:03:52,859 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,859 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:03:52,859 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,859 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:03:52,859 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:52,860 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:03:52,946 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-10 18:03:52,947 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile495167768667623189.xml
2016-08-10 18:03:52,948 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile495167768667623189.xml
2016-08-10 18:03:52,949 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,950 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,950 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,950 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,951 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,953 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:03:52,954 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:03:52,955 ERROR query.QuerySchemaLoader  [] - Caught exception: 
2016-08-10 18:03:52,955 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,956 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 18:03:52,956 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,957 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 18:03:52,958 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,958 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 18:03:52,959 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,959 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 18:03:52,960 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,960 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 18:03:52,967 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile495167768667623189.xml
2016-08-10 18:03:52,968 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile495167768667623189.xml
2016-08-10 18:03:52,970 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,971 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:03:52,971 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:03:52,971 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-10 18:03:52,974 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-10 18:03:52,978 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 18:03:52,978 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile5526967290669128364.tmp
2016-08-10 18:03:52,979 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2202683028288395956.xml
2016-08-10 18:03:52,980 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,981 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 18:03:52,983 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,983 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 18:03:52,983 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,984 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 18:03:52,989 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-10 18:03:52,990 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2202683028288395956.xml hdfs = false
2016-08-10 18:03:52,990 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2202683028288395956.xml
2016-08-10 18:03:52,992 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,992 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,993 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:03:52,993 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,993 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,993 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:03:52,994 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,995 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 18:03:52,995 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,995 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 18:03:52,996 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,996 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:52,997 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,997 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,998 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,998 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,999 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,999 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 18:03:52,999 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,999 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 18:03:53,000 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,001 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 18:03:53,001 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,001 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 18:03:53,002 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,002 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 18:03:53,002 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:52,997 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:53,003 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 18:03:53,004 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,004 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 18:03:53,004 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,004 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 18:03:53,003 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,005 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,005 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2202683028288395956.xml hdfs = false
2016-08-10 18:03:53,006 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,006 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,006 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,007 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,007 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 18:03:53,010 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,011 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 18:03:53,012 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,012 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,012 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,013 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,013 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,014 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-10 18:03:53,014 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,015 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-10 18:03:53,006 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2202683028288395956.xml
2016-08-10 18:03:53,016 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,017 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-10 18:03:53,017 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,017 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-10 18:03:53,018 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,018 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-10 18:03:53,019 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,019 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-10 18:03:53,020 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,020 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-10 18:03:53,020 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,021 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-10 18:03:53,022 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,022 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,022 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,023 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,023 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,024 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-10 18:03:53,024 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,028 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-10 18:03:53,041 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 18:03:53,042 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 18:03:53,042 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 18:03:53,043 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 18:03:53,043 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 18:03:53,044 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 18:03:53,044 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 18:03:53,044 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 18:03:53,045 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 18:03:53,045 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 18:03:53,046 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-10 18:03:53,046 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-10 18:03:53,047 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-10 18:03:53,047 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-10 18:03:53,048 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-10 18:03:53,049 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 18:03:53,050 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 18:03:53,050 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 18:03:53,050 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 18:03:53,050 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 18:03:53,050 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 18:03:53,051 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 18:03:53,051 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 18:03:53,051 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,052 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,052 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,052 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,052 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,052 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,053 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 18:03:53,053 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 18:03:53,053 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:03:53,054 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,054 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,054 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,054 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,054 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,055 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,055 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,055 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 18:03:53,055 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 18:03:53,056 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,056 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,056 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,056 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,057 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,057 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,057 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 18:03:53,057 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 18:03:53,058 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 18:03:53,058 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 18:03:53,058 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,058 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:03:53,058 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 18:03:53,059 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,059 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:03:53,059 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 18:03:53,059 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,059 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:03:53,060 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 18:03:53,060 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:03:53,060 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 18:03:53,061 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:03:53,061 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:03:53,061 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:03:53,062 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 18:03:53,062 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 18:03:53,062 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,062 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 18:03:53,063 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 18:03:53,063 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 18:03:53,063 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 18:03:53,064 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 18:03:53,062 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,064 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 18:03:53,064 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,065 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,064 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:53,065 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,065 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,065 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,066 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,066 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 18:03:53,066 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 18:03:53,065 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,066 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:03:53,067 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,067 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,067 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,067 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,067 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,068 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,067 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:03:53,068 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,068 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 18:03:53,068 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 18:03:53,068 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7957529374283541206.xml
2016-08-10 18:03:53,069 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,069 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,069 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7957529374283541206.xml
2016-08-10 18:03:53,069 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,069 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,069 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,070 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,070 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 18:03:53,070 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 18:03:53,070 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 18:03:53,071 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 18:03:53,071 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,071 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:03:53,071 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 18:03:53,071 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,072 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:03:53,072 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 18:03:53,072 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,072 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:03:53,073 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 18:03:53,073 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:03:53,074 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 18:03:53,074 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:03:53,074 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 18:03:53,075 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:03:53,071 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:03:53,075 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:03:53,075 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,075 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:03:53,075 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:03:53,076 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,076 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:03:53,076 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:03:53,076 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 18:03:53,076 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,076 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:03:53,077 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:03:53,077 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 18:03:53,077 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:03:53,077 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:03:53,077 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,078 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:03:53,078 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,078 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:03:53,078 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,079 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:03:53,079 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-10 18:03:53,079 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-10 18:03:53,080 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-10 18:03:53,079 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7957529374283541206.xml
2016-08-10 18:03:53,080 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-10 18:03:53,080 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-10 18:03:53,080 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7957529374283541206.xml
2016-08-10 18:03:53,080 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-10 18:03:53,081 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-10 18:03:53,083 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:53,083 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-10 18:03:53,083 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:03:53,083 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,083 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:03:53,084 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,084 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,084 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-10 18:03:53,084 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,084 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,085 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,084 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,085 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-10 18:03:53,085 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-10 18:03:53,085 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-10 18:03:53,085 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,085 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:03:53,086 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,086 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-10 18:03:53,086 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,086 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,086 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:53,086 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,086 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-10 18:03:53,086 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,087 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,087 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-10 18:03:53,087 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,087 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-10 18:03:53,087 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-10 18:03:53,088 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,088 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,088 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,088 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,088 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-10 18:03:53,088 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,089 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-10 18:03:53,089 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-10 18:03:53,089 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-10 18:03:53,089 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-10 18:03:53,090 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,090 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:03:53,090 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-10 18:03:53,090 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,090 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:03:53,090 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-10 18:03:53,091 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,091 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-10 18:03:53,091 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-10 18:03:53,091 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:03:53,091 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-10 18:03:53,092 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-10 18:03:53,092 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-10 18:03:53,092 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:03:53,093 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:03:53,093 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,093 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:03:53,093 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,094 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:03:53,094 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,094 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:03:53,094 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-10 18:03:53,095 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-10 18:03:53,095 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-10 18:03:53,096 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-10 18:03:53,096 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,096 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-10 18:03:53,096 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,097 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-10 18:03:53,097 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-10 18:03:53,098 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-10 18:03:53,101 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,102 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,103 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,104 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,105 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,105 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,106 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,106 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,106 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,107 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,107 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,107 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,108 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,109 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,109 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,109 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,110 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,110 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,111 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,111 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,112 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,113 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,113 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,127 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,128 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,129 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,130 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,130 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,131 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,136 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,139 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,140 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,140 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,141 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,156 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,156 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,157 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,166 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,167 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,172 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,178 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,178 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,179 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,182 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-10 18:03:53,192 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-10 18:03:53,193 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-10 18:03:53,202 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-10 18:03:53,203 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-10 18:03:53,212 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner2551380106030502553.xml
2016-08-10 18:03:53,217 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner2551380106030502553.xml hdfs = false
2016-08-10 18:03:53,217 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner2551380106030502553.xml
2016-08-10 18:03:53,219 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:03:53,223 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:03:53,224 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile8889349269628363339.xml
2016-08-10 18:03:53,228 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile8889349269628363339.xml hdfs = false
2016-08-10 18:03:53,228 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile8889349269628363339.xml
2016-08-10 18:03:53,231 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:03:53,232 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:03:53,233 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,233 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,233 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:53,234 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType268255560096998787.xml
2016-08-10 18:03:53,274 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType268255560096998787.xml hdfs = false
2016-08-10 18:03:53,275 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType268255560096998787.xml
2016-08-10 18:03:53,277 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:03:53,277 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:03:53,603 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-10 18:03:53,843 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-10 18:03:53,844 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-10 18:03:53,845 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile18448259305725337.xml
2016-08-10 18:03:53,848 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile18448259305725337.xml hdfs = false
2016-08-10 18:03:53,848 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile18448259305725337.xml
2016-08-10 18:03:53,850 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:03:53,851 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:03:53,851 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,851 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,851 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:53,852 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,852 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:03:53,852 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8868199321988385304.xml
2016-08-10 18:03:53,853 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8868199321988385304.xml
2016-08-10 18:03:53,854 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:03:53,854 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:03:53,854 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:03:53,854 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 18:03:53,856 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8868199321988385304.xml
2016-08-10 18:03:53,856 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8868199321988385304.xml
2016-08-10 18:03:53,857 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:53,858 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:03:53,858 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:03:53,858 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 18:03:53,858 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-10 18:03:53,859 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile958793187104550940.xml
2016-08-10 18:03:53,862 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile958793187104550940.xml hdfs = false
2016-08-10 18:03:53,862 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile958793187104550940.xml
2016-08-10 18:03:53,864 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:03:53,864 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-10 18:03:53,864 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,865 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,865 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:03:53,865 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:03:53,866 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-10 18:03:53,866 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2832864322789133898.xml
2016-08-10 18:03:53,867 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2832864322789133898.xml
2016-08-10 18:03:53,868 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-10 18:03:53,868 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-10 18:03:53,869 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-10 18:03:53,869 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-10 18:03:53,874 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2832864322789133898.xml
2016-08-10 18:03:53,874 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2832864322789133898.xml
2016-08-10 18:03:53,876 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:03:53,876 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-10 18:03:53,877 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-10 18:03:53,877 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-10 18:03:53,877 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-10 18:03:53,947 INFO  encryption.Paillier  [] - Parameters = p = -166010897 q = -334174449 N = 2119157761 NSquared = 148869121 lambdaN = 1309671554 bitLength = 3072
2016-08-10 18:03:54,103 INFO  general.PaillierTest  [] - encM1 = 1680500706 encM2 = -168460607
2016-08-10 18:03:54,249 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:03:54,311 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1030756532 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:04:04,873 INFO  encryption.Paillier  [] - Parameters = p = -2021042731 q = 716585819 N = -871917129 NSquared = 1817067729 lambdaN = 1668546644 bitLength = 6426
2016-08-10 18:04:05,909 INFO  general.PaillierTest  [] - encM1 = -189071295 encM2 = 1113890679
2016-08-10 18:04:06,961 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:04:07,487 INFO  general.PaillierTest  [] - encM1_times_encM2 = 956599408 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:04:07,487 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:04:07,488 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:04:07,494 INFO  encryption.Paillier  [] - testBit true
 N = 10111111011101111110111110001001101010111101000000011111000011111000000000110011100001011110110010100011111010000100010001101001110001001011000111111110110010011100010111101000010101100010100111100001
2016-08-10 18:04:07,494 INFO  encryption.Paillier  [] - Parameters = p = -131250477 q = 732283899 N = -397006367 NSquared = -100280383 lambdaN = 1648463754 bitLength = 201
2016-08-10 18:04:07,495 INFO  general.PaillierTest  [] - encM1 = -543793903 encM2 = -674142375
2016-08-10 18:04:07,495 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:04:07,495 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1529376375 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:04:09,273 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:04:12,026 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:04:12,028 INFO  encryption.Paillier  [] - Parameters = p = 380376691 q = -526908657 N = 1285597629 NSquared = -724888183 lambdaN = 716064798 bitLength = 3072
2016-08-10 18:04:12,146 INFO  general.PaillierTest  [] - encM1 = 1417852628 encM2 = -1394664343
2016-08-10 18:04:12,267 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:04:12,326 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1554704463 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:04:23,532 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:04:23,540 INFO  encryption.Paillier  [] - Parameters = p = 1399895051 q = 1169145959 N = 602255469 NSquared = -359133591 lambdaN = -1579686158 bitLength = 3505
2016-08-10 18:04:23,722 INFO  general.PaillierTest  [] - encM1 = -1346722027 encM2 = 260254345
2016-08-10 18:04:23,898 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:04:23,985 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1952931958 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:04:23,986 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:04:23,986 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:04:23,992 INFO  encryption.Paillier  [] - Parameters = p = -630014081 q = 142629859 N = 894562973 NSquared = 1866937417 lambdaN = -485503350 bitLength = 201
2016-08-10 18:04:23,992 INFO  general.PaillierTest  [] - encM1 = 997145940 encM2 = -613418777
2016-08-10 18:04:23,992 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:04:23,993 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2088478530 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:04:26,011 INFO  encryption.Paillier  [] - Parameters = p = -173359141 q = 1150733887 N = 1907978469 NSquared = -2034029351 lambdaN = -1682181786 bitLength = 3072
2016-08-10 18:04:26,135 INFO  general.PaillierTest  [] - encM1 = 20741995 encM2 = -1245660493
2016-08-10 18:04:26,250 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:04:26,306 INFO  general.PaillierTest  [] - encM1_times_encM2 = -259783711 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:05:09,448 INFO  encryption.Paillier  [] - Parameters = p = -459133385 q = -444307929 N = 2054878305 NSquared = 1237126337 lambdaN = 1479159810 bitLength = 6771
2016-08-10 18:05:10,650 INFO  general.PaillierTest  [] - encM1 = 548478280 encM2 = 518382264
2016-08-10 18:05:11,873 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:05:12,485 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1488427418 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:05:12,485 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:05:12,485 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:05:12,490 INFO  encryption.Paillier  [] - testBit true
 N = 11000011111100011110110000011111000010101111110011001110011110011111011100111110101001010111010000011101110000101111110000100110100001111100110000101100110111001101100010001000100010111110000110101001
2016-08-10 18:05:12,491 INFO  encryption.Paillier  [] - Parameters = p = 1211905257 q = 18960065 N = -2004098647 NSquared = 1685094801 lambdaN = -1387488960 bitLength = 201
2016-08-10 18:05:12,491 INFO  general.PaillierTest  [] - encM1 = -101271725 encM2 = 272022152
2016-08-10 18:05:12,492 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:05:12,492 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1705354771 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:05:13,431 INFO  encryption.Paillier  [] - testBit false
 N = 110010001110010100110000100110111111110111011011010100000100000010010000000111000100011011010000111111101001011001101011100111011010100111110101000100111000011111000001101011111010110110111101010011001111010101001101011000010010000110000000000010000111011011110010001011001101101101101100101100001101101100010101101101110010000111100011101111101100010001101101101110011000011101000011101001011000111011001101101110101101000011000100110000100100000000100101000001001111011001011110000101101011011000101100001111011111100110110001010011000110101101011110110000100010011111110110101001101101001011011110000111110011000000100011110001111100110011000001001010000110000110111100000110111001111110100111000110000111000111101100100101000000011101100111101011110100100001111100100010110010010011101101001111001110110111101000010101000100001101000110000001110110010010111110001101111101110011001100011011101001010100110000110010001100010001000001101000100111110110000111111110110101001110000111100010111011111111010110110010000010100110011001100111111011110010000001111001001001110100001111011100011000110000011110100101100101000000100110011110110101010011110110110110011010010110010001011000010100010001101010100100011101010000111111010011011101110001111101100011011010110100001101011000101111010010101000010111100000100010011000110010001111111010101100011001011000111101000000110100101010110010000101101010100110110001010000001011011001101000011101000011000100001011100110011010100001111110110010100111111010101001011111111000100010100001111001010111110101010101010000100101001101011001001001100011110000011101001101111001110101100111111000101001101111000100111011111001010000110100011100001101010110011011011000010101011011100010000111001010000011110001000101100001011001001010010000101100101110111001100010101100101010101011100000110000101101100000010010011110101111111111010001101110011010000101010110010110010111010001100010111011111001110011001010010011010100110100100101011101110011010000111100001000111011010001010111101000001011110100110100101110010111011100110111110001001111001001100101101000010111100000110001011100110101000001011011001111111100111010100100110000111100011000100111110100111000110001111001000010111110111111110110101011010101001101101111001001110100010101001101011001111001011101101100111100011100111111101111111111101010110001111011000010001111101101001011111010101111010011001100001011010001000110101111010101000101111100010001100010111111011111000011111100000000010100101000100111111000110011011010101100011100101001011110000100101111110100101110010001110101110110101001011111000110010100011100001110001000001010011001001010001111100010001010101010010001101100001110110011010000001000010011100001000011111111110111001101100010000100110111000110100100010000100111111001110110011100011011111111110110011000100110001110010110000000100110101101011101101011111110101001010010011100010001010101011111011010011000010010010010100100001011000100110000101000001110110001010010111000010111111001011110111100101100010101000001001101111101001100001110110110011101
2016-08-10 18:05:16,110 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:05:19,791 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:05:19,794 INFO  encryption.Paillier  [] - Parameters = p = -730388455 q = -482542327 N = -877847071 NSquared = 999735233 lambdaN = 1652498200 bitLength = 3072
2016-08-10 18:05:19,914 INFO  general.PaillierTest  [] - encM1 = -1343359431 encM2 = 698560163
2016-08-10 18:05:20,033 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:05:20,093 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1857391138 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:06:04,666 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:06:13,540 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:06:53,712 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:07:07,932 INFO  encryption.Paillier  [] - testBit false
 N = 11010101110010100010111001110110111010110011010010100000110101101110010000000100110010000111101100110010001011001011101011111010111110011101110110110010111011100110111101000110100110000110101111001001100010111011101010011101101110001110001011100001001011000111001010001100001110011100100000000011111011101111011010110110000110110010101001011010111001000011001011101110100101000100011001101000100111100000111010111100001111111110110111000011111001001011110011111111001001001101110011110101100111001001000110101010101011000101010001110101110001010010000100111101000001011110000111100010110100110001110111001011000101101000110001010101100011100010100010011000011111111001010101101100000110111101011001100000011010101000110000010110111000010111101101101101001010110110100011101001101111111010111001010110011010000111011000101000111110001111111001111010011011101000101010001000111101110010111111001000111000000110000101110110111100001111111111000000101111110101101000011101111101011110010010011001011001100111011010110100111100010010101101001101011011100000011101010110011001100011111101010001001011011111000000001100110001001001100000110011100101110101011110111000110000010111100100001010111111011110111111111010100010010010110010110001110001111100110001111000000011011101111101000000110000110010000111110101111011001000011010010101000111011101010111001111001100100000001011000011010110001001001110011011110001001000000111110111010110000011001101111110100110011101100010011100001110010010100010100000010000011011100000111010101111001110010110101111110011000000100011101011110100010010000001000110000001001010000011101010011110110101011010011011000000100101110001100011001110100000111000111000011000000010010001100111001111100000000000000110110100011010110101101101111110110011011010001001001000011001101000000111011011101110101011111000000000101110110000111010110101011011000000110100001100000111110010011111111111010011001100011000000101000111100010000000011110110100101111000011100110000010001001010010000010010010001111000001010000011011000111111111110101111101011011010101000100000000000111000011000011101100011101100001010101011011101001000110110110101110110110011100011111011010001000110001100110000001110000010101101000111110001000011100111010010011100110111010101001100100111110110101100001100000011000111010101111111000010111010101111000101111001010110101111001011000101011100000111100001111101101100101110100000101000110010100101110100101110011011000111010010101100100100000100111110100011110011110110000110101110110101111110100110001000110010010010100101111011110011000001100111010011111000100111100010110000001100001010101111110011101010111100111100001110100101101101101011110001101111110111000001101011000101010011101000000110010011000111011110010111001011000001010001110010010011110110000101000010100110111101010010010111100101000101011011101001100001010000000010011101110100111010110110100101100111110000010011101001010111010010001100000110101010110010000011110110011110100000011101000001110100110100100110000100000111010111011110001010001001001011101110111101100101011011011110111100000110101011000011000100010011100100111100010000011110110111100001111110101100011001010110000100111001010111110101000011110001100010010110010110001000100111001100010111000001101001000000000110000010001010111110001001010110011100001011110101101111110000100101100001101111101100110011111000100111110100100001000110101100000001010001110100100111100110110100101010000101000101110110010100000001100110100010000100001110100001111011001100111010110010010000111101000101000001110000111001000101101010010101111101101101001101110000111101110111100111010110001001000010100100011101000010101100010001110010010011100000001101011001100100101011111101110101001010101110011111001101111101010101010110110111010011001000110110000110111000000101111101110100100001101100110010000000000111001011001101010000100100011001000011000001111011110010010111010001001001111110100111000011001110100101000011010111101100111000101101111001111010001101101001111000111111001101000000110100101111100101100000101111010011010111101101000001011010111111001111010110101010011000010001100000011111111100011000110000111111111110000010000001010111010000001111111001101010110011100011110101011101011110101010011010110010111111001011001001011001001111111111001000101001001001011011010110111101100001010001011111010110101111010101100011010011001110000001101101011101001100011000011001010011001001011101011010100101101000111101101111111000101010001100011000101111111001100101101000011111011111111001001001001110000000100110011101001100010000010010001010000110111011011011010011010111010110001001110111111100010000001001010110000000111100111000101111000001100011100010111111000011001011100101011011011011010100001000101011110100001101011111000101011001110011001101011011101011101001010000111100110111111110101010100001110011100110111011000010110110010101010000010011001010110101010101001010111110100001100110000001110001101010010100011011011011100111110101001011110001111111011010110010111111100011101010101101101111111101101011100110011110110101100001011100011001111001001101001111101110001101010011001011000001100000001110011010011110010101100011101001000101110001010011110111110100101100010101111010001011101100010110101001111000110100101010010110110000100100101000011001001000110111100011001111100110001100000001100101001111001001001001110010000101010000111110111101000010100100010010100001110001111110010001001110111101011111110100010101110010010101001010101111101010001101100111000100011000110011100111100001001101100011100100110001111101000010010001101010001
2016-08-10 18:07:17,235 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:07:21,549 INFO  encryption.Paillier  [] - testBit false
 N = 11001101111100011011101110110010101111010001000011001111110111101011000001110110101011110100000100011010111010110100110101001011111010010010110001110100010111110101100000011100001011001101000111111001111011101100011010000000101100100011011100011010011100000101111101111001111000010000000110010100010111111000000111101101010001101111110110110100101000110011111001000101110110001101010100001000001011000010000100000001100011101010101011101110111010001000110000010011110001011110101000010111100110010011101101100110001001111101101000001011010010100111010110000100110010110101100100001011011001111110101010001100111001010011001000100011101111111011100010011000001011100101001000111100001101010010111001101010010100001101010001101101100001101010000010001101100110010010111010101011100101111011010100011011010101000111111110110101101110011011010101001011110100010110110011111101001001010101111110100101100111001011111100101001010100110111000001010110000001010101001010000010001100000111110010110011111001100000110001110010100001001001101001010010001000010101110111110111110011001011100010000110110010010111011010100100111110011001011011000111000110011000001110101111011001010100001000110111111010101101010010011111011001100110101111010000010110010111010010110000010011001011001000100101010011111011010000000010010101100101101000101100000010001001011001011001101011010110000001000001001001111000101010100100110001011001011011111110001100011111111001101110010000110001011100111111000111110010111100111111000010001101001011011101100111100100100010111101010000010011001000111000110110100101101000011111001111000110101001001000110011100110110110011110100110010110001010000111001000111001000110101111101000110100011111011101000110001100101100100111011101111110111011010010000011010011101010110010010011000011000111110000000011100101100111010100001100100010111001111001100100010010001111000101011110001011100000001111001111011110111110110100110001011001101001111000101101011100001010010111011011001011000101010110000001111110111100000111111010011000101000101010111101111100001000111100100010100111101110010011010010111000101110111101001110001010100110101010010000110011111011000011110110010001011000111011000010101101101100000010101110010001101011110000110000010001001100011111000101111011110001010110011011110100011110110011000101000010100111000010010110010100000101110000011011111000010100100110101011010000010000110111110110100000000000100100100011010000011111010010111001110011000100011011000001110001101110110001010001100100010000010010001110000110001100110000010100010010100101110000010010110001110010011111011010100000100001001001110010001000100101010111111001100000011101101100100101111011001100101011101100001000111010011101111111000011100010000000111011110011011000101001010100100000111100001001000011111101010101101001111000110111110011101100101101111011001011100111111111011011101000100101001110000110100010111000011100000101000110111000010001110111010110001001111111011001000010100001011001101110010010110001111101010010100001110110010110101011101101011111101001011001110111100100110111000000000100100010011111101001111111000001010011100100100110101000101101100010011110100010011110100111110011100011100111111001101010110100100010111011110001010001111011000100111001100110100110111000001000001010001000000011010000001000000001111001110001101101001001101011111011101100110100000001000000010111101000000000001010110110001101011010011110100000101101001011110001100000001001001011010011000010111001111000100000111011001100011011010101001001001001111101000010100001001001010101100011100010010011011000011111111010011101010111100110100111001011000111111101110110010110100001011110001100110000110101111000001001111001000101111011101001100100100100000111011111111111000111100001101101010111100110100001001111101011010000100100011001100011110011101010011001110110011100010111000101110100110101111001110111100101010111011000000111011110100000101111110100101111111111010000110100011100001010110010101111010001111011101001100110000101010111011000100110001110111110011001101011000000100001011101001010001011010010100101100100110110110111010110110101111010001011100010010111011010111011101001100111101110110101010000000011010111000001010001010011011111101110011010000011111001110100010001110110101000010001101100000100110010011110011000011011000011100010001110110000001100010110000000011001001011011010101011111111001001010000001100100000110000010001111011111000101011000000010001001011110111000101101000011111011010000011100100011101101000101101100100001000111100011110100101110010010100011000011100001010101110010110101111010010101010101110101110000010101100110100001001110011101111110101110110110010011001111111000000011110010110101001100111100000111011000010110100110011101011001011001101001111001000110000110100011100100101111100010011011101011000000000001001011001111011011110010111110000110100111100010000110110101110010100100111011000110011011011110101011111100000100100110010101111101101111101000111110000101111010101000110000001101000101010011001001101111110110001110101101000010010110011110011111101010001110111110000101100111111011110010010101101111010111001111101100111001111110101111010011010111111010111010001000100000000000111011111101000110010011000010010001101000010110110100010001100110100000010110100000111011111010101110010100111101111010100100111011001111100101000110111000001101110010010111100001001010110110010011001101110001011110110011010101111000000111111111011010110110111011011101001001101100010101101010110000100000111001101001001010000000100111010010100010011101001001000111111111111010011010011
2016-08-10 18:08:00,770 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:08:08,505 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:08:08,510 INFO  encryption.Paillier  [] - Parameters = p = 1718682197 q = 1533539047 N = 1801483443 NSquared = 1567798569 lambdaN = -957617516 bitLength = 5613
2016-08-10 18:08:09,216 INFO  general.PaillierTest  [] - encM1 = 461698186 encM2 = -894633980
2016-08-10 18:08:09,923 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:10,275 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1583875678 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:10,276 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:08:10,276 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:08:10,279 INFO  encryption.Paillier  [] - Parameters = p = 1176215689 q = -79959713 N = 2079343575 NSquared = -551928175 lambdaN = 491543800 bitLength = 201
2016-08-10 18:08:10,280 INFO  general.PaillierTest  [] - encM1 = -1104282242 encM2 = 1131528413
2016-08-10 18:08:10,280 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:10,280 INFO  general.PaillierTest  [] - encM1_times_encM2 = -725764603 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:11,093 INFO  encryption.Paillier  [] - Parameters = p = 1945538627 q = -1552994403 N = -1732262377 NSquared = 2140771857 lambdaN = -1062403300 bitLength = 3072
2016-08-10 18:08:11,216 INFO  general.PaillierTest  [] - encM1 = 1118341195 encM2 = 1795265109
2016-08-10 18:08:11,335 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:11,395 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1005466023 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:20,795 INFO  encryption.Paillier  [] - Parameters = p = -346824233 q = -63047365 N = 1194994573 NSquared = -112415831 lambdaN = -1345050562 bitLength = 4721
2016-08-10 18:08:21,218 INFO  general.PaillierTest  [] - encM1 = 1601817510 encM2 = 687208978
2016-08-10 18:08:21,633 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:21,847 INFO  general.PaillierTest  [] - encM1_times_encM2 = -44275473 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:21,848 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:08:21,848 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:08:21,851 INFO  encryption.Paillier  [] - testBit false
 N = 11001111101100010010000000110100111111111111010100001010001110101001100010100101000101100110100111100010000111100011100110110100110100111011001000010101101101010011001001101000011101000000110011001011
2016-08-10 18:08:21,853 INFO  encryption.Paillier  [] - testBit true
 N = 11000000000010101111101010110011010110100001111101000001001110111110101111000110000010100011010001001000000101111101000010111000000110111010011111011010001010010010010111000100101011100100100011100011
2016-08-10 18:08:21,853 INFO  encryption.Paillier  [] - Parameters = p = -28275399 q = 650404603 N = -995211037 NSquared = -1051428535 lambdaN = -808670120 bitLength = 201
2016-08-10 18:08:21,854 INFO  general.PaillierTest  [] - encM1 = 1648484246 encM2 = -1721596555
2016-08-10 18:08:21,854 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:21,854 INFO  general.PaillierTest  [] - encM1_times_encM2 = -985324562 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:24,553 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:08:24,555 INFO  encryption.Paillier  [] - Parameters = p = -113927023 q = -755877965 N = -1204707229 NSquared = 442623561 lambdaN = -167451120 bitLength = 3072
2016-08-10 18:08:24,681 INFO  general.PaillierTest  [] - encM1 = -1857839369 encM2 = 1703559613
2016-08-10 18:08:24,800 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:24,860 INFO  general.PaillierTest  [] - encM1_times_encM2 = 70239284 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:27,687 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:08:27,690 INFO  encryption.Paillier  [] - Parameters = p = -791350755 q = 1284637729 N = -272258627 NSquared = -1821567607 lambdaN = -191386400 bitLength = 3958
2016-08-10 18:08:27,937 INFO  general.PaillierTest  [] - encM1 = 1537333565 encM2 = 690685558
2016-08-10 18:08:28,192 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:28,321 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2021611045 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:28,322 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-10 18:08:28,322 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:08:28,324 INFO  encryption.Paillier  [] - Parameters = p = -453182117 q = -1759904495 N = -1508720117 NSquared = 547400825 lambdaN = -2030089232 bitLength = 201
2016-08-10 18:08:28,325 INFO  general.PaillierTest  [] - encM1 = -1924393889 encM2 = -1649131051
2016-08-10 18:08:28,325 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:28,326 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1911501111 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:29,247 INFO  encryption.Paillier  [] - Parameters = p = 1550042941 q = -1356177265 N = 1769286419 NSquared = -56794263 lambdaN = -1884913524 bitLength = 3072
2016-08-10 18:08:29,369 INFO  general.PaillierTest  [] - encM1 = 1954541605 encM2 = 652639374
2016-08-10 18:08:29,487 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:29,548 INFO  general.PaillierTest  [] - encM1_times_encM2 = 263756942 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:42,807 INFO  encryption.Paillier  [] - Parameters = p = -241528031 q = -856764903 N = 254471225 NSquared = 179119281 lambdaN = 1779708256 bitLength = 4215
2016-08-10 18:08:43,106 INFO  general.PaillierTest  [] - encM1 = -2075253267 encM2 = 1729074878
2016-08-10 18:08:43,416 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:43,571 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1783502040 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:43,571 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-10 18:08:43,571 INFO  general.PaillierTest  [] - i = 0
2016-08-10 18:08:43,573 INFO  encryption.Paillier  [] - testBit false
 N = 10000111101110110000001111111011010110111011001111001000101010111001100111001101100110100010000111010001000100010100101101011110001101110011000100000001011110000100000101101100111111001001010010000101
2016-08-10 18:08:43,577 INFO  encryption.Paillier  [] - testBit false
 N = 10101111001100101110111011111011011111111010010110111110111010100110010011110110111111110001111010001110010001000110111000101100001001111100000011001110100101011110010000001001000111010111100111001011
2016-08-10 18:08:43,580 INFO  encryption.Paillier  [] - testBit false
 N = 10110111001010100000100011000110100110111011010000000000111110011101001011001101111111010010110010111100000001000101110001111111110101110011100001000111101010010101011110010100111010111110101111010111
2016-08-10 18:08:43,582 INFO  encryption.Paillier  [] - testBit true
 N = 10100111101001000011000100100000110111100011000000100111110010101000000100010000010110000101001111010111111111010111011011001110011110111101101010100111101110110110100011001010100000110110000111111011
2016-08-10 18:08:43,583 INFO  encryption.Paillier  [] - Parameters = p = 1445346307 q = -447615831 N = -897359365 NSquared = -2006832103 lambdaN = 1199938728 bitLength = 201
2016-08-10 18:08:43,583 INFO  general.PaillierTest  [] - encM1 = 1883847923 encM2 = 964673497
2016-08-10 18:08:43,583 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:43,583 INFO  general.PaillierTest  [] - encM1_times_encM2 = 764024469 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:46,371 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:08:47,509 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:08:47,511 INFO  encryption.Paillier  [] - Parameters = p = -469150665 q = 877865565 N = -653681157 NSquared = 52679705 lambdaN = 1616285620 bitLength = 3072
2016-08-10 18:08:47,632 INFO  general.PaillierTest  [] - encM1 = 1982130943 encM2 = -334885202
2016-08-10 18:08:47,754 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:08:47,816 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1451898894 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:08:50,719 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:09:00,002 INFO  encryption.Paillier  [] - testBit false

2016-08-10 18:09:01,808 INFO  encryption.Paillier  [] - testBit true

2016-08-10 18:09:01,810 INFO  encryption.Paillier  [] - Parameters = p = -52488765 q = 53770785 N = -1648575453 NSquared = -877957943 lambdaN = -824928736 bitLength = 3847
2016-08-10 18:09:02,046 INFO  general.PaillierTest  [] - encM1 = -1250613798 encM2 = 588304959
2016-08-10 18:09:02,280 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:09:02,401 INFO  general.PaillierTest  [] - encM1_times_encM2 = -994577146 multDecrypt = 7 m1_plus_m2 = 7
2016-08-10 18:09:02,402 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-10 18:09:02,402 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-10 18:09:02,402 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-10 18:09:02,403 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-10 18:09:02,407 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 18:09:02,410 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 18:09:02,410 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-10 18:09:02,412 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-10 18:09:02,412 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-10 18:09:02,413 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-10 18:09:02,413 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-10 18:09:02,413 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-10 18:09:02,415 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-10 18:09:02,417 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-10 18:09:02,418 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-10 18:09:02,420 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-10 18:09:02,420 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-10 18:09:02,421 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-10 18:09:02,422 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-10 18:09:02,422 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-10 18:09:02,429 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-10 18:09:02,431 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile7521799459209845284.tmp
2016-08-10 18:09:02,431 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile7521799459209845284.tmp
2016-08-10 18:09:02,432 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8719302228852570059.xml
2016-08-10 18:09:02,479 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-10 18:09:02,480 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8719302228852570059.xml hdfs = false
2016-08-10 18:09:02,480 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8719302228852570059.xml
2016-08-10 18:09:02,482 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:09:02,484 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:09:02,485 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:09:02,485 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:02,485 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:02,485 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:02,486 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:02,486 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:02,486 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:02,486 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8719302228852570059.xml hdfs = false
2016-08-10 18:09:02,486 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8719302228852570059.xml
2016-08-10 18:09:02,489 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-10 18:09:02,489 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-10 18:09:02,490 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:09:02,490 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:02,490 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:02,491 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:02,491 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:02,491 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:02,491 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:02,492 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-10 18:09:02,492 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml
2016-08-10 18:09:02,492 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml
2016-08-10 18:09:02,495 INFO  utils.TestUtils    [] - elementName = date
2016-08-10 18:09:02,496 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:09:02,497 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:09:02,497 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-10 18:09:02,497 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-10 18:09:02,497 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:09:02,497 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 18:09:02,499 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-10 18:09:02,499 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4381826882711077834.xml
2016-08-10 18:09:02,499 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4381826882711077834.xml
2016-08-10 18:09:02,501 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:09:02,501 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:09:02,501 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:09:02,501 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 18:09:02,503 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-10 18:09:02,503 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6538286279889120085.xml
2016-08-10 18:09:02,503 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4381826882711077834.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6538286279889120085.xml
2016-08-10 18:09:02,505 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:09:02,505 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-10 18:09:02,505 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:09:02,506 INFO  utils.TestUtils    [] - filterName = qname
2016-08-10 18:09:02,507 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-10 18:09:02,507 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file456959198978537933.xml
2016-08-10 18:09:02,508 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4381826882711077834.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6538286279889120085.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file456959198978537933.xml
2016-08-10 18:09:02,509 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:09:02,509 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:09:02,509 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:09:02,509 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-10 18:09:02,510 INFO  utils.TestUtils    [] - filterName = ip
2016-08-10 18:09:02,511 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-10 18:09:02,511 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6557444169295097363.xml
2016-08-10 18:09:02,511 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4381826882711077834.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6538286279889120085.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file456959198978537933.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6557444169295097363.xml
2016-08-10 18:09:02,513 INFO  utils.TestUtils    [] - elementName = qname
2016-08-10 18:09:02,513 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-10 18:09:02,513 INFO  utils.TestUtils    [] - elementName = ip
2016-08-10 18:09:02,516 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-10 18:09:02,517 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml
2016-08-10 18:09:02,517 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml
2016-08-10 18:09:02,519 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:02,519 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:09:02,520 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:02,520 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:09:02,520 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:09:02,520 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:09:02,521 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:02,521 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:09:02,521 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:02,521 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:09:02,521 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:02,522 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:09:02,522 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:02,522 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:09:02,522 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:02,522 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:09:02,522 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:09:02,787 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-10 18:09:03,005 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4381826882711077834.xml
2016-08-10 18:09:03,005 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4381826882711077834.xml
2016-08-10 18:09:03,007 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:03,008 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:09:03,008 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:03,008 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:09:03,009 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,009 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:09:03,009 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,009 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:09:03,009 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,009 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:09:03,010 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:09:03,054 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6538286279889120085.xml
2016-08-10 18:09:03,055 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6538286279889120085.xml
2016-08-10 18:09:03,056 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:03,057 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:09:03,057 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:03,057 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:09:03,057 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:03,057 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:09:03,058 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,058 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:09:03,058 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,058 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:09:03,058 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:09:03,088 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file456959198978537933.xml
2016-08-10 18:09:03,089 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file456959198978537933.xml
2016-08-10 18:09:03,094 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:03,095 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:09:03,095 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:03,096 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:09:03,096 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:03,096 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:09:03,096 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,096 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:09:03,096 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,097 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:09:03,097 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-10 18:09:03,097 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-10 18:09:03,126 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6557444169295097363.xml
2016-08-10 18:09:03,127 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6557444169295097363.xml
2016-08-10 18:09:03,128 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:03,128 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:09:03,129 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:03,129 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:09:03,129 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:03,129 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:09:03,130 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,130 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:09:03,130 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,130 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:09:03,130 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml
2016-08-10 18:09:03,131 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2155790659388009380.xml
2016-08-10 18:09:03,132 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:03,133 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-10 18:09:03,133 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:03,133 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:09:03,133 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-10 18:09:03,133 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-10 18:09:03,134 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,134 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:09:03,134 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,134 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:09:03,134 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:03,134 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-10 18:09:03,135 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:03,135 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-10 18:09:03,135 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,135 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-10 18:09:03,136 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:09:03,160 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4381826882711077834.xml
2016-08-10 18:09:03,160 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4381826882711077834.xml
2016-08-10 18:09:03,162 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:03,162 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-10 18:09:03,162 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:03,163 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-10 18:09:03,163 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,163 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-10 18:09:03,163 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,163 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-10 18:09:03,164 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,164 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-10 18:09:03,164 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:09:03,188 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6538286279889120085.xml
2016-08-10 18:09:03,189 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6538286279889120085.xml
2016-08-10 18:09:03,191 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:03,191 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-10 18:09:03,191 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:03,191 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-10 18:09:03,191 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:03,192 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:09:03,192 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,192 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-10 18:09:03,192 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,192 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-10 18:09:03,192 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-10 18:09:03,216 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file456959198978537933.xml
2016-08-10 18:09:03,217 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file456959198978537933.xml
2016-08-10 18:09:03,218 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:03,219 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-10 18:09:03,219 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:03,219 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:09:03,219 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:03,219 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:09:03,220 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,220 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:09:03,220 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,220 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:09:03,221 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-10 18:09:03,221 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-10 18:09:03,252 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6557444169295097363.xml
2016-08-10 18:09:03,252 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6557444169295097363.xml
2016-08-10 18:09:03,254 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-10 18:09:03,254 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-10 18:09:03,254 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-10 18:09:03,254 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-10 18:09:03,255 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-10 18:09:03,255 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-10 18:09:03,255 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,255 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-10 18:09:03,255 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-10 18:09:03,256 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-10 18:09:03,260 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:09:03,269 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:03,272 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6481630105752501904.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4522322081845422055.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6256926054377628306.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4559443577588425910.txt
2016-08-10 18:09:03,274 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:03,300 INFO  encryption.Paillier  [] - Parameters = p = 666595117 q = -115282255 N = 1687401501 NSquared = 445257 lambdaN = -789719664 bitLength = 384
2016-08-10 18:09:03,300 INFO  encryption.Paillier  [] - Parameters = p = 666595117 q = -115282255 N = 1687401501 NSquared = 445257 lambdaN = -789719664 bitLength = 384
2016-08-10 18:09:03,300 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:04,242 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:09:04,248 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:04,467 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:04,605 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:04,605 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:09:04,611 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:04,613 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:04,616 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:04,619 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:04,622 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:04,627 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:09:04,630 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:09:04,632 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:09:04,634 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:04,635 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:04,649 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:04,649 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:04,782 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:04,796 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:04,796 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:04,804 INFO  utils.BaseTests    [] - results:
2016-08-10 18:09:04,805 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:09:04,806 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:09:04,807 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:04,807 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:04,808 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:09:04,808 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:04,808 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:04,808 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:09:04,809 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:09:04,809 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:04,809 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:04,809 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:09:04,810 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:04,810 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:04,810 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:09:04,813 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:09:04,814 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 18:09:04,814 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:04,815 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1119525181787870768.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4483119715617564696.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3390249030131792149.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6835561165389015302.txt
2016-08-10 18:09:04,815 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:04,821 INFO  encryption.Paillier  [] - Parameters = p = -612335 q = 1587268773 N = -2009932043 NSquared = 702666361 lambdaN = -1972888944 bitLength = 384
2016-08-10 18:09:04,821 INFO  encryption.Paillier  [] - Parameters = p = -612335 q = 1587268773 N = -2009932043 NSquared = 702666361 lambdaN = -1972888944 bitLength = 384
2016-08-10 18:09:04,821 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:05,296 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:09:05,296 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:05,434 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:05,510 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:05,510 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:09:05,512 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 18:09:05,513 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 18:09:05,514 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 18:09:05,516 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 18:09:05,517 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 18:09:05,519 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 18:09:05,520 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:09:05,521 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:09:05,523 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:05,523 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:05,524 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:05,524 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:05,586 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:05,586 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:05,587 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:05,588 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:05,589 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:05,589 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:09:05,589 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:09:05,589 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 18:09:05,589 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:09:05,589 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:05,589 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:09:05,590 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 18:09:05,590 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 18:09:05,590 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:05,591 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5424035196110626649.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1381192826699884640.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8007723779874892608.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6543029227181958833.txt
2016-08-10 18:09:05,591 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:05,604 INFO  encryption.Paillier  [] - Parameters = p = 1139223071 q = 1969217597 N = 1064380771 NSquared = 1243012169 lambdaN = 1125453700 bitLength = 384
2016-08-10 18:09:05,605 INFO  encryption.Paillier  [] - Parameters = p = 1139223071 q = 1969217597 N = 1064380771 NSquared = 1243012169 lambdaN = 1125453700 bitLength = 384
2016-08-10 18:09:05,605 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:05,999 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:09:05,999 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:06,119 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:06,174 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:06,175 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 18:09:06,177 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:09:06,178 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 18:09:06,180 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 18:09:06,181 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:09:06,182 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:09:06,184 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 18:09:06,185 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:09:06,188 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:09:06,190 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:06,190 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:06,191 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:06,191 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:06,254 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:06,254 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:06,254 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:06,256 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:06,256 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:06,258 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:06,258 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:06,258 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:06,259 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 18:09:06,259 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 18:09:06,259 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 18:09:06,260 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 18:09:06,260 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 18:09:06,260 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:06,261 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1478086896477816501.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2147417793003505476.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse370843048371172045.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6562097473219987547.txt
2016-08-10 18:09:06,261 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:06,267 INFO  encryption.Paillier  [] - Parameters = p = 910782673 q = 1396089257 N = -1786451207 NSquared = 41166385 lambdaN = 562076432 bitLength = 384
2016-08-10 18:09:06,268 INFO  encryption.Paillier  [] - Parameters = p = 910782673 q = 1396089257 N = -1786451207 NSquared = 41166385 lambdaN = 562076432 bitLength = 384
2016-08-10 18:09:06,268 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:06,639 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:09:06,639 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:06,761 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:06,812 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:06,813 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:06,814 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:06,814 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:06,815 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:06,816 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:06,873 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:06,874 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:06,874 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:06,875 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:06,876 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:06,876 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:06,876 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 18:09:06,877 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 18:09:06,877 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:09:06,877 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:06,877 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1066125887847332077.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3572922348122221859.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7620637311798030341.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1956399949497788292.txt
2016-08-10 18:09:06,878 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:06,883 INFO  encryption.Paillier  [] - Parameters = p = 119349241 q = 1080487859 N = 661443099 NSquared = 758664921 lambdaN = 1878963576 bitLength = 384
2016-08-10 18:09:06,884 INFO  encryption.Paillier  [] - Parameters = p = 119349241 q = 1080487859 N = 661443099 NSquared = 758664921 lambdaN = 1878963576 bitLength = 384
2016-08-10 18:09:06,884 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:07,748 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:09:07,748 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:07,867 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:07,921 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:07,921 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:09:07,923 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:07,925 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:07,927 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:07,929 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:07,930 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:07,932 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:09:07,933 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:09:07,935 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:09:07,937 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:07,937 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:07,940 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:07,940 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:08,024 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:08,029 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:08,029 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:08,031 INFO  utils.BaseTests    [] - results:
2016-08-10 18:09:08,031 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:09:08,032 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:09:08,032 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:08,032 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:08,032 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:09:08,032 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:08,032 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:08,033 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:09:08,033 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:09:08,033 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:08,033 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:08,033 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:09:08,034 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:08,034 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:08,034 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:09:08,035 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:09:08,035 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:09:08,035 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:08,036 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1779927454530218827.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2706591163641559884.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1226589457701676156.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile799875567383887550.txt
2016-08-10 18:09:08,036 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:08,044 INFO  encryption.Paillier  [] - Parameters = p = 1855212743 q = -1653735177 N = -1181215743 NSquared = 885008385 lambdaN = 1456136994 bitLength = 384
2016-08-10 18:09:08,045 INFO  encryption.Paillier  [] - Parameters = p = 1855212743 q = -1653735177 N = -1181215743 NSquared = 885008385 lambdaN = 1456136994 bitLength = 384
2016-08-10 18:09:08,045 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:08,908 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:09:08,909 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:09,032 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:09,083 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:09,083 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:09:09,085 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:09,087 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:09,089 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:09,091 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:09,092 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:09,094 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:09:09,096 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:09:09,098 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:09:09,100 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:09,100 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:09,103 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:09,103 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:09,193 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:09,197 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:09,197 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:09,201 INFO  utils.BaseTests    [] - results:
2016-08-10 18:09:09,202 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:09:09,202 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:09:09,202 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:09,202 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:09,202 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:09:09,202 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:09,203 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:09,203 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:09:09,203 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:09:09,203 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:09,203 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:09,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:09:09,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:09,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:09,204 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:09:09,205 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:09:09,205 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:09:09,206 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:09,206 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5424495101571992374.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7720874653764515534.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5134559546658446713.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3532258916467312544.txt
2016-08-10 18:09:09,207 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:09,219 INFO  encryption.Paillier  [] - Parameters = p = -1149600807 q = 1342312859 N = 1830053219 NSquared = 1302283337 lambdaN = 818670584 bitLength = 384
2016-08-10 18:09:09,219 INFO  encryption.Paillier  [] - Parameters = p = -1149600807 q = 1342312859 N = 1830053219 NSquared = 1302283337 lambdaN = 818670584 bitLength = 384
2016-08-10 18:09:09,219 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:10,072 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:09:10,072 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:10,196 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:10,242 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:10,243 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:09:10,244 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:10,247 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:10,249 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:10,251 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:10,253 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:10,254 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:09:10,256 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:09:10,258 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:09:10,265 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:10,265 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:10,268 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:10,269 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:10,355 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:10,360 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:10,360 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:10,361 INFO  utils.BaseTests    [] - results:
2016-08-10 18:09:10,361 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:09:10,361 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:09:10,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:10,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:10,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:09:10,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:10,363 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:10,363 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:09:10,363 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:09:10,363 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:10,364 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:10,364 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:09:10,364 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:10,364 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:10,364 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:09:10,365 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:09:10,365 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:09:10,365 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:10,366 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7105909740074865501.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2998893662162407461.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse401012043079757017.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5081995896759365754.txt
2016-08-10 18:09:10,366 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:10,375 INFO  encryption.Paillier  [] - Parameters = p = -886292941 q = -542207831 N = -1227112533 NSquared = -1575838663 lambdaN = 100694120 bitLength = 384
2016-08-10 18:09:10,375 INFO  encryption.Paillier  [] - Parameters = p = -886292941 q = -542207831 N = -1227112533 NSquared = -1575838663 lambdaN = 100694120 bitLength = 384
2016-08-10 18:09:10,375 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:11,223 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:09:11,223 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:11,343 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:11,395 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:11,395 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:09:11,397 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:11,398 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:11,400 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:11,403 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:11,404 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:11,405 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:09:11,406 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:09:11,408 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:09:11,409 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:11,410 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:11,412 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:11,412 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:11,492 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:11,497 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:11,497 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:11,499 INFO  utils.BaseTests    [] - results:
2016-08-10 18:09:11,499 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:09:11,500 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-10 18:09:11,500 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:11,500 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:11,500 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:09:11,500 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:11,500 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:11,501 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:09:11,501 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:09:11,501 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:11,501 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:11,501 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:09:11,502 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:11,502 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:11,502 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-10 18:09:11,503 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-10 18:09:11,503 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-10 18:09:11,503 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:11,504 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1241323646417055685.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7190481756006250547.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2709538306197411241.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7178186574067005329.txt
2016-08-10 18:09:11,504 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:11,514 INFO  encryption.Paillier  [] - Parameters = p = -1314510849 q = -1929764137 N = -958302935 NSquared = -1817149295 lambdaN = 380995342 bitLength = 384
2016-08-10 18:09:11,514 INFO  encryption.Paillier  [] - Parameters = p = -1314510849 q = -1929764137 N = -958302935 NSquared = -1817149295 lambdaN = 380995342 bitLength = 384
2016-08-10 18:09:11,514 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:11,931 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:09:11,932 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:12,043 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:12,095 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:12,095 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:09:12,096 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-10 18:09:12,097 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-10 18:09:12,098 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-10 18:09:12,099 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-10 18:09:12,100 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-10 18:09:12,101 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-10 18:09:12,102 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:09:12,103 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-10 18:09:12,104 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:12,104 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:12,105 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:12,105 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:12,167 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:12,168 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query queryName = dns-srcip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:12,169 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:12,169 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:12,171 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:12,171 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:09:12,171 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:09:12,171 INFO  utils.BaseTests    [] - correctResults:
2016-08-10 18:09:12,171 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-10 18:09:12,171 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:12,171 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":1.0,"query_name":"dns-srcip-query_1.0","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-10 18:09:12,172 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-10 18:09:12,172 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-10 18:09:12,172 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:12,172 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7930094787290308821.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2331013182756439415.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse166754629949460177.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6789437987635258544.txt
2016-08-10 18:09:12,172 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:12,177 INFO  encryption.Paillier  [] - Parameters = p = -522517529 q = 11265653 N = 619139731 NSquared = 2011988073 lambdaN = 565195804 bitLength = 384
2016-08-10 18:09:12,177 INFO  encryption.Paillier  [] - Parameters = p = -522517529 q = 11265653 N = 619139731 NSquared = 2011988073 lambdaN = 565195804 bitLength = 384
2016-08-10 18:09:12,177 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:12,571 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:09:12,572 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:12,684 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:12,736 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:12,737 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-10 18:09:12,738 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:09:12,739 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-10 18:09:12,740 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-10 18:09:12,741 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:09:12,741 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-10 18:09:12,742 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-10 18:09:12,743 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:09:12,744 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-10 18:09:12,745 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:12,745 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:12,746 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:12,746 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:12,805 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:12,806 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:12,806 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query queryName = dns-ip-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:12,807 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:12,808 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:12,808 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:12,808 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:12,809 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-10 18:09:12,809 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-10 18:09:12,809 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-10 18:09:12,809 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":1.0,"query_name":"dns-ip-query_1.0","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-10 18:09:12,809 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-10 18:09:12,809 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-10 18:09:12,810 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:12,810 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1317881400520439646.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4535193140590061538.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7706120551813397025.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4638525308512200347.txt
2016-08-10 18:09:12,810 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:12,819 INFO  encryption.Paillier  [] - Parameters = p = -840617943 q = 771201577 N = -2059640687 NSquared = 308613665 lambdaN = -1859390776 bitLength = 384
2016-08-10 18:09:12,819 INFO  encryption.Paillier  [] - Parameters = p = -840617943 q = 771201577 N = -2059640687 NSquared = 308613665 lambdaN = -1859390776 bitLength = 384
2016-08-10 18:09:12,819 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:13,199 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-10 18:09:13,199 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:13,306 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:13,354 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:13,354 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:13,355 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:13,355 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:13,356 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:13,356 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:13,408 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:13,409 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:13,409 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:13,409 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query queryName = dns-nxdomain-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-10 18:09:13,410 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:13,410 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:13,411 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":1.0,"query_name":"dns-nxdomain-query_1.0","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-10 18:09:13,411 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-10 18:09:13,411 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-10 18:09:13,411 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-10 18:09:13,412 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7307393774535911011.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7889450273520704743.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3758068666418734343.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4026255774651622790.txt
2016-08-10 18:09:13,412 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:13,416 INFO  encryption.Paillier  [] - Parameters = p = -909959083 q = -1801069427 N = -888481071 NSquared = 1230806689 lambdaN = 867706836 bitLength = 384
2016-08-10 18:09:13,416 INFO  encryption.Paillier  [] - Parameters = p = -909959083 q = -1801069427 N = -888481071 NSquared = 1230806689 lambdaN = 867706836 bitLength = 384
2016-08-10 18:09:13,416 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-10 18:09:14,274 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-10 18:09:14,275 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-10 18:09:14,275 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-10 18:09:14,392 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-10 18:09:14,442 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-10 18:09:14,442 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-10 18:09:14,444 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:14,447 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:14,450 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:14,451 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:14,453 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-10 18:09:14,455 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-10 18:09:14,456 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-10 18:09:14,458 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-10 18:09:14,460 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-10 18:09:14,461 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-10 18:09:14,463 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-10 18:09:14,463 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-10 18:09:14,560 INFO  wideskies.QueryInfo  [] - queryNum = 1.0 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query queryName = dns-hostname-query_1.0 paillierBitSize = 384 useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-10 18:09:14,564 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-10 18:09:14,564 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-10 18:09:14,566 INFO  utils.BaseTests    [] - results:
2016-08-10 18:09:14,566 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-10 18:09:14,566 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:14,566 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:14,566 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-10 18:09:14,566 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:14,567 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-10 18:09:14,567 INFO  utils.BaseTests    [] - correctResults: 
2016-08-10 18:09:14,567 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-10 18:09:14,567 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:14,567 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:14,567 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-10 18:09:14,567 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:14,567 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":1.0,"query_name":"dns-hostname-query_1.0","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-10 18:09:14,568 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
