2016-08-26 20:32:41,302 INFO  encryption.Paillier  [] - testBit false

2016-08-26 20:32:51,598 INFO  encryption.Paillier  [] - testBit true

2016-08-26 20:32:51,601 INFO  encryption.Paillier  [] - Parameters = p = -1900347923 q = 1019075753 N = -274576011 NSquared = -1786538119 lambdaN = -307355928 bitLength = 4753
2016-08-26 20:32:52,021 INFO  general.PaillierTest  [] - encM1 = 1519719177 encM2 = -1360544342
2016-08-26 20:32:52,436 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:32:52,650 INFO  general.PaillierTest  [] - encM1_times_encM2 = 356709338 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:32:52,650 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-26 20:32:52,650 INFO  general.PaillierTest  [] - i = 0
2016-08-26 20:32:52,655 INFO  encryption.Paillier  [] - Parameters = p = 992684203 q = -858117951 N = 1065509099 NSquared = 1029511097 lambdaN = -1141327424 bitLength = 201
2016-08-26 20:32:52,655 INFO  general.PaillierTest  [] - encM1 = -657385075 encM2 = -1109753129
2016-08-26 20:32:52,655 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:32:52,656 INFO  general.PaillierTest  [] - encM1_times_encM2 = -247736284 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:32:52,887 INFO  encryption.Paillier  [] - Parameters = p = 1278930907 q = 306472241 N = -199929877 NSquared = 763421113 lambdaN = 1254817136 bitLength = 3072
2016-08-26 20:32:53,003 INFO  general.PaillierTest  [] - encM1 = -102198408 encM2 = 1726996248
2016-08-26 20:32:53,114 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:32:53,175 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1495201817 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:33:05,003 INFO  encryption.Paillier  [] - Parameters = p = -209580667 q = -1057059705 N = -1292903133 NSquared = 1381987017 lambdaN = 2134352268 bitLength = 4812
2016-08-26 20:33:05,418 INFO  general.PaillierTest  [] - encM1 = -526161537 encM2 = -1044315894
2016-08-26 20:33:05,858 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:33:06,076 INFO  general.PaillierTest  [] - encM1_times_encM2 = -459436743 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:33:06,076 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-26 20:33:06,077 INFO  general.PaillierTest  [] - i = 0
2016-08-26 20:33:06,085 INFO  encryption.Paillier  [] - testBit true
 N = 10110110000010111100000000110001100010110011101110010111111010100010001110100101101000001000100010010011001001101011100011100101101010110110101101001000010100101001000010101110110011100110110101101111
2016-08-26 20:33:06,085 INFO  encryption.Paillier  [] - Parameters = p = -1911392659 q = -1571456565 N = -1362203281 NSquared = 829142561 lambdaN = 1060322972 bitLength = 201
2016-08-26 20:33:06,086 INFO  general.PaillierTest  [] - encM1 = 1896776730 encM2 = 1767136194
2016-08-26 20:33:06,086 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:33:06,086 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2011740526 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:33:08,269 INFO  encryption.Paillier  [] - testBit true

2016-08-26 20:33:08,271 INFO  encryption.Paillier  [] - Parameters = p = -1639827485 q = 537172229 N = -365051281 NSquared = 680684577 lambdaN = -2024549652 bitLength = 3072
2016-08-26 20:33:08,383 INFO  general.PaillierTest  [] - encM1 = 1934156036 encM2 = -1540169093
2016-08-26 20:33:08,490 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:33:08,547 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1264302156 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:33:33,617 INFO  encryption.Paillier  [] - testBit false

2016-08-26 20:33:43,049 INFO  encryption.Paillier  [] - testBit false

2016-08-26 20:34:31,638 INFO  encryption.Paillier  [] - testBit false

2016-08-26 20:35:29,719 INFO  encryption.Paillier  [] - testBit false

2016-08-26 20:36:21,969 INFO  encryption.Paillier  [] - testBit true

2016-08-26 20:36:21,977 INFO  encryption.Paillier  [] - Parameters = p = 1127973887 q = 1244809431 N = -1310092503 NSquared = -415621999 lambdaN = 102015246 bitLength = 6881
2016-08-26 20:36:23,212 INFO  general.PaillierTest  [] - encM1 = 1341165146 encM2 = 1711301260
2016-08-26 20:36:24,414 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:36:25,018 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1052956441 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:36:25,018 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-26 20:36:25,018 INFO  general.PaillierTest  [] - i = 0
2016-08-26 20:36:25,022 INFO  encryption.Paillier  [] - Parameters = p = -568161503 q = -17907439 N = -505602511 NSquared = 1177126241 lambdaN = -800277216 bitLength = 201
2016-08-26 20:36:25,022 INFO  general.PaillierTest  [] - encM1 = 823088887 encM2 = 810194678
2016-08-26 20:36:25,022 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:36:25,023 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1757630991 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:36:27,530 INFO  encryption.Paillier  [] - Parameters = p = 733060247 q = 1370508865 N = -1533098921 NSquared = 1777948049 lambdaN = 47021376 bitLength = 3072
2016-08-26 20:36:27,645 INFO  general.PaillierTest  [] - encM1 = 1124886128 encM2 = -1852367903
2016-08-26 20:36:27,759 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:36:27,811 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1615690186 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:36:29,828 INFO  encryption.Paillier  [] - Parameters = p = -75674021 q = 1749109559 N = -1694794099 NSquared = 185407913 lambdaN = 1586112042 bitLength = 4017
2016-08-26 20:36:30,087 INFO  general.PaillierTest  [] - encM1 = 1198313712 encM2 = 1672401513
2016-08-26 20:36:30,344 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:36:30,485 INFO  general.PaillierTest  [] - encM1_times_encM2 = 69208761 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:36:30,485 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-26 20:36:30,485 INFO  general.PaillierTest  [] - i = 0
2016-08-26 20:36:30,488 INFO  encryption.Paillier  [] - testBit true
 N = 10010111110011110110000000010000100101000001100000110011111010110001101010010011001100000100110111011001011111110011100000101001011011000010010100011011110110100011001011011111001011000001011110101111
2016-08-26 20:36:30,488 INFO  encryption.Paillier  [] - Parameters = p = 971744455 q = -1601815079 N = -550758481 NSquared = 140044705 lambdaN = 1444874456 bitLength = 201
2016-08-26 20:36:30,488 INFO  general.PaillierTest  [] - encM1 = 979610752 encM2 = 844017867
2016-08-26 20:36:30,489 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:36:30,489 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1278707003 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:36:36,475 INFO  encryption.Paillier  [] - testBit false
 N = 110001011000011011110110010101011110111001110010001001111000111011100001011001000010010001111100000111010010000001011010101110010101111101100110010000101110101010010111110101111010001010111001010001101111000001111100001101011100100101111110010001101011111101011001110100001101011100110001111010111000000001100000011100111001010001010011001010001001100001101000110011101000100000110101110110101100111111100100001001100010000001000101111001110100101101000000001111111111001010111011111001011100010110110011001001101110110000100001010101000001100100111000100100001111110111110001000110100001001111001000010100110101001110110011101101000110010111000000100000000100000001000110111000000010001010011010110110011001111000001011010011110011101011111111110011000101000000001101000100010111100010000101011110010001110101000110011001010101110011110110100011010111010101010010101010110011000000100100000100011100111001110010010110101100001110010100111111101000010111111010001001000011000001100111001011000001000101001010100111100010101010010111000111000100111110110001100110001101111010101011101110110001110101011000010100000010101000001110000110001010101100100010110101101111110000110100110000010001001010100100101110110110110001101000011001110010111101010010101011011110001010111011100001111001001101110110101111001001110111110011110011001110101011011110111110110100100101000000001001111110111100001010011001010000111010100110111010011011110011111010111100100100001010010011111110101000001010010001001110110101000111001000110001011011010100110011000011010111010010001100101001100111000101001110010100111001000010110011000110101101010000011110111101000110001101010100010011110101100001111110110110011111011010101100111110111000101010000110010110111111111010110011101101010001010110100101000111101011101100111100111111101001010000100111110110110001100011110010011101110111110010001101011101110000101110111000011101010010001011001011100010011000110010111100110001111110000111011011111111000000011010011001101110101001110110010110100100000011010110100101110010001100000111010000010010110111000111101101110000001111010010001000000100101001000001110010011111101111101111010011000101010110110011000011000011011001100110010101111001101000001010101011110100001101010111010011100110101011111010111010001100110101010001000000010001101011011000111100101000101111101111011111001011110001100100110110110000000011011101011000111000110100101001101110110110110111001101101100110110011000010001010010100000011111111011110110011001111000001101001110000100011101101001000010101001000011110110110000000100000000110000110111111111111101100101011010110011101101010010000110001111011001111010111100010100110110100011011101010110001000011100010110100000101011011010100000010010100001001100011001001000010000011111000111011000000000111101001000100011010110011001101111001101000100100100010111101011100111001011110100100111001010111110011100011111001001101110001100101100000011011001111101111011001010010101011111011001110000101111101011111110011010001111011100101011010010111010110001110010011011011111001011
2016-08-26 20:36:38,934 INFO  encryption.Paillier  [] - testBit true

2016-08-26 20:36:38,936 INFO  encryption.Paillier  [] - Parameters = p = 913954081 q = -1669799727 N = 392945649 NSquared = 1163641057 lambdaN = 608670368 bitLength = 3072
2016-08-26 20:36:39,053 INFO  general.PaillierTest  [] - encM1 = 1239577684 encM2 = -34126241
2016-08-26 20:36:39,169 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:36:39,222 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1216268010 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:36:47,078 INFO  encryption.Paillier  [] - testBit true

2016-08-26 20:36:47,082 INFO  encryption.Paillier  [] - Parameters = p = -270760597 q = 1807501727 N = -1885970315 NSquared = -478939783 lambdaN = -1711355722 bitLength = 3915
2016-08-26 20:36:47,319 INFO  general.PaillierTest  [] - encM1 = 2035983027 encM2 = 1555006458
2016-08-26 20:36:47,552 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:36:47,670 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2054035588 multDecrypt = 7 m1_plus_m2 = 7
2016-08-26 20:36:47,671 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-26 20:36:47,677 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-26 20:36:47,677 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-26 20:36:47,678 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-26 20:36:47,681 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-26 20:36:47,682 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-26 20:36:47,683 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-26 20:36:47,685 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-26 20:36:47,686 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-26 20:36:47,686 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-26 20:36:47,686 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-26 20:36:47,686 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-26 20:36:47,692 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-26 20:36:47,693 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-26 20:36:47,693 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-26 20:36:47,695 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-26 20:36:47,695 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-26 20:36:47,696 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-26 20:36:47,696 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-26 20:36:47,697 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-26 20:36:48,012 INFO  utils.Inputs       [] - StopList file being created
2016-08-26 20:36:48,015 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile7748648104466917096.tmp
2016-08-26 20:36:48,016 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile7748648104466917096.tmp
2016-08-26 20:36:48,017 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8724526729035142903.xml
2016-08-26 20:36:48,061 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-26 20:36:48,061 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8724526729035142903.xml hdfs = false
2016-08-26 20:36:48,061 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8724526729035142903.xml
2016-08-26 20:36:48,064 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,065 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-26 20:36:48,066 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-26 20:36:48,066 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,066 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,067 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,067 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,067 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,067 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,067 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8724526729035142903.xml hdfs = false
2016-08-26 20:36:48,067 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8724526729035142903.xml
2016-08-26 20:36:48,070 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,070 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-26 20:36:48,070 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-26 20:36:48,070 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,070 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,071 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,071 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,071 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,071 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,071 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-26 20:36:48,072 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml
2016-08-26 20:36:48,072 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml
2016-08-26 20:36:48,073 INFO  utils.TestUtils    [] - elementName = date
2016-08-26 20:36:48,073 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-26 20:36:48,073 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-26 20:36:48,073 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-26 20:36:48,074 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-26 20:36:48,074 INFO  utils.TestUtils    [] - elementName = ip
2016-08-26 20:36:48,074 INFO  utils.TestUtils    [] - filterName = qname
2016-08-26 20:36:48,075 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-26 20:36:48,075 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4653112731946728619.xml
2016-08-26 20:36:48,075 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4653112731946728619.xml
2016-08-26 20:36:48,076 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-26 20:36:48,076 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-26 20:36:48,077 INFO  utils.TestUtils    [] - elementName = ip
2016-08-26 20:36:48,077 INFO  utils.TestUtils    [] - filterName = qname
2016-08-26 20:36:48,078 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-26 20:36:48,078 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2880321531346826346.xml
2016-08-26 20:36:48,078 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4653112731946728619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2880321531346826346.xml
2016-08-26 20:36:48,079 INFO  utils.TestUtils    [] - elementName = qname
2016-08-26 20:36:48,079 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-26 20:36:48,079 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-26 20:36:48,079 INFO  utils.TestUtils    [] - filterName = qname
2016-08-26 20:36:48,081 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-26 20:36:48,081 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7287790562313372447.xml
2016-08-26 20:36:48,081 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4653112731946728619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2880321531346826346.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7287790562313372447.xml
2016-08-26 20:36:48,082 INFO  utils.TestUtils    [] - elementName = qname
2016-08-26 20:36:48,082 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-26 20:36:48,082 INFO  utils.TestUtils    [] - elementName = ip
2016-08-26 20:36:48,083 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-26 20:36:48,083 INFO  utils.TestUtils    [] - filterName = ip
2016-08-26 20:36:48,084 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-26 20:36:48,084 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3218698896958824267.xml
2016-08-26 20:36:48,084 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4653112731946728619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2880321531346826346.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7287790562313372447.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3218698896958824267.xml
2016-08-26 20:36:48,085 INFO  utils.TestUtils    [] - elementName = qname
2016-08-26 20:36:48,086 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-26 20:36:48,086 INFO  utils.TestUtils    [] - elementName = ip
2016-08-26 20:36:48,089 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-26 20:36:48,089 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml
2016-08-26 20:36:48,090 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml
2016-08-26 20:36:48,091 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,091 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-26 20:36:48,092 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,092 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-26 20:36:48,092 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-26 20:36:48,092 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-26 20:36:48,092 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,092 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-26 20:36:48,093 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,093 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-26 20:36:48,093 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,093 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-26 20:36:48,093 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,093 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-26 20:36:48,093 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,093 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-26 20:36:48,094 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-26 20:36:48,294 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-26 20:36:48,517 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4653112731946728619.xml
2016-08-26 20:36:48,518 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4653112731946728619.xml
2016-08-26 20:36:48,519 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,520 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-26 20:36:48,520 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,520 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-26 20:36:48,520 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,521 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-26 20:36:48,521 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,521 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-26 20:36:48,521 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,521 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-26 20:36:48,521 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-26 20:36:48,553 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2880321531346826346.xml
2016-08-26 20:36:48,553 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2880321531346826346.xml
2016-08-26 20:36:48,555 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,555 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-26 20:36:48,555 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,556 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-26 20:36:48,556 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,556 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-26 20:36:48,556 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,556 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-26 20:36:48,557 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,557 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-26 20:36:48,557 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-26 20:36:48,583 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7287790562313372447.xml
2016-08-26 20:36:48,583 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7287790562313372447.xml
2016-08-26 20:36:48,585 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,586 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-26 20:36:48,586 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,586 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-26 20:36:48,586 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,587 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-26 20:36:48,587 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,587 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-26 20:36:48,587 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,587 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-26 20:36:48,588 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-26 20:36:48,588 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-26 20:36:48,618 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3218698896958824267.xml
2016-08-26 20:36:48,618 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3218698896958824267.xml
2016-08-26 20:36:48,620 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,622 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-26 20:36:48,622 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,622 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-26 20:36:48,623 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,623 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-26 20:36:48,623 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,623 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-26 20:36:48,623 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,624 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-26 20:36:48,624 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml
2016-08-26 20:36:48,624 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file400858279882813456.xml
2016-08-26 20:36:48,626 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,626 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-26 20:36:48,627 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,627 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-26 20:36:48,627 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-26 20:36:48,628 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-26 20:36:48,628 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,628 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-26 20:36:48,628 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,629 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-26 20:36:48,629 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,629 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-26 20:36:48,629 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,629 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-26 20:36:48,630 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,630 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-26 20:36:48,630 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-26 20:36:48,661 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4653112731946728619.xml
2016-08-26 20:36:48,662 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4653112731946728619.xml
2016-08-26 20:36:48,663 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,664 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-26 20:36:48,664 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,664 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-26 20:36:48,664 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,664 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-26 20:36:48,665 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,665 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-26 20:36:48,665 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,665 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-26 20:36:48,665 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-26 20:36:48,691 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2880321531346826346.xml
2016-08-26 20:36:48,691 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2880321531346826346.xml
2016-08-26 20:36:48,693 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,693 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-26 20:36:48,693 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,693 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-26 20:36:48,694 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,694 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-26 20:36:48,694 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,694 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-26 20:36:48,694 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,695 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-26 20:36:48,695 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-26 20:36:48,722 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7287790562313372447.xml
2016-08-26 20:36:48,722 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file7287790562313372447.xml
2016-08-26 20:36:48,724 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,725 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-26 20:36:48,725 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,725 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-26 20:36:48,725 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,725 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-26 20:36:48,726 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,726 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-26 20:36:48,726 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,726 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-26 20:36:48,727 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-26 20:36:48,727 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-26 20:36:48,752 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3218698896958824267.xml
2016-08-26 20:36:48,753 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file3218698896958824267.xml
2016-08-26 20:36:48,755 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-26 20:36:48,755 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-26 20:36:48,755 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-26 20:36:48,755 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-26 20:36:48,756 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-26 20:36:48,756 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-26 20:36:48,756 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,756 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-26 20:36:48,756 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-26 20:36:48,757 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-26 20:36:48,771 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-26 20:36:48,773 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:48,775 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2955250252226418846.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5882269259524939965.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5363829581912889320.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4913985929807488339.txt
2016-08-26 20:36:48,778 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-26 20:36:48,790 INFO  encryption.Paillier  [] - Parameters = p = -268330055 q = -349048739 N = 1409024565 NSquared = -1235427591 lambdaN = 506600840 bitLength = 384
2016-08-26 20:36:48,790 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:49,646 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-26 20:36:49,651 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:49,878 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:49,979 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:49,980 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-26 20:36:49,988 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:49,991 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:49,996 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:49,999 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:50,002 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:50,005 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-26 20:36:50,007 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-26 20:36:50,011 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-26 20:36:50,014 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:50,015 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:50,024 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:50,025 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:50,171 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:50,171 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:50,179 INFO  utils.BaseTests    [] - results:
2016-08-26 20:36:50,179 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-26 20:36:50,180 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-26 20:36:50,180 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:50,180 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:50,180 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-26 20:36:50,181 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:50,181 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:50,181 INFO  utils.BaseTests    [] - correctResults: 
2016-08-26 20:36:50,181 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-26 20:36:50,182 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:50,182 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:50,182 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-26 20:36:50,182 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:50,182 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:50,183 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-26 20:36:50,184 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-26 20:36:50,184 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-26 20:36:50,184 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:50,185 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7630795716960916934.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3016379272657945625.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6564806889007538504.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7242273585885433754.txt
2016-08-26 20:36:50,185 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-26 20:36:50,194 INFO  encryption.Paillier  [] - Parameters = p = -2090719639 q = 698609967 N = -888609209 NSquared = -845961295 lambdaN = 83916744 bitLength = 384
2016-08-26 20:36:50,195 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:50,704 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-26 20:36:50,705 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:50,843 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:50,917 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:50,919 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-26 20:36:50,921 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-26 20:36:50,924 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-26 20:36:50,925 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-26 20:36:50,928 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-26 20:36:50,930 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-26 20:36:50,932 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-26 20:36:50,935 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-26 20:36:50,938 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-26 20:36:50,940 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:50,940 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:50,942 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:50,942 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:51,009 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:51,009 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:51,011 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:51,011 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-26 20:36:51,011 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-26 20:36:51,011 INFO  utils.BaseTests    [] - correctResults:
2016-08-26 20:36:51,012 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":b0f973ee-3776-484d-a64e-e8cee5ce8698,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-26 20:36:51,012 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":b0f973ee-3776-484d-a64e-e8cee5ce8698,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:51,012 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":b0f973ee-3776-484d-a64e-e8cee5ce8698,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-26 20:36:51,012 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-26 20:36:51,012 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-26 20:36:51,013 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:51,013 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7091403654699260357.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3659693501287181227.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5576705799602465757.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile9148907656379904493.txt
2016-08-26 20:36:51,013 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-26 20:36:51,028 INFO  encryption.Paillier  [] - Parameters = p = -284526805 q = -1960086499 N = 795343839 NSquared = -2025780159 lambdaN = 1519978572 bitLength = 384
2016-08-26 20:36:51,029 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:51,414 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-26 20:36:51,414 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:51,528 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:51,578 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:51,578 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-26 20:36:51,580 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-26 20:36:51,581 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-26 20:36:51,585 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-26 20:36:51,587 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-26 20:36:51,588 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-26 20:36:51,590 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-26 20:36:51,592 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-26 20:36:51,594 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-26 20:36:51,595 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:51,595 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:51,597 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:51,597 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:51,660 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:51,660 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:51,662 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:51,662 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:51,662 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:51,662 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-26 20:36:51,662 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-26 20:36:51,663 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-26 20:36:51,664 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-26 20:36:51,664 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-26 20:36:51,664 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:51,665 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8108726240116624493.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7550372926130670460.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5169918400383370417.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6719310259233349248.txt
2016-08-26 20:36:51,665 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-26 20:36:51,670 INFO  encryption.Paillier  [] - Parameters = p = 1869646569 q = -1331153141 N = 1352009475 NSquared = 397748745 lambdaN = 406758024 bitLength = 384
2016-08-26 20:36:51,670 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:52,045 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-26 20:36:52,046 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:52,155 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:52,207 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:52,208 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:52,211 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:52,212 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:52,213 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:52,213 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:52,273 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:52,273 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:52,274 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-26 20:36:52,274 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-26 20:36:52,274 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-26 20:36:52,275 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:52,275 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7474194518702928182.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3129686365974567672.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6044041940223964392.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6588908762154929753.txt
2016-08-26 20:36:52,275 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-26 20:36:52,280 INFO  encryption.Paillier  [] - Parameters = p = 1848663083 q = -255889375 N = 1889776011 NSquared = 841187705 lambdaN = -2097983264 bitLength = 384
2016-08-26 20:36:52,280 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:53,082 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-26 20:36:53,083 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:53,208 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:53,261 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:53,261 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-26 20:36:53,263 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:53,265 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:53,266 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:53,268 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:53,269 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:53,271 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-26 20:36:53,276 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-26 20:36:53,278 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-26 20:36:53,280 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:53,280 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:53,285 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:53,285 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:53,374 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:53,375 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:53,377 INFO  utils.BaseTests    [] - results:
2016-08-26 20:36:53,377 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-26 20:36:53,377 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-26 20:36:53,377 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:53,377 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:53,378 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-26 20:36:53,378 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:53,378 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:53,378 INFO  utils.BaseTests    [] - correctResults: 
2016-08-26 20:36:53,378 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-26 20:36:53,378 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:53,378 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:53,379 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-26 20:36:53,379 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:53,379 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:53,379 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-26 20:36:53,380 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-26 20:36:53,380 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-26 20:36:53,380 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:53,380 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2589622554649106791.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7964139617265389239.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5324324172004418231.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile304657410404080828.txt
2016-08-26 20:36:53,381 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-26 20:36:53,392 INFO  encryption.Paillier  [] - Parameters = p = 1224427513 q = 2037497819 N = 1603426563 NSquared = -530639351 lambdaN = 1318234264 bitLength = 384
2016-08-26 20:36:53,393 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:54,204 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-26 20:36:54,204 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:54,321 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:54,377 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:54,377 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-26 20:36:54,378 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:54,380 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:54,382 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:54,383 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:54,384 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:54,386 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-26 20:36:54,388 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-26 20:36:54,389 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-26 20:36:54,391 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:54,391 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:54,394 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:54,394 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:54,483 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:54,483 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:54,485 INFO  utils.BaseTests    [] - results:
2016-08-26 20:36:54,485 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-26 20:36:54,485 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-26 20:36:54,485 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:54,486 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:54,486 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-26 20:36:54,486 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:54,486 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:54,486 INFO  utils.BaseTests    [] - correctResults: 
2016-08-26 20:36:54,486 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-26 20:36:54,486 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:54,487 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:54,487 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-26 20:36:54,487 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:54,487 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:54,487 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-26 20:36:54,488 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-26 20:36:54,488 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-26 20:36:54,488 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:54,489 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2462804903384809956.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query6984791286099431709.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4832861910787635307.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1807919380098580319.txt
2016-08-26 20:36:54,489 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-26 20:36:54,495 INFO  encryption.Paillier  [] - Parameters = p = 133787443 q = 1796645013 N = 1762629807 NSquared = -846051423 lambdaN = -27967108 bitLength = 384
2016-08-26 20:36:54,496 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:54,873 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-26 20:36:54,873 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:54,985 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:55,037 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:55,037 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-26 20:36:55,039 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:55,040 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:55,042 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:55,045 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:55,046 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:55,048 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-26 20:36:55,050 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-26 20:36:55,052 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-26 20:36:55,054 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:55,054 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:55,057 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:55,057 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:55,149 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:55,149 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:55,151 INFO  utils.BaseTests    [] - results:
2016-08-26 20:36:55,151 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-26 20:36:55,151 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-26 20:36:55,151 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:55,151 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:55,151 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-26 20:36:55,151 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:55,152 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:55,152 INFO  utils.BaseTests    [] - correctResults: 
2016-08-26 20:36:55,152 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-26 20:36:55,152 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:55,152 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:55,154 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-26 20:36:55,154 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:55,154 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:55,154 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-26 20:36:55,154 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-26 20:36:55,155 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-26 20:36:55,155 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:55,155 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1177676569737240744.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1987769996439494635.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3115232407614705367.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6086438851671380472.txt
2016-08-26 20:36:55,155 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-26 20:36:55,160 INFO  encryption.Paillier  [] - Parameters = p = -208695815 q = -1471034915 N = 1294930165 NSquared = -1659532679 lambdaN = -330076600 bitLength = 384
2016-08-26 20:36:55,160 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:55,987 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-26 20:36:55,988 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:56,103 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:56,153 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:56,153 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-26 20:36:56,155 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:56,156 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:56,157 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:56,159 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:56,160 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:56,161 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-26 20:36:56,163 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-26 20:36:56,164 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-26 20:36:56,166 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:56,166 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:56,168 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:56,168 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:56,259 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:56,259 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:56,261 INFO  utils.BaseTests    [] - results:
2016-08-26 20:36:56,261 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-26 20:36:56,261 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-26 20:36:56,261 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:56,262 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:56,262 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-26 20:36:56,262 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:56,262 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:56,262 INFO  utils.BaseTests    [] - correctResults: 
2016-08-26 20:36:56,263 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-26 20:36:56,263 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:56,263 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:56,263 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-26 20:36:56,263 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:56,263 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:56,264 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-26 20:36:56,264 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-26 20:36:56,264 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-26 20:36:56,264 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:56,265 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5121197071319276962.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7580799555840438653.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5778195549717224265.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4052077257237699727.txt
2016-08-26 20:36:56,265 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-26 20:36:56,289 INFO  encryption.Paillier  [] - Parameters = p = 226995575 q = -1185392931 N = -498157125 NSquared = -525087079 lambdaN = -1917363532 bitLength = 384
2016-08-26 20:36:56,289 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:56,702 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-26 20:36:56,703 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:56,809 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:56,862 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:56,862 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-26 20:36:56,863 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-26 20:36:56,864 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-26 20:36:56,865 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-26 20:36:56,868 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-26 20:36:56,869 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-26 20:36:56,871 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-26 20:36:56,872 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-26 20:36:56,873 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-26 20:36:56,874 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:56,874 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:56,875 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:56,875 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:56,935 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:56,935 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:56,936 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:56,936 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-26 20:36:56,936 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-26 20:36:56,936 INFO  utils.BaseTests    [] - correctResults:
2016-08-26 20:36:56,936 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":b0f973ee-3776-484d-a64e-e8cee5ce8698,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-26 20:36:56,937 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":b0f973ee-3776-484d-a64e-e8cee5ce8698,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:56,937 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":b0f973ee-3776-484d-a64e-e8cee5ce8698,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-26 20:36:56,937 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-26 20:36:56,937 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-26 20:36:56,937 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:56,938 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1501254903759941724.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5595551278323628903.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse910131040941787648.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile419718126667876352.txt
2016-08-26 20:36:56,938 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-26 20:36:56,942 INFO  encryption.Paillier  [] - Parameters = p = -1740966623 q = -484085283 N = 568209021 NSquared = -482531063 lambdaN = 253151008 bitLength = 384
2016-08-26 20:36:56,942 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:57,347 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-26 20:36:57,348 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:57,455 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:57,507 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:57,508 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-26 20:36:57,508 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-26 20:36:57,509 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-26 20:36:57,512 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-26 20:36:57,513 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-26 20:36:57,514 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-26 20:36:57,514 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-26 20:36:57,515 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-26 20:36:57,516 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-26 20:36:57,518 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:57,518 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:57,519 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:57,519 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:57,587 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:57,588 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:57,589 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:57,589 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:57,590 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-26 20:36:57,590 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-26 20:36:57,590 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-26 20:36:57,590 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-26 20:36:57,591 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-26 20:36:57,591 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-26 20:36:57,591 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:57,592 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5698225619929790869.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4122858133300930800.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1766367653376978522.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8491469765468999537.txt
2016-08-26 20:36:57,592 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-26 20:36:57,597 INFO  encryption.Paillier  [] - Parameters = p = -1184153717 q = -887582591 N = -254724853 NSquared = 1190366841 lambdaN = -412992640 bitLength = 384
2016-08-26 20:36:57,597 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:57,978 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-26 20:36:57,978 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:58,100 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:58,147 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:58,147 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:58,148 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:58,148 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:58,149 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:58,149 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:58,206 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:58,206 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:58,207 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-26 20:36:58,207 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-26 20:36:58,207 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-26 20:36:58,207 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-26 20:36:58,207 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7657424284452558435.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8305041357961703924.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3452912099486614021.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8318073978660917232.txt
2016-08-26 20:36:58,208 INFO  wideskies.QueryInfo  [] - identifier = b0f973ee-3776-484d-a64e-e8cee5ce8698 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-26 20:36:58,214 INFO  encryption.Paillier  [] - Parameters = p = -873401227 q = 1658473495 N = -790973821 NSquared = 1670803209 lambdaN = -788023044 bitLength = 384
2016-08-26 20:36:58,214 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-26 20:36:59,020 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-26 20:36:59,020 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-26 20:36:59,020 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-26 20:36:59,125 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-26 20:36:59,174 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-26 20:36:59,174 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-26 20:36:59,176 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:59,178 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:59,180 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:59,181 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:59,183 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-26 20:36:59,184 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-26 20:36:59,186 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-26 20:36:59,189 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-26 20:36:59,191 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-26 20:36:59,191 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-26 20:36:59,194 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-26 20:36:59,194 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-26 20:36:59,284 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-26 20:36:59,284 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-26 20:36:59,286 INFO  utils.BaseTests    [] - results:
2016-08-26 20:36:59,286 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-26 20:36:59,286 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:59,286 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:59,286 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-26 20:36:59,287 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:59,287 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-26 20:36:59,287 INFO  utils.BaseTests    [] - correctResults: 
2016-08-26 20:36:59,287 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-26 20:36:59,287 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:59,287 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:59,287 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-26 20:36:59,287 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:59,287 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"b0f973ee-3776-484d-a64e-e8cee5ce8698","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-26 20:36:59,288 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:09:18,944 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-27 11:09:18,948 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-27 11:09:18,949 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-27 11:09:18,949 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-27 11:09:18,949 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-27 11:09:18,950 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-27 11:09:18,958 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-27 11:09:18,958 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-27 11:09:18,959 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-27 11:09:18,959 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-27 11:09:18,959 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-27 11:09:18,960 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-27 11:09:18,960 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-27 11:09:18,961 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-27 11:09:18,961 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-27 11:09:18,961 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-27 11:09:18,962 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-27 11:09:18,962 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-27 11:09:18,963 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-27 11:09:18,963 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-27 11:09:18,963 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-27 11:09:18,998 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-27 11:09:19,005 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-27 11:09:19,041 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 11:09:19,041 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-27 11:09:19,042 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 11:09:19,042 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-27 11:09:19,042 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 11:09:19,052 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-27 11:09:19,054 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-27 11:09:19,042 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-27 11:09:19,057 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 11:09:19,059 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 11:09:19,060 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 11:09:19,062 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 11:09:19,063 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 11:09:19,064 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:09:19,055 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-27 11:09:19,077 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 11:09:19,079 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-27 11:09:19,079 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 11:09:19,081 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 11:09:19,082 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 11:09:19,085 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner4751739924505351628.xml
2016-08-27 11:09:19,153 INFO  encryption.Paillier  [] - Parameters = p = -1520544991 q = 1550196759 N = -1593600009 NSquared = -1744875439 lambdaN = 1335857760 bitLength = 201
2016-08-27 11:09:19,167 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-27 11:09:19,168 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner4751739924505351628.xml hdfs = false
2016-08-27 11:09:19,169 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner4751739924505351628.xml
2016-08-27 11:09:19,172 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:09:19,174 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:09:19,176 ERROR data.DataSchemaLoader  [] - Caught exception: 
2016-08-27 11:09:19,181 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner4751739924505351628.xml hdfs = false
2016-08-27 11:09:19,182 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner4751739924505351628.xml
2016-08-27 11:09:19,185 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:09:19,185 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:09:19,188 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile1972247492469046957.xml
2016-08-27 11:09:19,192 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile1972247492469046957.xml hdfs = false
2016-08-27 11:09:19,192 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile1972247492469046957.xml
2016-08-27 11:09:19,194 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:09:19,195 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:09:19,196 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:19,197 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:19,198 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:19,199 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6809818410343551211.xml
2016-08-27 11:09:19,202 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6809818410343551211.xml hdfs = false
2016-08-27 11:09:19,203 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6809818410343551211.xml
2016-08-27 11:09:19,205 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:09:19,205 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:09:19,209 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-27 11:09:19,209 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 11:09:19,210 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2051574792632726267.xml
2016-08-27 11:09:19,210 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2051574792632726267.xml
2016-08-27 11:09:19,211 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 11:09:19,212 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 11:09:19,212 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 11:09:19,216 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-27 11:09:19,216 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2051574792632726267.xml
2016-08-27 11:09:19,217 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2051574792632726267.xml
2016-08-27 11:09:19,219 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:19,220 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 11:09:19,220 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 11:09:19,220 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-27 11:09:19,220 ERROR query.QuerySchemaLoader  [] - Caught exception: 
2016-08-27 11:09:19,222 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2051574792632726267.xml
2016-08-27 11:09:19,222 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2051574792632726267.xml
2016-08-27 11:09:19,224 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:19,225 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 11:09:19,225 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 11:09:19,225 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-27 11:09:19,226 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-27 11:09:19,227 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-27 11:09:19,229 INFO  utils.Inputs       [] - StopList file being created
2016-08-27 11:09:19,230 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/stopListFile183545562142334894.tmp
2016-08-27 11:09:19,231 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7893075799268906371.xml
2016-08-27 11:09:19,234 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7893075799268906371.xml hdfs = false
2016-08-27 11:09:19,235 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7893075799268906371.xml
2016-08-27 11:09:19,237 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:09:19,237 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:09:19,238 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:19,238 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:19,238 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:19,241 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:19,242 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 11:09:19,242 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8739598052835827042.xml
2016-08-27 11:09:19,243 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8739598052835827042.xml
2016-08-27 11:09:19,248 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 11:09:19,249 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 11:09:19,249 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 11:09:19,249 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 11:09:19,249 INFO  general.PaillierTest  [] - encM1 = 2090037648 encM2 = 1177758746
2016-08-27 11:09:19,251 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8739598052835827042.xml
2016-08-27 11:09:19,252 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8739598052835827042.xml
2016-08-27 11:09:19,253 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:09:19,256 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:19,256 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 11:09:19,256 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 11:09:19,257 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-27 11:09:19,257 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1601101760 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:09:19,257 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:19,257 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-27 11:09:19,258 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:19,258 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-27 11:09:19,258 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:19,259 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-27 11:09:19,259 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-27 11:09:19,832 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-27 11:09:20,110 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-27 11:09:20,111 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-27 11:09:20,112 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile775787373366562827.xml
2016-08-27 11:09:20,114 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile775787373366562827.xml hdfs = false
2016-08-27 11:09:20,114 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile775787373366562827.xml
2016-08-27 11:09:20,116 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,117 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:09:20,117 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,117 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,117 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,118 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,118 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 11:09:20,119 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3550211420779122887.xml
2016-08-27 11:09:20,119 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3550211420779122887.xml
2016-08-27 11:09:20,120 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 11:09:20,121 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 11:09:20,121 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 11:09:20,121 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 11:09:20,123 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3550211420779122887.xml
2016-08-27 11:09:20,123 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3550211420779122887.xml
2016-08-27 11:09:20,125 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,126 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 11:09:20,126 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 11:09:20,126 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-27 11:09:20,127 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-27 11:09:20,128 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3521178068277740513.xml
2016-08-27 11:09:20,131 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3521178068277740513.xml hdfs = false
2016-08-27 11:09:20,131 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3521178068277740513.xml
2016-08-27 11:09:20,133 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,135 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:09:20,135 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,135 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,136 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,136 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,136 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 11:09:20,137 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1744474714471937369.xml
2016-08-27 11:09:20,137 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1744474714471937369.xml
2016-08-27 11:09:20,139 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 11:09:20,139 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 11:09:20,139 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 11:09:20,140 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 11:09:20,142 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1744474714471937369.xml
2016-08-27 11:09:20,142 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1744474714471937369.xml
2016-08-27 11:09:20,144 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,144 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 11:09:20,144 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 11:09:20,145 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-27 11:09:20,145 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-27 11:09:20,148 INFO  utils.Inputs       [] - StopList file being created
2016-08-27 11:09:20,149 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/stopListFile6862690563603926263.tmp
2016-08-27 11:09:20,149 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/stopListFile6862690563603926263.tmp
2016-08-27 11:09:20,150 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8065712858856945941.xml
2016-08-27 11:09:20,153 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8065712858856945941.xml hdfs = false
2016-08-27 11:09:20,154 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile8065712858856945941.xml
2016-08-27 11:09:20,156 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,157 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 11:09:20,157 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:09:20,157 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,158 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,158 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,158 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,159 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,159 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,159 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-27 11:09:20,160 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1753433378220500893.xml
2016-08-27 11:09:20,160 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1753433378220500893.xml
2016-08-27 11:09:20,161 INFO  utils.TestUtils    [] - elementName = date
2016-08-27 11:09:20,162 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:09:20,162 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:09:20,162 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-27 11:09:20,162 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-27 11:09:20,162 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:09:20,163 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 11:09:20,165 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-27 11:09:20,166 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2924136429767260113.xml
2016-08-27 11:09:20,166 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1753433378220500893.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2924136429767260113.xml
2016-08-27 11:09:20,168 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:09:20,168 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:09:20,168 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:09:20,168 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 11:09:20,170 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-27 11:09:20,170 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8383709939033294819.xml
2016-08-27 11:09:20,171 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1753433378220500893.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2924136429767260113.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8383709939033294819.xml
2016-08-27 11:09:20,172 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:09:20,173 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:09:20,173 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:09:20,173 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 11:09:20,175 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-27 11:09:20,175 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3434667738329352188.xml
2016-08-27 11:09:20,177 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1753433378220500893.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2924136429767260113.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8383709939033294819.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3434667738329352188.xml
2016-08-27 11:09:20,180 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:09:20,181 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:09:20,183 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:09:20,184 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-27 11:09:20,187 INFO  utils.TestUtils    [] - filterName = ip
2016-08-27 11:09:20,190 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-27 11:09:20,191 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file929744022129775437.xml
2016-08-27 11:09:20,192 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1753433378220500893.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2924136429767260113.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8383709939033294819.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3434667738329352188.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file929744022129775437.xml
2016-08-27 11:09:20,193 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:09:20,194 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:09:20,195 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:09:20,197 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1753433378220500893.xml
2016-08-27 11:09:20,197 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1753433378220500893.xml
2016-08-27 11:09:20,199 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,200 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 11:09:20,200 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:09:20,200 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:09:20,201 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:09:20,202 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 11:09:20,204 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,204 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:09:20,205 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,205 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:09:20,205 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,206 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 11:09:20,206 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,206 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 11:09:20,207 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,207 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 11:09:20,207 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 11:09:20,275 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2924136429767260113.xml
2016-08-27 11:09:20,276 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2924136429767260113.xml
2016-08-27 11:09:20,277 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,278 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 11:09:20,278 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:09:20,278 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 11:09:20,278 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,279 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 11:09:20,279 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,279 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 11:09:20,281 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,281 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 11:09:20,282 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 11:09:20,330 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8383709939033294819.xml
2016-08-27 11:09:20,331 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file8383709939033294819.xml
2016-08-27 11:09:20,333 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,334 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 11:09:20,335 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:09:20,335 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:09:20,335 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,335 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:09:20,336 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,336 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:09:20,336 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,336 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:09:20,339 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 11:09:20,376 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3434667738329352188.xml
2016-08-27 11:09:20,377 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3434667738329352188.xml
2016-08-27 11:09:20,379 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,380 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 11:09:20,381 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:09:20,381 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:09:20,382 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,382 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:09:20,382 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,383 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:09:20,383 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,383 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:09:20,383 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-27 11:09:20,383 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-27 11:09:20,413 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file929744022129775437.xml
2016-08-27 11:09:20,414 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file929744022129775437.xml
2016-08-27 11:09:20,416 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:09:20,416 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 11:09:20,417 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:09:20,417 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:09:20,417 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:09:20,417 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:09:20,418 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,418 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:09:20,418 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:09:20,418 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:09:20,423 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:09:20,428 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:20,431 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6007646774485105693.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4621294924582459403.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4636413143952570011.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile100433705998262025.txt
2016-08-27 11:09:20,436 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:09:20,438 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-27 11:09:20,528 INFO  encryption.Paillier  [] - Parameters = p = 1206041613 q = -567101023 N = 268937517 NSquared = 1346531817 lambdaN = 446960672 bitLength = 384
2016-08-27 11:09:20,528 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:21,016 INFO  encryption.Paillier  [] - Parameters = p = 280261855 q = -1497635581 N = -1752311395 NSquared = -1511159223 lambdaN = 2058327370 bitLength = 3072
2016-08-27 11:09:21,162 INFO  general.PaillierTest  [] - encM1 = -422962591 encM2 = -128488915
2016-08-27 11:09:21,311 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:09:21,378 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1710090755 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:09:21,643 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:09:21,644 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:21,950 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:22,074 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:22,074 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:09:22,084 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:22,106 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:22,111 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:22,118 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:22,122 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:22,126 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:09:22,131 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:09:22,135 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:09:22,140 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:22,141 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:22,150 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:22,150 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:22,342 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:22,342 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:22,350 INFO  utils.BaseTests    [] - results:
2016-08-27 11:09:22,350 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:09:22,351 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:09:22,351 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:22,351 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:22,352 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:09:22,352 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:22,352 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:22,353 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:09:22,358 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:09:22,359 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:22,361 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:22,361 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:09:22,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:22,362 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:22,363 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:09:22,364 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:09:22,365 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-27 11:09:22,365 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:22,366 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5345440274948368062.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4719885820043645842.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7563689254488712284.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5613876848199126484.txt
2016-08-27 11:09:22,367 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:09:22,389 INFO  encryption.Paillier  [] - Parameters = p = 706580379 q = -1176432997 N = 1476095193 NSquared = 500027377 lambdaN = 972973906 bitLength = 384
2016-08-27 11:09:22,389 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:22,959 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:09:22,959 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:23,134 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:23,236 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:23,236 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 11:09:23,240 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-27 11:09:23,244 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-27 11:09:23,247 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-27 11:09:23,251 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-27 11:09:23,254 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-27 11:09:23,260 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-27 11:09:23,263 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:09:23,271 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 11:09:23,275 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:23,276 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:23,278 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:23,278 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:23,346 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:23,347 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:23,348 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:23,348 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 11:09:23,349 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 11:09:23,349 INFO  utils.BaseTests    [] - correctResults:
2016-08-27 11:09:23,349 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":d58a26d0-44a6-4971-b4a1-e94d5a0417f3,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 11:09:23,349 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":d58a26d0-44a6-4971-b4a1-e94d5a0417f3,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:23,350 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":d58a26d0-44a6-4971-b4a1-e94d5a0417f3,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 11:09:23,350 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-27 11:09:23,350 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-27 11:09:23,351 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:23,351 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4322778213357101259.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query464656660809228797.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3589305657796522240.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2883118641615173076.txt
2016-08-27 11:09:23,351 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:09:23,371 INFO  encryption.Paillier  [] - Parameters = p = -712462505 q = 1045041011 N = -1345135339 NSquared = 727794617 lambdaN = -838856922 bitLength = 384
2016-08-27 11:09:23,371 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:23,910 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:09:23,911 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:24,048 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:24,100 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:24,100 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-27 11:09:24,102 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:09:24,104 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-27 11:09:24,105 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-27 11:09:24,107 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:09:24,108 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:09:24,110 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-27 11:09:24,113 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 11:09:24,115 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 11:09:24,117 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:24,117 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:24,120 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:24,120 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:24,189 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:24,189 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:24,191 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:24,192 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:24,192 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:24,192 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-27 11:09:24,192 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-27 11:09:24,193 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-27 11:09:24,193 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-27 11:09:24,194 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-27 11:09:24,194 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:24,195 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6442780427837639365.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query921280592896400446.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6020216325369349691.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile33999354075530799.txt
2016-08-27 11:09:24,195 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:09:24,205 INFO  encryption.Paillier  [] - Parameters = p = 612063629 q = -409273075 N = -610933463 NSquared = -1260625775 lambdaN = 870310820 bitLength = 384
2016-08-27 11:09:24,206 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:24,580 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:09:24,580 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:24,706 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:24,760 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:24,761 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:24,762 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:24,762 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:24,763 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:24,764 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:24,823 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:24,823 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:24,824 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-27 11:09:24,825 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-27 11:09:24,825 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:09:24,825 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:24,826 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7867860681676566271.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7109428129921019839.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse684064532236162149.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7530577253689484592.txt
2016-08-27 11:09:24,826 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:09:24,833 INFO  encryption.Paillier  [] - Parameters = p = -2053346603 q = 121501767 N = -576653037 NSquared = 404092777 lambdaN = -1469887748 bitLength = 384
2016-08-27 11:09:24,834 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:25,510 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:09:25,510 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:25,637 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:25,686 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:25,686 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:09:25,688 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:25,690 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:25,691 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:25,693 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:25,694 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:25,696 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:09:25,698 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:09:25,701 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:09:25,704 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:25,704 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:25,710 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:25,710 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:25,792 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:25,792 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:25,794 INFO  utils.BaseTests    [] - results:
2016-08-27 11:09:25,795 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:09:25,795 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:09:25,795 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:25,796 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:25,796 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:09:25,796 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:25,796 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:25,796 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:09:25,796 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:09:25,797 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:25,797 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:25,797 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:09:25,797 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:25,798 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:25,798 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:09:25,799 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:09:25,799 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:09:25,799 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:25,800 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4853913739286476188.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7831142702202287975.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8316213588436687004.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3788972285643721862.txt
2016-08-27 11:09:25,801 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:09:25,808 INFO  encryption.Paillier  [] - Parameters = p = 130147357 q = -165728263 N = -1577372875 NSquared = 506210553 lambdaN = 1762035656 bitLength = 384
2016-08-27 11:09:25,809 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:26,466 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:09:26,466 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:26,595 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:26,648 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:26,648 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:09:26,650 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:26,652 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:26,654 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:26,656 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:26,657 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:26,658 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:09:26,660 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:09:26,662 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:09:26,664 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:26,664 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:26,667 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:26,667 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:26,753 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:26,754 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:26,755 INFO  utils.BaseTests    [] - results:
2016-08-27 11:09:26,755 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:09:26,755 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:09:26,756 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:26,756 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:26,756 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:09:26,756 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:26,756 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:26,756 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:09:26,757 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:09:26,757 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:26,757 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:26,757 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:09:26,757 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:26,757 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:26,757 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:09:26,758 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:09:26,758 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:09:26,758 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:26,759 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier272438992143757057.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8976093455900548842.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5871348561639590665.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2628575130639477387.txt
2016-08-27 11:09:26,759 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:09:26,767 INFO  encryption.Paillier  [] - Parameters = p = 1020668833 q = 372292003 N = -2045435773 NSquared = 2107573001 lambdaN = -1719198304 bitLength = 384
2016-08-27 11:09:26,767 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:27,162 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:09:27,162 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:27,279 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:27,331 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:27,331 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:09:27,333 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:27,334 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:27,336 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:27,337 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:27,339 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:27,340 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:09:27,342 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:09:27,345 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:09:27,348 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:27,348 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:27,352 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:27,352 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:27,438 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:27,438 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:27,443 INFO  utils.BaseTests    [] - results:
2016-08-27 11:09:27,444 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:09:27,444 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:09:27,444 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:27,444 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:27,444 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:09:27,444 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:27,444 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:27,445 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:09:27,445 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:09:27,445 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:27,445 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:27,445 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:09:27,446 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:27,446 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:27,446 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:09:27,447 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:09:27,447 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:09:27,447 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:27,448 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1845659821831714978.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3124867330562195603.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8092599592319885937.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7626939180595205975.txt
2016-08-27 11:09:27,448 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 11:09:27,457 INFO  encryption.Paillier  [] - Parameters = p = -274336131 q = -156563355 N = 2142054225 NSquared = -2021406815 lambdaN = -846558868 bitLength = 384
2016-08-27 11:09:27,457 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:28,104 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:09:28,104 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:28,245 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:28,301 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:28,301 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:09:28,303 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:28,306 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:28,308 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:28,311 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:28,313 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:28,316 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:09:28,321 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:09:28,328 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:09:28,330 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:28,330 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:28,333 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:28,333 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:28,471 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:28,472 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:28,473 INFO  utils.BaseTests    [] - results:
2016-08-27 11:09:28,473 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:09:28,474 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:09:28,474 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:28,474 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:28,474 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:09:28,475 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:28,475 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:28,475 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:09:28,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:09:28,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:28,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:28,476 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:09:28,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:28,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:28,477 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:09:28,478 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:09:28,478 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-27 11:09:28,478 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:28,479 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4190563241127708915.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4822645169426921155.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1316346102074728081.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1370198148087320016.txt
2016-08-27 11:09:28,480 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 11:09:28,538 INFO  encryption.Paillier  [] - Parameters = p = -915670461 q = -453076421 N = 1525218161 NSquared = 667338721 lambdaN = -700501126 bitLength = 384
2016-08-27 11:09:28,538 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:29,019 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:09:29,020 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:29,126 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:29,178 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:29,179 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 11:09:29,180 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-27 11:09:29,181 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-27 11:09:29,182 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-27 11:09:29,183 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-27 11:09:29,184 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-27 11:09:29,185 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-27 11:09:29,186 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:09:29,187 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 11:09:29,188 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:29,188 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:29,189 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:29,189 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:29,246 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:29,246 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:29,247 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:29,247 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 11:09:29,248 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 11:09:29,248 INFO  utils.BaseTests    [] - correctResults:
2016-08-27 11:09:29,248 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":d58a26d0-44a6-4971-b4a1-e94d5a0417f3,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 11:09:29,248 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":d58a26d0-44a6-4971-b4a1-e94d5a0417f3,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:29,248 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":d58a26d0-44a6-4971-b4a1-e94d5a0417f3,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 11:09:29,248 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-27 11:09:29,248 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-27 11:09:29,249 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:29,249 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1768690211718656797.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2500406374409087854.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2640266056868578746.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5333541640411984662.txt
2016-08-27 11:09:29,249 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 11:09:29,260 INFO  encryption.Paillier  [] - Parameters = p = 1808765595 q = -231477337 N = -651667427 NSquared = -781978807 lambdaN = 1033005806 bitLength = 384
2016-08-27 11:09:29,260 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:29,671 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:09:29,671 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:29,776 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:29,824 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:29,824 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-27 11:09:29,825 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:09:29,826 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-27 11:09:29,827 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-27 11:09:29,828 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:09:29,829 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:09:29,829 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-27 11:09:29,830 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 11:09:29,831 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 11:09:29,832 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:29,832 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:29,833 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:29,833 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:29,895 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:29,895 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:29,896 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:29,896 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:29,896 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:09:29,896 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-27 11:09:29,896 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-27 11:09:29,896 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-27 11:09:29,897 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-27 11:09:29,897 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-27 11:09:29,897 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:29,898 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier598482205404693247.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7148450745040925412.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8773566746086825564.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7934429136653768920.txt
2016-08-27 11:09:29,898 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 11:09:29,907 INFO  encryption.Paillier  [] - Parameters = p = -1976816855 q = 1542641681 N = -786729543 NSquared = 489201585 lambdaN = -1804259472 bitLength = 384
2016-08-27 11:09:29,907 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:30,298 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:09:30,298 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:30,403 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:30,451 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:30,451 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:30,452 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:30,452 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:30,453 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:30,453 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:30,503 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:30,503 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:30,504 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-27 11:09:30,504 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-27 11:09:30,504 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:09:30,504 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:09:30,504 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6419897155073830099.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query6196488495927693258.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7027623262915934235.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8222829464384617439.txt
2016-08-27 11:09:30,504 INFO  wideskies.QueryInfo  [] - identifier = d58a26d0-44a6-4971-b4a1-e94d5a0417f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:09:30,519 INFO  encryption.Paillier  [] - Parameters = p = -1454299399 q = -1528705983 N = 1837257017 NSquared = 564731569 lambdaN = 602532800 bitLength = 384
2016-08-27 11:09:30,519 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:09:31,175 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:09:31,176 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:09:31,176 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-27 11:09:31,283 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:09:31,332 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:09:31,332 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:09:31,334 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:31,337 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:31,338 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:31,340 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:31,341 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:09:31,342 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:09:31,344 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:09:31,346 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:09:31,347 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:09:31,347 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:09:31,350 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:09:31,350 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:09:31,432 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:09:31,432 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:09:31,434 INFO  utils.BaseTests    [] - results:
2016-08-27 11:09:31,434 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:09:31,434 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:31,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:31,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:09:31,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:31,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:09:31,435 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:09:31,435 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:09:31,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:31,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:31,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:09:31,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:31,436 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"d58a26d0-44a6-4971-b4a1-e94d5a0417f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:09:31,437 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:09:34,170 INFO  encryption.Paillier  [] - Parameters = p = 1555258949 q = 1293784667 N = 2077225095 NSquared = -1773181135 lambdaN = -128636420 bitLength = 4401
2016-08-27 11:09:34,475 INFO  general.PaillierTest  [] - encM1 = -301889311 encM2 = 2020899695
2016-08-27 11:09:34,781 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:09:34,937 INFO  general.PaillierTest  [] - encM1_times_encM2 = 719618006 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:09:34,938 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 11:09:34,938 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:09:34,945 INFO  encryption.Paillier  [] - testBit true
 N = 10101000001010101110111000111100011110111001011010100100010001001001100010001001111101010000001110110111011010010010011110000111101001011111001101111001101001011100000000111111001111110001011011110001
2016-08-27 11:09:34,946 INFO  encryption.Paillier  [] - Parameters = p = 51848937 q = -29164855 N = 1061099249 NSquared = -357806367 lambdaN = 666672808 bitLength = 201
2016-08-27 11:09:34,946 INFO  general.PaillierTest  [] - encM1 = 479818211 encM2 = -55617157
2016-08-27 11:09:34,946 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:09:34,947 INFO  general.PaillierTest  [] - encM1_times_encM2 = -810476931 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:09:36,477 INFO  encryption.Paillier  [] - testBit false
 N = 101010010101010111000111000101110110100110100110111100000010000100000001011101111111011101111011111111101001001110000111110111110010001110110001010100101100010001000001001001011001011100010011011010010110101000110011101101011010100000111110010000011010010010001010100011110100100011111111001001001010111001000101010000110000010010111010001001110111011111001110010110000001100110000010011101011000111000001111100000100011011111000111111000111110111001000010110100001110010110110010011111010011010010100010010101011011110100111001011001111011111111010000010101001100001001110100010011100110100000101000001001100011100010101100101110001101001100111100100100100110010000111000110001111011010101101110011100001100010010000001011001110101011111010100001110011100000010101000001011110110110011110111101000001011010011111000111011000110011011100101101100101010010010000101100100100111100111100000001011110000011010110011010100001010001011011101111101011000110100000010111000011110010001001111010111110011110111101100001111111111001001010100111100010110110010001111011000100011011011100001011100110001000001000101111010010101100000100101101111110110100011010101110011101011000101100100000000110000010011100100010100110111000100111111010000101011011010100110010000100110010001100111001111101010011010011110000011000010010101100100111110011011000110111110011011011011110010100011000100111101100110001000011101100110010101110101001010100011001100100000111110100011010101110101110111111111010010001110100010101011100000110000010010101101111110000011000100101111110001110110000011000001101101101011111001011100010011100101111101011110000110011111111110101100011101000111010110010101110000110011001111000011000011011001001000000000001000010100011111111101000100010110011010111001011111011010110000000100010110111000110111111000101000000001000100111001100010000000010111100010001111000110101110110001001111101001100111000010101101100111110111111010010100001110011100010011011110010010110001011111111110010101111101010101011100010111111000000011100001100010001110011011110111111100010000001011001001111010101111010011100011111011110011111101000010000000000110000100001010110110101010011011110100110110010010010111000011100010101101100100111011000011100001100110010000001110000000001000110111110100101110110110101011010001001100010110101011111001101000001101100011110000100010011100101101010000001101101101011010010111001110000111001000000111101100011001011101100011011010101110100100000011011111110000111010011101110111011010111100111000111011110110000000101110101101100100010010110100111011100101111101001010111110100110000100110001111110001100110011100100001110010000111010111111001011111100110011011100001110111100011001110110111001010111000011000100101000100000101000100111101100111100100110100100000011110001001011110000100011001000111100101101011001001001100011010010001111100000110101100101011101111010010010101111101110100000111010001000110000110001010101101001110110001101100000011011101000101001101111100101000101101110101101010110011000011111111010111001110110010001001011011011
2016-08-27 11:09:37,660 INFO  encryption.Paillier  [] - testBit false

2016-08-27 11:09:40,624 INFO  encryption.Paillier  [] - testBit false

2016-08-27 11:09:41,711 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:09:41,713 INFO  encryption.Paillier  [] - Parameters = p = 1498144887 q = -2044394267 N = -879450509 NSquared = 1127307177 lambdaN = -166600564 bitLength = 3072
2016-08-27 11:09:41,818 INFO  general.PaillierTest  [] - encM1 = 1185595600 encM2 = -2066797037
2016-08-27 11:09:41,925 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:09:41,985 INFO  general.PaillierTest  [] - encM1_times_encM2 = -631338438 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:09:50,668 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:09:50,674 INFO  encryption.Paillier  [] - Parameters = p = 1435256523 q = -1996590077 N = -1507667871 NSquared = -815676223 lambdaN = -473167158 bitLength = 5750
2016-08-27 11:09:51,389 INFO  general.PaillierTest  [] - encM1 = 1851966543 encM2 = 154747867
2016-08-27 11:09:52,110 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:09:52,461 INFO  general.PaillierTest  [] - encM1_times_encM2 = -601724351 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:09:52,461 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 11:09:52,461 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:09:52,465 INFO  encryption.Paillier  [] - Parameters = p = 1989578493 q = -1127042641 N = 1095937011 NSquared = 19564713 lambdaN = -236015948 bitLength = 201
2016-08-27 11:09:52,465 INFO  general.PaillierTest  [] - encM1 = 324014646 encM2 = 1077155823
2016-08-27 11:09:52,465 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:09:52,466 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1156870929 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:09:55,504 INFO  encryption.Paillier  [] - Parameters = p = 920724109 q = -1064276561 N = -1897093277 NSquared = -537243575 lambdaN = -876770412 bitLength = 3072
2016-08-27 11:09:55,621 INFO  general.PaillierTest  [] - encM1 = -302564469 encM2 = 2010696541
2016-08-27 11:09:55,734 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:09:55,790 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1352472602 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:10:45,673 INFO  encryption.Paillier  [] - Parameters = p = 1985867973 q = -1732526967 N = 754812269 NSquared = 1996255337 lambdaN = -948374008 bitLength = 6801
2016-08-27 11:10:47,003 INFO  general.PaillierTest  [] - encM1 = 37194955 encM2 = -682119548
2016-08-27 11:10:48,232 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:10:48,848 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2016461728 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:10:48,848 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 11:10:48,849 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:10:48,852 INFO  encryption.Paillier  [] - testBit true
 N = 10111001111011100110000100000110110010110111110101011111010101000111010000101111101010111000011111101101011000101100101000011011011011100000110011000000011000110000011010111011110000010010110111100011
2016-08-27 11:10:48,853 INFO  encryption.Paillier  [] - Parameters = p = 812152075 q = 1587577225 N = -1144967709 NSquared = -629172407 lambdaN = -1772348504 bitLength = 201
2016-08-27 11:10:48,853 INFO  general.PaillierTest  [] - encM1 = -1688502535 encM2 = 1314365546
2016-08-27 11:10:48,853 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:10:48,854 INFO  general.PaillierTest  [] - encM1_times_encM2 = -414194699 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:10:49,759 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:10:49,763 INFO  encryption.Paillier  [] - Parameters = p = 405939113 q = 1247994797 N = 1345516597 NSquared = 1839796985 lambdaN = 996637496 bitLength = 3072
2016-08-27 11:10:49,877 INFO  general.PaillierTest  [] - encM1 = -668888299 encM2 = 119998218
2016-08-27 11:10:49,987 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:10:50,046 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1919505915 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:11:04,740 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:11:04,750 INFO  encryption.Paillier  [] - Parameters = p = 1238779197 q = -1943044919 N = -721884955 NSquared = 1469045977 lambdaN = 1069337016 bitLength = 5309
2016-08-27 11:11:05,354 INFO  general.PaillierTest  [] - encM1 = 1504575140 encM2 = -1139121056
2016-08-27 11:11:05,960 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:11:06,278 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1294087982 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:11:06,278 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 11:11:06,278 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:11:06,285 INFO  encryption.Paillier  [] - Parameters = p = -932046359 q = 1837742987 N = 1100104835 NSquared = -1111368951 lambdaN = -2050279544 bitLength = 201
2016-08-27 11:11:06,286 INFO  general.PaillierTest  [] - encM1 = -152008887 encM2 = -1206926585
2016-08-27 11:11:06,287 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:11:06,287 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2055986297 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:11:06,905 INFO  encryption.Paillier  [] - Parameters = p = 1096264883 q = -209272515 N = -104261209 NSquared = 684722929 lambdaN = -1888926076 bitLength = 3072
2016-08-27 11:11:07,027 INFO  general.PaillierTest  [] - encM1 = 158315278 encM2 = -2076006818
2016-08-27 11:11:07,142 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:11:07,201 INFO  general.PaillierTest  [] - encM1_times_encM2 = 878363334 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:11:16,513 INFO  encryption.Paillier  [] - Parameters = p = 2029874435 q = -896596671 N = -299451197 NSquared = 689110153 lambdaN = 1431119168 bitLength = 5692
2016-08-27 11:11:17,203 INFO  general.PaillierTest  [] - encM1 = -445590765 encM2 = -1628773970
2016-08-27 11:11:17,899 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:11:18,244 INFO  general.PaillierTest  [] - encM1_times_encM2 = 527149786 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:11:18,244 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 11:11:18,244 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:11:18,246 INFO  encryption.Paillier  [] - testBit true
 N = 11101000010000000011111111111010111110010101110110001000110010011011001111100011001010011011101101111101000001110000110110000110000100011100010011000011011100101000101110100110011100001011101101111001
2016-08-27 11:11:18,247 INFO  encryption.Paillier  [] - Parameters = p = 676927737 q = -1715218815 N = -1502561415 NSquared = 2133458737 lambdaN = 478837120 bitLength = 201
2016-08-27 11:11:18,247 INFO  general.PaillierTest  [] - encM1 = -814699620 encM2 = 1977697483
2016-08-27 11:11:18,247 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:11:18,247 INFO  general.PaillierTest  [] - encM1_times_encM2 = -537461913 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:11:18,695 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:11:18,697 INFO  encryption.Paillier  [] - Parameters = p = -828841379 q = -595641093 N = -1659454161 NSquared = -1243451743 lambdaN = 2029997804 bitLength = 3072
2016-08-27 11:11:18,808 INFO  general.PaillierTest  [] - encM1 = 964934816 encM2 = 1293598919
2016-08-27 11:11:18,921 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:11:18,978 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1918232506 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:12:14,341 INFO  encryption.Paillier  [] - testBit false

2016-08-27 11:13:00,644 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:13:00,651 INFO  encryption.Paillier  [] - Parameters = p = 615819957 q = -651884827 N = 717615593 NSquared = -1456306671 lambdaN = 188420116 bitLength = 6561
2016-08-27 11:13:01,725 INFO  general.PaillierTest  [] - encM1 = -287119128 encM2 = -1947449779
2016-08-27 11:13:02,778 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:13:03,313 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1428179642 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:13:03,313 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 11:13:03,313 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:13:03,316 INFO  encryption.Paillier  [] - Parameters = p = -646600815 q = -1727698837 N = -1626017381 NSquared = 775762905 lambdaN = -1773342512 bitLength = 201
2016-08-27 11:13:03,317 INFO  general.PaillierTest  [] - encM1 = 2008445734 encM2 = -1611018747
2016-08-27 11:13:03,317 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:13:03,317 INFO  general.PaillierTest  [] - encM1_times_encM2 = -901476523 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:13:06,057 INFO  encryption.Paillier  [] - Parameters = p = -545172839 q = -234651777 N = -1561534233 NSquared = -880996239 lambdaN = 1756628840 bitLength = 3072
2016-08-27 11:13:06,176 INFO  general.PaillierTest  [] - encM1 = -532464931 encM2 = -1851275275
2016-08-27 11:13:06,284 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:13:06,340 INFO  general.PaillierTest  [] - encM1_times_encM2 = 573125534 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:14:01,761 INFO  encryption.Paillier  [] - Parameters = p = 398585579 q = 1307139199 N = -1644889451 NSquared = 1666144953 lambdaN = 472176534 bitLength = 6013
2016-08-27 11:14:02,591 INFO  general.PaillierTest  [] - encM1 = -41225412 encM2 = -366880529
2016-08-27 11:14:03,419 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:14:03,868 INFO  general.PaillierTest  [] - encM1_times_encM2 = 513320948 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:14:03,868 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 11:14:03,868 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:14:03,877 INFO  encryption.Paillier  [] - testBit true
 N = 10110011110000011000000001100111111000111010011111100110000100101001011010000100011010000001101000010111110010001011100001011010111001110100011111001001010011010100111010110011110111111011011111100101
2016-08-27 11:14:03,877 INFO  encryption.Paillier  [] - Parameters = p = 1722704515 q = -474427529 N = -1277184027 NSquared = 588198617 lambdaN = 884753142 bitLength = 201
2016-08-27 11:14:03,877 INFO  general.PaillierTest  [] - encM1 = -743753160 encM2 = -100667760
2016-08-27 11:14:03,878 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:14:03,878 INFO  general.PaillierTest  [] - encM1_times_encM2 = -397114873 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:14:07,610 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:14:07,613 INFO  encryption.Paillier  [] - Parameters = p = 1709051147 q = -1233594905 N = -1688212499 NSquared = -246220439 lambdaN = 1065649278 bitLength = 3072
2016-08-27 11:14:07,726 INFO  general.PaillierTest  [] - encM1 = -791431189 encM2 = 1353372063
2016-08-27 11:14:07,842 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:14:07,897 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1963268328 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:14:15,878 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:14:15,886 INFO  encryption.Paillier  [] - Parameters = p = 1582063935 q = -655475567 N = -526395217 NSquared = 550094753 lambdaN = -726491792 bitLength = 5818
2016-08-27 11:14:16,621 INFO  general.PaillierTest  [] - encM1 = -2125910851 encM2 = -144344367
2016-08-27 11:14:17,368 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:14:17,741 INFO  general.PaillierTest  [] - encM1_times_encM2 = 250947038 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:14:17,741 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 11:14:17,747 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 11:14:17,748 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 11:14:17,749 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 11:14:17,750 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-27 11:14:17,755 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 11:14:17,758 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 11:14:17,759 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-27 11:14:17,761 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 11:14:17,761 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-27 11:14:17,761 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:14:17,761 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-27 11:14:17,762 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-27 11:14:17,771 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-27 11:14:17,772 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-27 11:14:17,773 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-27 11:14:17,776 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-27 11:14:17,777 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-27 11:14:17,777 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-27 11:14:17,778 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-27 11:14:17,778 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-27 11:14:17,790 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3293945341045432661.xml
2016-08-27 11:14:17,831 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-27 11:14:17,831 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3293945341045432661.xml hdfs = false
2016-08-27 11:14:17,831 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3293945341045432661.xml
2016-08-27 11:14:17,834 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,835 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 11:14:17,836 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:14:17,836 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,836 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,836 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,837 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,837 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,837 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,837 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3293945341045432661.xml hdfs = false
2016-08-27 11:14:17,837 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3293945341045432661.xml
2016-08-27 11:14:17,839 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,840 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 11:14:17,840 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:14:17,840 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,840 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,840 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,841 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,841 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,841 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,841 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-27 11:14:17,842 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml
2016-08-27 11:14:17,842 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml
2016-08-27 11:14:17,843 INFO  utils.TestUtils    [] - elementName = date
2016-08-27 11:14:17,843 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:14:17,844 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:14:17,844 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-27 11:14:17,844 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-27 11:14:17,844 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:14:17,846 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-27 11:14:17,846 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7058014749991236008.xml
2016-08-27 11:14:17,846 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7058014749991236008.xml
2016-08-27 11:14:17,847 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:14:17,848 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:14:17,848 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:14:17,849 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-27 11:14:17,849 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3123683143908425507.xml
2016-08-27 11:14:17,849 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7058014749991236008.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3123683143908425507.xml
2016-08-27 11:14:17,851 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:14:17,851 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:14:17,851 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:14:17,852 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-27 11:14:17,853 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6490268156069055116.xml
2016-08-27 11:14:17,853 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7058014749991236008.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3123683143908425507.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6490268156069055116.xml
2016-08-27 11:14:17,854 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:14:17,854 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:14:17,854 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:14:17,855 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-27 11:14:17,856 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9096316355366445528.xml
2016-08-27 11:14:17,856 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7058014749991236008.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3123683143908425507.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6490268156069055116.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9096316355366445528.xml
2016-08-27 11:14:17,857 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:14:17,857 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:14:17,858 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:14:17,861 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-27 11:14:17,861 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml
2016-08-27 11:14:17,861 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml
2016-08-27 11:14:17,863 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,863 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 11:14:17,863 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,864 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:14:17,864 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:14:17,864 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 11:14:17,864 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,864 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:14:17,864 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,865 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:14:17,865 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,865 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 11:14:17,865 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,865 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 11:14:17,865 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,865 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 11:14:17,866 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7058014749991236008.xml
2016-08-27 11:14:17,866 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7058014749991236008.xml
2016-08-27 11:14:17,868 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,868 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 11:14:17,868 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,869 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 11:14:17,869 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,869 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 11:14:17,869 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,869 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 11:14:17,869 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,870 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 11:14:17,870 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3123683143908425507.xml
2016-08-27 11:14:17,870 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3123683143908425507.xml
2016-08-27 11:14:17,872 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,872 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 11:14:17,872 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,872 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:14:17,872 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,873 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:14:17,873 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,873 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:14:17,873 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,874 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:14:17,874 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6490268156069055116.xml
2016-08-27 11:14:17,874 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6490268156069055116.xml
2016-08-27 11:14:17,876 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,876 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 11:14:17,876 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,876 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:14:17,876 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,877 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:14:17,877 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,877 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:14:17,877 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,877 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:14:17,878 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9096316355366445528.xml
2016-08-27 11:14:17,878 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9096316355366445528.xml
2016-08-27 11:14:17,880 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,880 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 11:14:17,881 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,881 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:14:17,881 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,881 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:14:17,881 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,881 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:14:17,881 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,882 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:14:17,882 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml
2016-08-27 11:14:17,882 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2752758635003113152.xml
2016-08-27 11:14:17,883 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,886 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 11:14:17,886 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,886 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:14:17,887 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:14:17,887 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 11:14:17,887 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,887 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:14:17,887 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,887 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:14:17,887 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,888 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 11:14:17,888 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,888 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 11:14:17,888 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,888 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 11:14:17,888 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7058014749991236008.xml
2016-08-27 11:14:17,888 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7058014749991236008.xml
2016-08-27 11:14:17,890 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,890 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 11:14:17,890 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,891 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 11:14:17,891 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,891 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 11:14:17,891 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,891 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 11:14:17,891 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,892 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 11:14:17,892 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3123683143908425507.xml
2016-08-27 11:14:17,892 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file3123683143908425507.xml
2016-08-27 11:14:17,894 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,894 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 11:14:17,894 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,894 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:14:17,894 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,894 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:14:17,895 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,895 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:14:17,895 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,895 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:14:17,895 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6490268156069055116.xml
2016-08-27 11:14:17,896 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6490268156069055116.xml
2016-08-27 11:14:17,897 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,897 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 11:14:17,900 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,900 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:14:17,900 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,900 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:14:17,901 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,901 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:14:17,901 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,901 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:14:17,901 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9096316355366445528.xml
2016-08-27 11:14:17,901 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9096316355366445528.xml
2016-08-27 11:14:17,903 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:14:17,903 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 11:14:17,903 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:14:17,903 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:14:17,903 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:14:17,904 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:14:17,904 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,904 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:14:17,904 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:14:17,904 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:14:17,954 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,954 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,954 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,954 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,956 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,956 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 11:14:17,956 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,956 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 11:14:17,957 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,957 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 11:14:17,958 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,958 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 11:14:17,958 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,958 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 11:14:17,959 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,959 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 11:14:17,959 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,959 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 11:14:17,959 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,960 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 11:14:17,960 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,960 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,960 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,961 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,961 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,962 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 11:14:17,962 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,962 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 11:14:17,962 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,963 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,963 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,963 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,964 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,964 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 11:14:17,964 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,964 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 11:14:17,965 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,965 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 11:14:17,965 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,965 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 11:14:17,966 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,966 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 11:14:17,966 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,967 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 11:14:17,968 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,968 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 11:14:17,968 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,968 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 11:14:17,969 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,970 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,970 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,970 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,970 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,971 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 11:14:17,971 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,971 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 11:14:17,972 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,972 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,972 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,972 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,973 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,973 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 11:14:17,973 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,973 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 11:14:17,974 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,974 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 11:14:17,974 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,974 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 11:14:17,975 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,975 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 11:14:17,975 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,975 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 11:14:17,976 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,976 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 11:14:17,976 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,976 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 11:14:17,977 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,978 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,978 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,978 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,979 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,979 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 11:14:17,979 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:17,979 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 11:14:17,985 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 11:14:17,985 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 11:14:17,985 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 11:14:17,986 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 11:14:17,986 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 11:14:17,986 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 11:14:17,986 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 11:14:17,987 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 11:14:17,987 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 11:14:17,987 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 11:14:17,987 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 11:14:17,988 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 11:14:17,988 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 11:14:17,988 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 11:14:17,989 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 11:14:17,989 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 11:14:17,990 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 11:14:17,990 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 11:14:17,990 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 11:14:17,990 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 11:14:17,990 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 11:14:17,991 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 11:14:17,991 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 11:14:17,991 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,991 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,992 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,992 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,992 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,992 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,992 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 11:14:17,992 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 11:14:17,993 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:14:17,993 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,993 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,993 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,993 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,993 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,993 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,994 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,994 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 11:14:17,994 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 11:14:17,994 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,994 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,994 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,995 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,995 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:17,995 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,995 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 11:14:17,995 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 11:14:17,995 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 11:14:17,996 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 11:14:17,996 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,996 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:14:17,996 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 11:14:17,996 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,996 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:14:17,996 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 11:14:17,997 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:17,997 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:14:17,997 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 11:14:17,997 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:14:17,997 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 11:14:17,997 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:14:17,999 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 11:14:17,999 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 11:14:17,999 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 11:14:17,999 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 11:14:17,999 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 11:14:17,999 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 11:14:18,000 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 11:14:18,000 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 11:14:18,000 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,000 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,000 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,000 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,000 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,000 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,001 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 11:14:18,001 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 11:14:18,001 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:14:18,001 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,002 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,002 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,002 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,002 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,002 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,002 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,002 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 11:14:18,003 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 11:14:18,003 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,003 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,003 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,003 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,003 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,003 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,004 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 11:14:18,004 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 11:14:18,004 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 11:14:18,004 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 11:14:18,004 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,004 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:14:18,005 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 11:14:18,005 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,005 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:14:18,005 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 11:14:18,005 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,005 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:14:18,005 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 11:14:18,006 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:14:18,006 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 11:14:18,006 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:14:18,006 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-27 11:14:18,006 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 11:14:18,007 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 11:14:18,007 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,007 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 11:14:18,007 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,007 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 11:14:18,007 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,008 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 11:14:18,008 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:14:18,008 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-27 11:14:18,008 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 11:14:18,008 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 11:14:18,008 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,008 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 11:14:18,008 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,008 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 11:14:18,009 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,009 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 11:14:18,009 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 11:14:18,009 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 11:14:18,009 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 11:14:18,009 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 11:14:18,009 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 11:14:18,010 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 11:14:18,010 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 11:14:18,010 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 11:14:18,010 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,010 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,010 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,010 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,011 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,011 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,011 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 11:14:18,011 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 11:14:18,011 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:14:18,011 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,012 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,012 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,012 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,012 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,012 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,012 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,012 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 11:14:18,013 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 11:14:18,013 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,013 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,013 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,013 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,013 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:14:18,013 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,014 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 11:14:18,014 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 11:14:18,014 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 11:14:18,015 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 11:14:18,015 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,015 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:14:18,015 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 11:14:18,015 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,016 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:14:18,016 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 11:14:18,016 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,017 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:14:18,017 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 11:14:18,017 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:14:18,017 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 11:14:18,017 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:14:18,018 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-27 11:14:18,018 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 11:14:18,018 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 11:14:18,018 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,018 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 11:14:18,019 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,019 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 11:14:18,019 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,019 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 11:14:18,019 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:14:18,019 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-27 11:14:18,019 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 11:14:18,019 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 11:14:18,020 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,020 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 11:14:18,020 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,020 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 11:14:18,020 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:14:18,020 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 11:14:18,021 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,021 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,021 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,021 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,022 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,022 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,022 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,022 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,023 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,023 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,023 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,023 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,024 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,024 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,024 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,024 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,024 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,025 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,025 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,025 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,025 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,025 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,025 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,026 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,026 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,027 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,027 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,027 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,027 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,027 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,028 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,028 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,028 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,028 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,028 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,028 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,029 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,029 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,029 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,029 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,030 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,030 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,030 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,031 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:14:18,031 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-27 11:14:18,032 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-27 11:14:18,033 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-27 11:14:18,034 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-27 11:18:01,149 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-27 11:18:01,152 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-27 11:18:01,155 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-27 11:18:01,156 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-27 11:18:01,157 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-27 11:18:01,157 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-27 11:18:01,158 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-27 11:18:01,158 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-27 11:18:01,169 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-27 11:18:01,169 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-27 11:18:01,170 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-27 11:18:01,170 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-27 11:18:01,170 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-27 11:18:01,171 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-27 11:18:01,171 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-27 11:18:01,172 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-27 11:18:01,172 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-27 11:18:01,172 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-27 11:18:01,173 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-27 11:18:01,174 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-27 11:18:01,175 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-27 11:18:01,175 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-27 11:18:01,175 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-27 11:18:01,261 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 11:18:01,261 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-27 11:18:01,262 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 11:18:01,262 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-27 11:18:01,262 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-27 11:18:01,263 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-27 11:18:01,263 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-27 11:18:01,271 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-27 11:18:01,271 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-27 11:18:01,274 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 11:18:01,276 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 11:18:01,278 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 11:18:01,278 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 11:18:01,279 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 11:18:01,282 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:18:01,285 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-27 11:18:01,326 INFO  encryption.Paillier  [] - Parameters = p = 911304083 q = -523786957 N = -571212983 NSquared = 222182097 lambdaN = 1668118594 bitLength = 201
2016-08-27 11:18:01,374 INFO  general.PaillierTest  [] - encM1 = -661939109 encM2 = -494607841
2016-08-27 11:18:01,374 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:01,375 INFO  general.PaillierTest  [] - encM1_times_encM2 = 171156658 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:04,036 INFO  encryption.Paillier  [] - Parameters = p = -812470169 q = 1580967163 N = -141430531 NSquared = 393566729 lambdaN = 1692519886 bitLength = 3072
2016-08-27 11:18:04,157 INFO  general.PaillierTest  [] - encM1 = 1798752453 encM2 = 1411799860
2016-08-27 11:18:04,270 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:04,328 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1413833455 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:16,775 INFO  encryption.Paillier  [] - Parameters = p = 2129672935 q = -546271121 N = 693860905 NSquared = 896604817 lambdaN = -444770454 bitLength = 4895
2016-08-27 11:18:17,226 INFO  general.PaillierTest  [] - encM1 = -324677855 encM2 = 1597563879
2016-08-27 11:18:17,673 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:17,912 INFO  general.PaillierTest  [] - encM1_times_encM2 = -428484344 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:17,912 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 11:18:17,913 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:18:17,920 INFO  encryption.Paillier  [] - testBit false
 N = 10010110110110010001101111100010111101100101101010110100001111110100100010110101001000101001010001011110011001110001000001101010100010000001100101000000011101000000111000101011100110010000010111001101
2016-08-27 11:18:17,924 INFO  encryption.Paillier  [] - testBit true
 N = 11100010100011001100111010011001111111101110110100110011101110010011101111001110011110011111100010010110001000111010000100111010100000000110111110011001111010010001100101100111101110100000110000110111
2016-08-27 11:18:17,925 INFO  encryption.Paillier  [] - Parameters = p = -1201998279 q = 225940975 N = 1740246071 NSquared = 42021841 lambdaN = -789331960 bitLength = 201
2016-08-27 11:18:17,925 INFO  general.PaillierTest  [] - encM1 = -2100389924 encM2 = -1619054342
2016-08-27 11:18:17,925 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:17,926 INFO  general.PaillierTest  [] - encM1_times_encM2 = 267512444 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:20,090 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:18:20,093 INFO  encryption.Paillier  [] - Parameters = p = -539113723 q = 753840985 N = -924274755 NSquared = 1328804233 lambdaN = 1694652872 bitLength = 3072
2016-08-27 11:18:20,216 INFO  general.PaillierTest  [] - encM1 = -1181217919 encM2 = 204064713
2016-08-27 11:18:20,330 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:20,389 INFO  general.PaillierTest  [] - encM1_times_encM2 = 141271608 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:22,671 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:18:22,674 INFO  encryption.Paillier  [] - Parameters = p = 1889324453 q = 761307713 N = -254631707 NSquared = -1127019303 lambdaN = -1800057792 bitLength = 3340
2016-08-27 11:18:22,825 INFO  general.PaillierTest  [] - encM1 = -842154728 encM2 = 396131172
2016-08-27 11:18:22,970 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:23,047 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2056077298 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:23,047 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 11:18:23,047 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:18:23,050 INFO  encryption.Paillier  [] - Parameters = p = 1875731497 q = 1007015875 N = 962509371 NSquared = -1865561703 lambdaN = 1187364648 bitLength = 201
2016-08-27 11:18:23,050 INFO  general.PaillierTest  [] - encM1 = 348406290 encM2 = -153788974
2016-08-27 11:18:23,050 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:23,051 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1970589591 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:24,222 INFO  encryption.Paillier  [] - Parameters = p = 2047475863 q = -151259847 N = 1826071711 NSquared = 351148737 lambdaN = 2112411496 bitLength = 3072
2016-08-27 11:18:24,358 INFO  general.PaillierTest  [] - encM1 = -2063431471 encM2 = -1354123928
2016-08-27 11:18:24,520 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:24,612 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1669961395 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:25,880 INFO  encryption.Paillier  [] - Parameters = p = -1052896313 q = -1946721383 N = -1581201681 NSquared = -1625910495 lambdaN = -1438275640 bitLength = 3805
2016-08-27 11:18:26,093 INFO  general.PaillierTest  [] - encM1 = 129489159 encM2 = 666217749
2016-08-27 11:18:26,311 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:26,419 INFO  general.PaillierTest  [] - encM1_times_encM2 = -520198964 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:26,419 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 11:18:26,419 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:18:26,421 INFO  encryption.Paillier  [] - testBit true
 N = 11000111100000101111100101001111101001110111011100011011000000001110011101111010101011101001100000100000000010101110100010100110000100111100011111111011010010011001001001011100010011101011001000100001
2016-08-27 11:18:26,422 INFO  encryption.Paillier  [] - Parameters = p = -2136881337 q = -1070940329 N = 1548661281 NSquared = -1072830399 lambdaN = -1916725822 bitLength = 201
2016-08-27 11:18:26,422 INFO  general.PaillierTest  [] - encM1 = 1730995507 encM2 = -147171760
2016-08-27 11:18:26,422 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:26,423 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1779000933 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:27,834 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:18:27,836 INFO  encryption.Paillier  [] - Parameters = p = 822193837 q = -185089063 N = 1063638949 NSquared = 332959833 lambdaN = 1180375368 bitLength = 3072
2016-08-27 11:18:27,953 INFO  general.PaillierTest  [] - encM1 = -428093783 encM2 = 1816326067
2016-08-27 11:18:28,069 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:28,126 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1026905489 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:41,843 INFO  encryption.Paillier  [] - testBit false

2016-08-27 11:18:54,864 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:18:54,870 INFO  encryption.Paillier  [] - Parameters = p = 734119759 q = -402997561 N = -1045131159 NSquared = -1222751471 lambdaN = -688126678 bitLength = 5610
2016-08-27 11:18:55,556 INFO  general.PaillierTest  [] - encM1 = 660854011 encM2 = 563633956
2016-08-27 11:18:56,231 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:56,567 INFO  general.PaillierTest  [] - encM1_times_encM2 = 365692082 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:56,567 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 11:18:56,567 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:18:56,571 INFO  encryption.Paillier  [] - Parameters = p = -1044942751 q = -473157107 N = 982492909 NSquared = 1302214505 lambdaN = 1698890016 bitLength = 201
2016-08-27 11:18:56,572 INFO  general.PaillierTest  [] - encM1 = -171043868 encM2 = -589553492
2016-08-27 11:18:56,572 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:18:56,572 INFO  general.PaillierTest  [] - encM1_times_encM2 = -992842705 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:18:59,717 INFO  encryption.Paillier  [] - Parameters = p = 825216209 q = 467258825 N = -1917571815 NSquared = -48640911 lambdaN = 1476860784 bitLength = 3072
2016-08-27 11:18:59,833 INFO  general.PaillierTest  [] - encM1 = 1103752841 encM2 = 1177304209
2016-08-27 11:18:59,951 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:00,011 INFO  general.PaillierTest  [] - encM1_times_encM2 = 671341870 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:19:12,357 INFO  encryption.Paillier  [] - Parameters = p = -2021725945 q = -1422210459 N = 294090179 NSquared = 1339413129 lambdaN = 1869013292 bitLength = 4768
2016-08-27 11:19:12,776 INFO  general.PaillierTest  [] - encM1 = 1481588278 encM2 = -318661493
2016-08-27 11:19:13,184 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:13,391 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2033302529 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:19:13,391 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 11:19:13,392 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:19:13,398 INFO  encryption.Paillier  [] - testBit true
 N = 10110001011100111010110100101101010010101010100001000101000000000011101011101110101011011111100110100011110011101000100111111101010010110001110101111100010111110111101001000111111110011000000100101001
2016-08-27 11:19:13,398 INFO  encryption.Paillier  [] - Parameters = p = 981486701 q = 1521293869 N = 1207533865 NSquared = 1089230993 lambdaN = 749930148 bitLength = 201
2016-08-27 11:19:13,398 INFO  general.PaillierTest  [] - encM1 = -1373646275 encM2 = -1138447945
2016-08-27 11:19:13,399 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:13,399 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1210126194 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:19:14,999 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:19:15,001 INFO  encryption.Paillier  [] - Parameters = p = -454430617 q = -1436973941 N = -456547347 NSquared = -81680023 lambdaN = 717428606 bitLength = 3072
2016-08-27 11:19:15,118 INFO  general.PaillierTest  [] - encM1 = -1998497540 encM2 = -446111776
2016-08-27 11:19:15,232 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:15,290 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2036613120 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:19:22,672 INFO  encryption.Paillier  [] - testBit false

2016-08-27 11:19:24,062 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:19:24,065 INFO  encryption.Paillier  [] - Parameters = p = 1766351541 q = -831751061 N = 1533865383 NSquared = 461808369 lambdaN = -2133215436 bitLength = 4207
2016-08-27 11:19:24,348 INFO  general.PaillierTest  [] - encM1 = -1252239384 encM2 = -1241434098
2016-08-27 11:19:24,642 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:24,785 INFO  general.PaillierTest  [] - encM1_times_encM2 = 14917637 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:19:24,785 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-27 11:19:24,785 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:19:24,787 INFO  encryption.Paillier  [] - Parameters = p = 1024136171 q = -1818472877 N = 1054674737 NSquared = -142555295 lambdaN = 308168574 bitLength = 201
2016-08-27 11:19:24,787 INFO  general.PaillierTest  [] - encM1 = -835111295 encM2 = -1718701744
2016-08-27 11:19:24,788 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:24,788 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1885224454 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:19:26,838 INFO  encryption.Paillier  [] - Parameters = p = -185516611 q = -1179251617 N = -1379351261 NSquared = -327228727 lambdaN = -7291516 bitLength = 3072
2016-08-27 11:19:26,950 INFO  general.PaillierTest  [] - encM1 = 1802949416 encM2 = -417427494
2016-08-27 11:19:27,067 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:27,123 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1665313434 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:19:39,437 INFO  encryption.Paillier  [] - Parameters = p = -68520709 q = -2095061969 N = -1415576043 NSquared = -1469776455 lambdaN = 374003318 bitLength = 4246
2016-08-27 11:19:39,746 INFO  general.PaillierTest  [] - encM1 = 31458757 encM2 = 1203924757
2016-08-27 11:19:40,063 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:40,220 INFO  general.PaillierTest  [] - encM1_times_encM2 = 25722490 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:19:40,220 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-27 11:19:40,220 INFO  general.PaillierTest  [] - i = 0
2016-08-27 11:19:40,223 INFO  encryption.Paillier  [] - testBit false
 N = 11101010011100000101101011000110111010001111110110110000010001011010100110101011110101010100010010111001111111111010111010110101010101100110010111100110000010111000111111010001001100001001101010010001
2016-08-27 11:19:40,225 INFO  encryption.Paillier  [] - testBit false
 N = 11000101111110111000001001101111011001001101100010111010001001101010001110100100100010010000001101000011010011110001000011110001101110001011111000000000100000111011010100110100011010011101000000010011
2016-08-27 11:19:40,231 INFO  encryption.Paillier  [] - testBit false
 N = 10100111110011101101101000101110010011100010101100100001010001101111011011011100110010011101100110001111000011100000010001010011101100000010011110000010000011100100111001010111010001101100101001000101
2016-08-27 11:19:40,232 INFO  encryption.Paillier  [] - testBit false
 N = 10101100111010111100101111010000011111000100100010011000101000111110111010100101110111110111101101110100110000010011000101001001010011010100000001011010001111000101111100111110111110001100111000011111
2016-08-27 11:19:40,234 INFO  encryption.Paillier  [] - testBit false
 N = 11000010000010000000100001100111000001011100111100010111010110110000101111111111010011000001100110001011000111011010011010010100001000001100000010000100010111001101110111100110001001111111001001010001
2016-08-27 11:19:40,237 INFO  encryption.Paillier  [] - testBit true
 N = 11101001110001100110100011001100000100111010101011110101110101101011101001111001001100000000011011100001101001011010010110111001101101011011100001101010000010001001010010101010101100110100001100101011
2016-08-27 11:19:40,237 INFO  encryption.Paillier  [] - Parameters = p = 1918348171 q = -447202591 N = -1431092437 NSquared = 465668409 lambdaN = -1451119008 bitLength = 201
2016-08-27 11:19:40,238 INFO  general.PaillierTest  [] - encM1 = -1156467295 encM2 = 503089768
2016-08-27 11:19:40,238 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:40,238 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1164629594 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:19:40,713 INFO  encryption.Paillier  [] - testBit false

2016-08-27 11:19:42,098 INFO  encryption.Paillier  [] - testBit false

2016-08-27 11:19:45,175 INFO  encryption.Paillier  [] - testBit false

2016-08-27 11:19:48,103 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:19:48,105 INFO  encryption.Paillier  [] - Parameters = p = -73325389 q = 1929964997 N = 1620243647 NSquared = 1406707329 lambdaN = -118197980 bitLength = 3072
2016-08-27 11:19:48,223 INFO  general.PaillierTest  [] - encM1 = 710408224 encM2 = 888496518
2016-08-27 11:19:48,342 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:19:48,403 INFO  general.PaillierTest  [] - encM1_times_encM2 = 714445678 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:20:31,583 INFO  encryption.Paillier  [] - testBit true

2016-08-27 11:20:31,594 INFO  encryption.Paillier  [] - Parameters = p = 1216780651 q = 512141989 N = -123473929 NSquared = 91824209 lambdaN = 1221285364 bitLength = 6968
2016-08-27 11:20:32,883 INFO  general.PaillierTest  [] - encM1 = 1912483010 encM2 = 488259954
2016-08-27 11:20:34,176 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:20:34,825 INFO  general.PaillierTest  [] - encM1_times_encM2 = -296129677 multDecrypt = 7 m1_plus_m2 = 7
2016-08-27 11:20:34,826 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-27 11:20:34,829 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-27 11:20:34,831 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-27 11:20:34,832 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-27 11:20:34,832 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-27 11:20:34,837 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 11:20:34,840 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 11:20:34,840 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-27 11:20:34,842 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-27 11:20:34,842 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-27 11:20:34,843 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-27 11:20:34,843 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-27 11:20:34,843 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-27 11:20:34,853 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-27 11:20:34,853 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-27 11:20:34,854 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-27 11:20:34,857 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-27 11:20:34,857 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-27 11:20:34,858 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-27 11:20:34,858 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-27 11:20:34,859 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-27 11:20:34,868 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2912716859983682717.xml
2016-08-27 11:20:34,919 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-27 11:20:34,919 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2912716859983682717.xml hdfs = false
2016-08-27 11:20:34,919 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2912716859983682717.xml
2016-08-27 11:20:34,922 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,923 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 11:20:34,925 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:20:34,925 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,925 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,926 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,926 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,927 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,927 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,927 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2912716859983682717.xml hdfs = false
2016-08-27 11:20:34,927 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2912716859983682717.xml
2016-08-27 11:20:34,931 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,932 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 11:20:34,932 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:20:34,932 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,932 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,933 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,933 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,933 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,933 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,934 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-27 11:20:34,934 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml
2016-08-27 11:20:34,935 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml
2016-08-27 11:20:34,936 INFO  utils.TestUtils    [] - elementName = date
2016-08-27 11:20:34,936 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:20:34,936 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:34,936 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-27 11:20:34,936 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-27 11:20:34,937 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:20:34,938 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-27 11:20:34,939 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file853543400652395703.xml
2016-08-27 11:20:34,939 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file853543400652395703.xml
2016-08-27 11:20:34,940 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:20:34,940 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:34,941 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:20:34,942 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-27 11:20:34,943 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4051387596955347036.xml
2016-08-27 11:20:34,943 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file853543400652395703.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4051387596955347036.xml
2016-08-27 11:20:34,944 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:20:34,944 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:20:34,944 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:34,946 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-27 11:20:34,946 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8547548910688586056.xml
2016-08-27 11:20:34,946 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file853543400652395703.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4051387596955347036.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8547548910688586056.xml
2016-08-27 11:20:34,948 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:20:34,949 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:34,949 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:20:34,950 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-27 11:20:34,951 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file558302484614168031.xml
2016-08-27 11:20:34,951 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file853543400652395703.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4051387596955347036.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8547548910688586056.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file558302484614168031.xml
2016-08-27 11:20:34,953 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:20:34,953 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:34,953 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:20:34,957 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-27 11:20:34,958 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml
2016-08-27 11:20:34,958 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml
2016-08-27 11:20:34,960 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,960 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 11:20:34,961 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,961 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:20:34,962 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:20:34,962 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 11:20:34,962 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,962 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:34,962 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,963 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:20:34,963 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,963 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 11:20:34,963 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,963 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 11:20:34,963 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,964 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 11:20:34,965 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file853543400652395703.xml
2016-08-27 11:20:34,965 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file853543400652395703.xml
2016-08-27 11:20:34,968 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,968 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 11:20:34,968 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,968 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 11:20:34,969 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,969 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 11:20:34,969 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,969 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 11:20:34,969 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,969 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 11:20:34,970 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4051387596955347036.xml
2016-08-27 11:20:34,970 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4051387596955347036.xml
2016-08-27 11:20:34,972 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,972 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 11:20:34,972 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,972 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:20:34,973 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,973 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:20:34,973 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,973 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:34,973 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,973 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:20:34,974 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8547548910688586056.xml
2016-08-27 11:20:34,974 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8547548910688586056.xml
2016-08-27 11:20:34,975 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,976 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 11:20:34,976 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,976 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:20:34,976 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,976 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:20:34,976 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,976 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:34,977 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,977 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:20:34,977 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file558302484614168031.xml
2016-08-27 11:20:34,977 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file558302484614168031.xml
2016-08-27 11:20:34,979 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,979 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 11:20:34,980 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,980 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:20:34,980 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,980 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:20:34,980 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,980 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:34,981 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,981 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:20:34,981 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml
2016-08-27 11:20:34,981 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2393761486026405832.xml
2016-08-27 11:20:34,983 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,984 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 11:20:34,984 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,984 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:20:34,984 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:20:34,984 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 11:20:34,984 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,985 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:34,985 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,985 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:20:34,985 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,985 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 11:20:34,985 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,985 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 11:20:34,986 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,986 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 11:20:34,986 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file853543400652395703.xml
2016-08-27 11:20:34,986 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file853543400652395703.xml
2016-08-27 11:20:34,989 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,989 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 11:20:34,989 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,989 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 11:20:34,990 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,990 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 11:20:34,990 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,990 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 11:20:34,990 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,990 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 11:20:34,990 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4051387596955347036.xml
2016-08-27 11:20:34,991 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4051387596955347036.xml
2016-08-27 11:20:34,992 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,992 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 11:20:34,992 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,992 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:20:34,993 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,993 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:20:34,993 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,993 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:34,993 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,993 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:20:34,993 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8547548910688586056.xml
2016-08-27 11:20:34,994 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8547548910688586056.xml
2016-08-27 11:20:34,995 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,995 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 11:20:34,995 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,996 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:20:34,996 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:34,996 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:20:34,996 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,996 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:34,996 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:34,996 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:20:34,997 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file558302484614168031.xml
2016-08-27 11:20:34,997 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file558302484614168031.xml
2016-08-27 11:20:34,999 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:34,999 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 11:20:34,999 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:34,999 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:20:34,999 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,000 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:20:35,000 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:35,000 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:35,000 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:35,000 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:20:35,058 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,059 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,059 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,059 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,061 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,061 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 11:20:35,061 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,061 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 11:20:35,062 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,062 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 11:20:35,062 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,062 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 11:20:35,063 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,063 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 11:20:35,064 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,064 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 11:20:35,065 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,065 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 11:20:35,065 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,065 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 11:20:35,066 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,066 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,067 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,067 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,067 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,068 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 11:20:35,068 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,068 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 11:20:35,069 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,069 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,069 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,069 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,070 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,070 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 11:20:35,070 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,070 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 11:20:35,070 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,071 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 11:20:35,071 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,071 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 11:20:35,071 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,072 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 11:20:35,072 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,072 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 11:20:35,072 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,073 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 11:20:35,073 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,073 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 11:20:35,074 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,074 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,074 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,074 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,075 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,075 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 11:20:35,076 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,076 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 11:20:35,076 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,076 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,077 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,077 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,077 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,077 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-27 11:20:35,078 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,078 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-27 11:20:35,078 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,078 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-27 11:20:35,078 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,078 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-27 11:20:35,079 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,079 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-27 11:20:35,079 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,079 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-27 11:20:35,080 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,080 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-27 11:20:35,080 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,080 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-27 11:20:35,081 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,081 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,082 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,082 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,082 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,083 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-27 11:20:35,083 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,083 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-27 11:20:35,088 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 11:20:35,088 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 11:20:35,088 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 11:20:35,089 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 11:20:35,089 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 11:20:35,089 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 11:20:35,089 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 11:20:35,089 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 11:20:35,090 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 11:20:35,090 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 11:20:35,090 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-27 11:20:35,090 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-27 11:20:35,091 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-27 11:20:35,091 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-27 11:20:35,091 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-27 11:20:35,092 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 11:20:35,092 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 11:20:35,092 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 11:20:35,093 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 11:20:35,093 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 11:20:35,093 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 11:20:35,093 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 11:20:35,093 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 11:20:35,094 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,094 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,094 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,094 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,094 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,094 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,094 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 11:20:35,097 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 11:20:35,099 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:20:35,099 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,099 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,099 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,099 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,100 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,100 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,100 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,100 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 11:20:35,100 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 11:20:35,100 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,101 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,101 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,101 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,101 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,101 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,101 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 11:20:35,102 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 11:20:35,102 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 11:20:35,102 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 11:20:35,102 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,102 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:20:35,102 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 11:20:35,102 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,103 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:20:35,103 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 11:20:35,103 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,103 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:20:35,103 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 11:20:35,103 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:20:35,104 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 11:20:35,104 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:20:35,105 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 11:20:35,105 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 11:20:35,105 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 11:20:35,105 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 11:20:35,106 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 11:20:35,106 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 11:20:35,106 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 11:20:35,106 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 11:20:35,106 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,106 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,107 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,107 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,107 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,107 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,107 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 11:20:35,107 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 11:20:35,107 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:20:35,108 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,108 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,108 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,108 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,108 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,108 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,108 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,108 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 11:20:35,109 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 11:20:35,109 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,109 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,109 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,109 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,109 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,109 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,109 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 11:20:35,110 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 11:20:35,110 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 11:20:35,110 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 11:20:35,110 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,110 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:20:35,110 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 11:20:35,110 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,110 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:20:35,111 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 11:20:35,111 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,111 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:20:35,111 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 11:20:35,111 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:20:35,111 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 11:20:35,111 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:20:35,112 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-27 11:20:35,112 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 11:20:35,112 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 11:20:35,112 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,112 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 11:20:35,112 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,112 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 11:20:35,112 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,112 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 11:20:35,113 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:20:35,113 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-27 11:20:35,113 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 11:20:35,113 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 11:20:35,113 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,113 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 11:20:35,114 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,114 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 11:20:35,114 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,114 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 11:20:35,114 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-27 11:20:35,115 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-27 11:20:35,115 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-27 11:20:35,115 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-27 11:20:35,115 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-27 11:20:35,115 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-27 11:20:35,116 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-27 11:20:35,116 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-27 11:20:35,116 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,116 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,116 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,116 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,117 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,117 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,117 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-27 11:20:35,117 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-27 11:20:35,117 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:20:35,117 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,118 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,118 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,118 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,118 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,118 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,118 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,118 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-27 11:20:35,119 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-27 11:20:35,119 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,119 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,119 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,119 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,119 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-27 11:20:35,119 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,119 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-27 11:20:35,120 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-27 11:20:35,120 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-27 11:20:35,120 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-27 11:20:35,120 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,120 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:20:35,120 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-27 11:20:35,120 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,120 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:20:35,120 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-27 11:20:35,121 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,121 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-27 11:20:35,121 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-27 11:20:35,121 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:20:35,121 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-27 11:20:35,121 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-27 11:20:35,122 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-27 11:20:35,122 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 11:20:35,122 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 11:20:35,122 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,122 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 11:20:35,122 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,122 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 11:20:35,123 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,123 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 11:20:35,123 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-27 11:20:35,123 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-27 11:20:35,123 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-27 11:20:35,123 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-27 11:20:35,123 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,123 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-27 11:20:35,124 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,124 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-27 11:20:35,124 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-27 11:20:35,124 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-27 11:20:35,124 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,125 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,125 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,125 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,126 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,126 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,126 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,126 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,127 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,127 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,127 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,127 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,128 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,129 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,129 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,129 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,130 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,130 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,130 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,130 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,131 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,131 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,131 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,132 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,132 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,133 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,133 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,133 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,134 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,134 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,134 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,135 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,135 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,135 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,135 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,136 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,136 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,136 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,137 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,137 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,137 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,138 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,138 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,138 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-27 11:20:35,139 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-27 11:20:35,140 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-27 11:20:35,141 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-27 11:20:35,141 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-27 11:20:35,144 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6788801546326242053.xml
2016-08-27 11:20:35,147 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6788801546326242053.xml hdfs = false
2016-08-27 11:20:35,147 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6788801546326242053.xml
2016-08-27 11:20:35,149 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,149 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:20:35,151 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile4410675772394903076.xml
2016-08-27 11:20:35,154 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile4410675772394903076.xml hdfs = false
2016-08-27 11:20:35,154 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile4410675772394903076.xml
2016-08-27 11:20:35,156 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,156 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:20:35,156 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,156 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,156 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:35,157 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType8443543001608712015.xml
2016-08-27 11:20:35,159 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType8443543001608712015.xml hdfs = false
2016-08-27 11:20:35,160 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType8443543001608712015.xml
2016-08-27 11:20:35,161 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,161 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:20:35,165 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-27 11:20:35,165 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 11:20:35,165 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2110249108451415272.xml
2016-08-27 11:20:35,165 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2110249108451415272.xml
2016-08-27 11:20:35,167 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 11:20:35,167 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 11:20:35,167 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 11:20:35,169 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2110249108451415272.xml
2016-08-27 11:20:35,169 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile2110249108451415272.xml
2016-08-27 11:20:35,171 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,171 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 11:20:35,171 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 11:20:35,171 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-27 11:20:35,172 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-27 11:20:35,172 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-27 11:20:35,173 INFO  utils.Inputs       [] - StopList file being created
2016-08-27 11:20:35,174 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/stopListFile274591930982772847.tmp
2016-08-27 11:20:35,174 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3880524420835778592.xml
2016-08-27 11:20:35,178 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3880524420835778592.xml hdfs = false
2016-08-27 11:20:35,178 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3880524420835778592.xml
2016-08-27 11:20:35,181 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,181 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:20:35,181 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,182 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,182 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:35,182 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,184 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 11:20:35,184 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile750810608287475236.xml
2016-08-27 11:20:35,184 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile750810608287475236.xml
2016-08-27 11:20:35,185 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 11:20:35,186 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 11:20:35,186 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 11:20:35,186 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 11:20:35,187 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile750810608287475236.xml
2016-08-27 11:20:35,188 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile750810608287475236.xml
2016-08-27 11:20:35,189 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,190 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 11:20:35,190 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 11:20:35,190 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-27 11:20:35,190 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,191 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-27 11:20:35,191 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,191 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-27 11:20:35,191 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:35,191 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-27 11:20:35,192 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-27 11:20:35,470 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-27 11:20:35,714 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-27 11:20:35,715 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-27 11:20:35,715 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2474432727219880722.xml
2016-08-27 11:20:35,717 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2474432727219880722.xml hdfs = false
2016-08-27 11:20:35,718 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2474432727219880722.xml
2016-08-27 11:20:35,720 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,720 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:20:35,720 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,720 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,721 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:35,721 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,721 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 11:20:35,721 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3464829230134509742.xml
2016-08-27 11:20:35,721 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3464829230134509742.xml
2016-08-27 11:20:35,723 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 11:20:35,723 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 11:20:35,723 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 11:20:35,723 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 11:20:35,724 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3464829230134509742.xml
2016-08-27 11:20:35,725 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3464829230134509742.xml
2016-08-27 11:20:35,726 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,726 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 11:20:35,727 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 11:20:35,727 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-27 11:20:35,727 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-27 11:20:35,728 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2562357776444121493.xml
2016-08-27 11:20:35,732 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2562357776444121493.xml hdfs = false
2016-08-27 11:20:35,732 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2562357776444121493.xml
2016-08-27 11:20:35,734 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,734 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-27 11:20:35,735 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,735 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,735 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:35,735 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:35,735 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-27 11:20:35,736 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8029486040666329740.xml
2016-08-27 11:20:35,736 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8029486040666329740.xml
2016-08-27 11:20:35,737 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-27 11:20:35,738 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-27 11:20:35,738 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-27 11:20:35,738 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-27 11:20:35,741 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8029486040666329740.xml
2016-08-27 11:20:35,742 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile8029486040666329740.xml
2016-08-27 11:20:35,743 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:35,743 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-27 11:20:35,743 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-27 11:20:35,744 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-27 11:20:35,744 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-27 11:20:36,003 INFO  utils.Inputs       [] - StopList file being created
2016-08-27 11:20:36,003 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/stopListFile686780328399155958.tmp
2016-08-27 11:20:36,004 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/stopListFile686780328399155958.tmp
2016-08-27 11:20:36,004 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile1864912931690077843.xml
2016-08-27 11:20:36,007 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile1864912931690077843.xml hdfs = false
2016-08-27 11:20:36,007 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile1864912931690077843.xml
2016-08-27 11:20:36,010 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-27 11:20:36,010 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-27 11:20:36,010 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:20:36,010 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:36,011 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,011 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,011 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:36,012 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:36,013 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,013 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-27 11:20:36,013 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2463270466747408239.xml
2016-08-27 11:20:36,014 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2463270466747408239.xml
2016-08-27 11:20:36,015 INFO  utils.TestUtils    [] - elementName = date
2016-08-27 11:20:36,015 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:20:36,015 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:36,016 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-27 11:20:36,016 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-27 11:20:36,016 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:20:36,016 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 11:20:36,018 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-27 11:20:36,020 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7168932673413788735.xml
2016-08-27 11:20:36,020 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2463270466747408239.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7168932673413788735.xml
2016-08-27 11:20:36,021 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:20:36,021 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:36,021 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:20:36,022 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 11:20:36,023 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-27 11:20:36,023 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1312528133886815287.xml
2016-08-27 11:20:36,023 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2463270466747408239.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7168932673413788735.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1312528133886815287.xml
2016-08-27 11:20:36,024 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:20:36,025 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-27 11:20:36,025 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:36,025 INFO  utils.TestUtils    [] - filterName = qname
2016-08-27 11:20:36,026 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-27 11:20:36,027 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8824328487253882511.xml
2016-08-27 11:20:36,027 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2463270466747408239.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7168932673413788735.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1312528133886815287.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8824328487253882511.xml
2016-08-27 11:20:36,028 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:20:36,028 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:36,028 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:20:36,029 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-27 11:20:36,029 INFO  utils.TestUtils    [] - filterName = ip
2016-08-27 11:20:36,030 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-27 11:20:36,030 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6337391800830589448.xml
2016-08-27 11:20:36,030 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2463270466747408239.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7168932673413788735.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1312528133886815287.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8824328487253882511.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6337391800830589448.xml
2016-08-27 11:20:36,031 INFO  utils.TestUtils    [] - elementName = qname
2016-08-27 11:20:36,031 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-27 11:20:36,032 INFO  utils.TestUtils    [] - elementName = ip
2016-08-27 11:20:36,033 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2463270466747408239.xml
2016-08-27 11:20:36,033 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2463270466747408239.xml
2016-08-27 11:20:36,035 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:36,035 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-27 11:20:36,035 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:36,035 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:20:36,036 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-27 11:20:36,036 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-27 11:20:36,036 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,036 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:36,036 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,036 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:20:36,036 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:36,036 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-27 11:20:36,036 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:36,037 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-27 11:20:36,037 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,037 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-27 11:20:36,037 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 11:20:36,085 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7168932673413788735.xml
2016-08-27 11:20:36,085 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file7168932673413788735.xml
2016-08-27 11:20:36,087 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:36,087 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-27 11:20:36,087 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:36,088 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-27 11:20:36,089 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,089 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-27 11:20:36,089 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,089 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-27 11:20:36,090 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,090 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-27 11:20:36,090 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 11:20:36,127 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1312528133886815287.xml
2016-08-27 11:20:36,128 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file1312528133886815287.xml
2016-08-27 11:20:36,134 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:36,135 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-27 11:20:36,135 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:36,136 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-27 11:20:36,136 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:36,136 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:20:36,137 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,137 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:36,137 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,137 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-27 11:20:36,137 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-27 11:20:36,170 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8824328487253882511.xml
2016-08-27 11:20:36,171 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8824328487253882511.xml
2016-08-27 11:20:36,173 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:36,173 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-27 11:20:36,173 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:36,173 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:20:36,173 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:36,173 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:20:36,174 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,174 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:36,174 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,174 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:20:36,174 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-27 11:20:36,174 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-27 11:20:36,197 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6337391800830589448.xml
2016-08-27 11:20:36,198 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6337391800830589448.xml
2016-08-27 11:20:36,199 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-27 11:20:36,199 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-27 11:20:36,199 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-27 11:20:36,199 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-27 11:20:36,199 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-27 11:20:36,199 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-27 11:20:36,200 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,200 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-27 11:20:36,200 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-27 11:20:36,201 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-27 11:20:36,205 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:20:36,207 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:36,209 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4617414267983755675.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1212267556918562564.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1347179463721899179.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile649661144050333531.txt
2016-08-27 11:20:36,211 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:20:36,218 INFO  encryption.Paillier  [] - Parameters = p = -19498085 q = -2092507515 N = -2113887865 NSquared = -2115300047 lambdaN = 715514172 bitLength = 384
2016-08-27 11:20:36,219 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:37,202 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:20:37,204 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:37,469 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:37,606 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:37,606 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:20:37,610 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:37,613 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:37,616 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:37,618 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:37,621 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:37,624 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:20:37,627 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:20:37,630 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:20:37,633 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:37,633 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:37,641 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:37,642 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:37,803 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:37,804 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:37,806 INFO  utils.BaseTests    [] - results:
2016-08-27 11:20:37,806 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:20:37,807 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:20:37,809 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:37,810 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:37,810 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:20:37,810 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:37,811 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:37,811 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:20:37,811 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:20:37,812 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:37,812 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:37,812 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:20:37,812 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:37,813 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:37,813 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:20:37,814 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:20:37,814 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-27 11:20:37,815 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:37,816 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7975571333505559406.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3933073964204283337.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7022074614109759985.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6258870185310824541.txt
2016-08-27 11:20:37,816 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:20:37,832 INFO  encryption.Paillier  [] - Parameters = p = 626696337 q = -1981637447 N = -1856478007 NSquared = 601728465 lambdaN = 1601656720 bitLength = 384
2016-08-27 11:20:37,832 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:38,312 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:20:38,313 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:38,463 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:38,524 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:38,524 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 11:20:38,525 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-27 11:20:38,527 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-27 11:20:38,528 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-27 11:20:38,530 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-27 11:20:38,533 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-27 11:20:38,535 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-27 11:20:38,536 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:20:38,537 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 11:20:38,538 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:38,538 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:38,540 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:38,540 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:38,610 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:38,610 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:38,611 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:38,611 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 11:20:38,611 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 11:20:38,611 INFO  utils.BaseTests    [] - correctResults:
2016-08-27 11:20:38,611 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":fcd518e5-624d-4bbe-8ef4-94192aa55a4d,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 11:20:38,611 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":fcd518e5-624d-4bbe-8ef4-94192aa55a4d,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:38,612 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":fcd518e5-624d-4bbe-8ef4-94192aa55a4d,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 11:20:38,612 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-27 11:20:38,612 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-27 11:20:38,612 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:38,613 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier648296509801361481.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2799746722935349812.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2012821434628760832.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile444513039167649090.txt
2016-08-27 11:20:38,613 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:20:38,618 INFO  encryption.Paillier  [] - Parameters = p = 1135079623 q = 1794827689 N = 1821767263 NSquared = -542066879 lambdaN = 1593413624 bitLength = 384
2016-08-27 11:20:38,618 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:39,036 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:20:39,037 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:39,160 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:39,215 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:39,216 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-27 11:20:39,217 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:20:39,218 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-27 11:20:39,219 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-27 11:20:39,220 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:20:39,222 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:20:39,224 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-27 11:20:39,226 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 11:20:39,227 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 11:20:39,229 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:39,229 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:39,231 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:39,231 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:39,297 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:39,297 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:39,298 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:39,299 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:39,299 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:39,299 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-27 11:20:39,299 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-27 11:20:39,299 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-27 11:20:39,300 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-27 11:20:39,300 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-27 11:20:39,300 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:39,301 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8194012181130493531.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7844375253064337688.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6573237364150691909.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8406210810711309042.txt
2016-08-27 11:20:39,301 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:20:39,315 INFO  encryption.Paillier  [] - Parameters = p = -1064966295 q = 1214103123 N = 1716450571 NSquared = 21106297 lambdaN = -1363826776 bitLength = 384
2016-08-27 11:20:39,315 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:39,721 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:20:39,722 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:39,845 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:39,899 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:39,900 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:39,901 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:39,901 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:39,902 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:39,902 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:39,959 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:39,960 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:39,961 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-27 11:20:39,961 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-27 11:20:39,961 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:20:39,961 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:39,962 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2325267546822659395.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7102159677039798871.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4012503895951394750.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2814024416753927111.txt
2016-08-27 11:20:39,962 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:20:39,973 INFO  encryption.Paillier  [] - Parameters = p = -1669289247 q = -231423707 N = 119559045 NSquared = 1115652889 lambdaN = -1808729696 bitLength = 384
2016-08-27 11:20:39,973 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:40,801 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:20:40,801 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:40,923 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:40,977 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:40,978 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:20:40,979 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:40,982 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:40,985 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:40,986 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:40,988 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:40,990 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:20:40,991 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:20:40,994 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:20:40,995 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:40,996 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:40,999 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:40,999 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:41,096 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:41,097 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:41,098 INFO  utils.BaseTests    [] - results:
2016-08-27 11:20:41,099 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:20:41,099 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:20:41,099 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:41,099 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:41,099 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:20:41,099 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:41,100 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:41,100 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:20:41,101 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:20:41,101 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:41,101 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:41,101 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:20:41,101 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:41,101 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:41,101 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:20:41,102 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:20:41,102 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:20:41,102 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:41,103 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5066058045908748490.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2597561724461330205.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1498037306080498421.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile683967929576156047.txt
2016-08-27 11:20:41,103 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:20:41,114 INFO  encryption.Paillier  [] - Parameters = p = 1142872477 q = -961204619 N = -147543359 NSquared = 1045226881 lambdaN = -1156044628 bitLength = 384
2016-08-27 11:20:41,115 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:41,946 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:20:41,946 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:42,075 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:42,129 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:42,129 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:20:42,131 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,133 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,135 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,136 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,138 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,139 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:20:42,141 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:20:42,142 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:20:42,143 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:42,144 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:42,147 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:42,147 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:42,241 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:42,241 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:42,243 INFO  utils.BaseTests    [] - results:
2016-08-27 11:20:42,243 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:20:42,243 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:20:42,243 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:42,243 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:42,243 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:20:42,243 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:42,244 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:42,244 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:20:42,244 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:20:42,244 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:42,244 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:42,244 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:20:42,244 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:42,245 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:42,245 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:20:42,245 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:20:42,245 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:20:42,246 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:42,246 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2258041115863892440.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4887175074370745192.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse877391574444699118.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8054720730358889923.txt
2016-08-27 11:20:42,247 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:20:42,257 INFO  encryption.Paillier  [] - Parameters = p = 1640155761 q = 144532975 N = -838429569 NSquared = -1340664063 lambdaN = 1710297264 bitLength = 384
2016-08-27 11:20:42,257 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:42,672 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:20:42,672 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:42,788 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:42,841 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:42,842 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:20:42,844 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,846 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,848 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,849 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,851 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:42,854 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:20:42,856 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:20:42,858 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:20:42,859 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:42,859 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:42,863 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:42,863 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:42,955 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:42,956 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:42,957 INFO  utils.BaseTests    [] - results:
2016-08-27 11:20:42,957 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:20:42,957 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:20:42,958 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:42,958 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:42,958 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:20:42,958 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:42,958 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:42,958 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:20:42,958 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:20:42,958 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:42,958 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:42,959 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:20:42,959 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:42,959 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:42,959 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:20:42,959 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:20:42,959 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:20:42,959 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:42,960 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5053329048342959818.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7909683244907401240.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5698121938906074526.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile961588981273040553.txt
2016-08-27 11:20:42,960 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 11:20:42,980 INFO  encryption.Paillier  [] - Parameters = p = 566019591 q = -1205096245 N = -738011251 NSquared = -1682824279 lambdaN = -49467298 bitLength = 384
2016-08-27 11:20:42,981 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:43,805 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:20:43,805 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:43,922 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:43,974 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:43,974 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:20:43,975 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:43,977 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:43,979 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:43,980 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:43,981 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:43,983 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:20:43,984 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:20:43,985 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:20:43,986 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:43,986 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:43,989 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:43,989 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:44,080 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:44,080 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:44,083 INFO  utils.BaseTests    [] - results:
2016-08-27 11:20:44,084 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:20:44,084 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-27 11:20:44,084 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:44,084 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:44,084 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:20:44,085 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:44,085 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:44,085 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:20:44,085 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:20:44,085 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:44,086 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:44,086 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:20:44,086 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:44,086 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:44,086 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-27 11:20:44,087 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-27 11:20:44,087 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-27 11:20:44,087 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:44,088 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5887641292480731921.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7560589115172554501.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7200840262271694767.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4276074421312680492.txt
2016-08-27 11:20:44,088 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 11:20:44,095 INFO  encryption.Paillier  [] - Parameters = p = 1485499921 q = 1735495967 N = 1445688591 NSquared = -1668237599 lambdaN = 1259830000 bitLength = 384
2016-08-27 11:20:44,095 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:44,540 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:20:44,540 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:44,656 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:44,707 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:44,708 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 11:20:44,709 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-27 11:20:44,711 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-27 11:20:44,712 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-27 11:20:44,713 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-27 11:20:44,714 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-27 11:20:44,716 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-27 11:20:44,717 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:20:44,718 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-27 11:20:44,719 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:44,719 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:44,720 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:44,720 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:44,782 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:44,782 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:44,783 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:44,783 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 11:20:44,783 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 11:20:44,783 INFO  utils.BaseTests    [] - correctResults:
2016-08-27 11:20:44,784 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":fcd518e5-624d-4bbe-8ef4-94192aa55a4d,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-27 11:20:44,784 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":fcd518e5-624d-4bbe-8ef4-94192aa55a4d,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:44,784 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":fcd518e5-624d-4bbe-8ef4-94192aa55a4d,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-27 11:20:44,784 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-27 11:20:44,784 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-27 11:20:44,784 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:44,785 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2048238974204913505.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5271236442867798229.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3623650925925210722.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2919014288374817448.txt
2016-08-27 11:20:44,785 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 11:20:44,793 INFO  encryption.Paillier  [] - Parameters = p = 1469470471 q = 353378719 N = -888671143 NSquared = 1813497585 lambdaN = 195947142 bitLength = 384
2016-08-27 11:20:44,793 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:45,263 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:20:45,264 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:45,377 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:45,426 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:45,426 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-27 11:20:45,427 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:20:45,428 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-27 11:20:45,429 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-27 11:20:45,430 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:20:45,430 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-27 11:20:45,431 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-27 11:20:45,432 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 11:20:45,433 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-27 11:20:45,433 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:45,434 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:45,435 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:45,435 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:45,499 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:45,499 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:45,501 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:45,501 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:45,501 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-27 11:20:45,501 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-27 11:20:45,501 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-27 11:20:45,501 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-27 11:20:45,502 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-27 11:20:45,502 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-27 11:20:45,502 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:45,502 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier76807539592299413.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query9054530310959345942.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3588152532654075884.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4734946545180800495.txt
2016-08-27 11:20:45,502 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-27 11:20:45,515 INFO  encryption.Paillier  [] - Parameters = p = 1401438023 q = -1204938697 N = 519454785 NSquared = -921923455 lambdaN = 161477730 bitLength = 384
2016-08-27 11:20:45,515 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:45,909 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-27 11:20:45,909 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:46,029 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:46,080 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:46,080 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:46,081 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:46,082 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:46,082 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:46,082 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:46,137 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:46,138 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:46,139 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-27 11:20:46,140 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-27 11:20:46,140 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-27 11:20:46,140 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-27 11:20:46,140 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6594153841881727204.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5610596896441776681.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1192324451136706014.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile309161550058909929.txt
2016-08-27 11:20:46,140 INFO  wideskies.QueryInfo  [] - identifier = fcd518e5-624d-4bbe-8ef4-94192aa55a4d numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-27 11:20:46,145 INFO  encryption.Paillier  [] - Parameters = p = 1407281045 q = 736546733 N = 150108849 NSquared = 1097936481 lambdaN = 575312092 bitLength = 384
2016-08-27 11:20:46,145 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-27 11:20:46,981 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-27 11:20:46,981 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-27 11:20:46,981 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-27 11:20:47,101 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-27 11:20:47,152 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-27 11:20:47,153 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-27 11:20:47,155 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:47,158 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:47,159 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:47,161 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:47,162 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-27 11:20:47,164 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-27 11:20:47,165 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-27 11:20:47,167 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-27 11:20:47,169 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-27 11:20:47,169 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-27 11:20:47,172 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-27 11:20:47,172 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-27 11:20:47,259 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-27 11:20:47,259 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-27 11:20:47,261 INFO  utils.BaseTests    [] - results:
2016-08-27 11:20:47,261 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-27 11:20:47,261 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:47,261 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:47,261 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-27 11:20:47,261 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:47,262 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-27 11:20:47,262 INFO  utils.BaseTests    [] - correctResults: 
2016-08-27 11:20:47,262 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-27 11:20:47,262 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:47,262 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:47,262 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-27 11:20:47,263 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:47,263 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"fcd518e5-624d-4bbe-8ef4-94192aa55a4d","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-27 11:20:47,263 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-30 09:53:52,046 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-30 09:53:52,051 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-30 09:53:52,055 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-30 09:53:52,057 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-30 09:53:52,057 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-30 09:53:52,058 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-30 09:53:52,058 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-30 09:53:52,059 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-30 09:53:52,070 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-30 09:53:52,073 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-30 09:53:52,074 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-30 09:53:52,077 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-30 09:53:52,077 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-30 09:53:52,078 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-30 09:53:52,078 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-30 09:53:52,079 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-30 09:53:52,079 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-30 09:53:52,079 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-30 09:53:52,080 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-30 09:53:52,081 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-30 09:53:52,081 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-30 09:53:52,082 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-30 09:53:52,082 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-30 09:53:52,185 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-30 09:53:52,186 INFO  general.KeyedHashTest  [] - hash1 = 715 hash1 = 1011001011
2016-08-30 09:53:52,186 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-30 09:53:52,187 INFO  general.KeyedHashTest  [] - hash2 = -507510069 hash2 = -11110001111111111110100110101
2016-08-30 09:53:52,187 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-30 09:53:52,188 INFO  general.KeyedHashTest  [] - hash3 = -507510069 hash3 = -11110001111111111110100110101
2016-08-30 09:53:52,189 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-30 09:53:52,196 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-30 09:53:52,198 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-30 09:53:52,201 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-30 09:53:52,203 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-30 09:53:52,204 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-30 09:53:52,205 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-30 09:53:52,206 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-30 09:53:52,210 INFO  general.PaillierTest  [] - i = 0
2016-08-30 09:53:52,218 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-30 09:53:52,264 INFO  encryption.Paillier  [] - Parameters = p = -1261792547 q = 432982463 N = -1287055389 NSquared = 330339145 lambdaN = 1918360996 bitLength = 201
2016-08-30 09:53:52,327 INFO  general.PaillierTest  [] - encM1 = 2082677501 encM2 = -2050778471
2016-08-30 09:53:52,327 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:53:52,328 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1018549029 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:53:54,011 INFO  encryption.Paillier  [] - Parameters = p = 1439558871 q = 815257829 N = -2082782125 NSquared = -365022487 lambdaN = 708722628 bitLength = 3072
2016-08-30 09:53:54,137 INFO  general.PaillierTest  [] - encM1 = -730502283 encM2 = 1271387489
2016-08-30 09:53:54,253 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:53:54,314 INFO  general.PaillierTest  [] - encM1_times_encM2 = -745200119 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:53:59,885 INFO  encryption.Paillier  [] - Parameters = p = 954619193 q = 79428809 N = -1923086911 NSquared = -354346111 lambdaN = -2091740632 bitLength = 3866
2016-08-30 09:54:00,126 INFO  general.PaillierTest  [] - encM1 = 406358317 encM2 = 1049416100
2016-08-30 09:54:00,353 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:00,460 INFO  general.PaillierTest  [] - encM1_times_encM2 = 409505318 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:00,460 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-30 09:54:00,461 INFO  general.PaillierTest  [] - i = 0
2016-08-30 09:54:00,465 INFO  encryption.Paillier  [] - testBit true
 N = 10111000011001101011100100110000110111001001101101110000001010001101001100000011111010010110000011000011100101111111110100000100111010100000110010001111100110101001110010101001100010110000000000101011
2016-08-30 09:54:00,465 INFO  encryption.Paillier  [] - Parameters = p = 408065629 q = 868022311 N = -1450508245 NSquared = -189659335 lambdaN = 784185556 bitLength = 201
2016-08-30 09:54:00,465 INFO  general.PaillierTest  [] - encM1 = 1188645571 encM2 = 1827367026
2016-08-30 09:54:00,466 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:00,466 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1861352042 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:01,293 INFO  encryption.Paillier  [] - testBit true
 N = 100110110111001010100001011101010000111001101111011110011101101001011011001010011011001010011111001001100110001100000111101011100010111111000010011001011111011001110101101101001011010100101010010111000101010010101101110110011100000110000010110010101001110001111011111010000011001000010010101101100110010001111101010001110000000011010101101010010111110000100000001110111000101100010100001011111100100111000101111110100110010110010100010111010100100100000000011000010100000001001011111010001101010001000111100101111110100000110101111011110000101101101111111100010111000111101101010000011001101100100011110001010110101111000110111010100001110111010011110100100111001011100110001011001001100111011001001000111001111101110001100110111100010101110101111000010111111111001001010110111111100101000101101000110111100010011100101000110000000000101001100111001010011011010111011101011001100111001111000011110101010100100010101101001001111101010111010000010000100010011110100000000001110010001000100010110010000100001110101000111000111010010010100000000010110010110011100111101100000100110001111101000011001010001001101111110101010110000011001011100001001100100111110110101110010010111000010111101000000000000001101001000101011000001001001000001111001011010010011110000010001111010000111000001110000100001010011101001101001010100001001010010000111011010100101010011011100001100000111001111001011001010111101010010001100110011110101100111011111010010101110100100100101110010001011111010000100100001011111011101101100000110100010001000100010110011111011010011011111011110011101110110101001100010010010000110000100110100111000100010010111010111000111010111101001100011010010011000111101100101001101110010001101011001001010100100111010001101111110000111010001111011100000100000101100100001111100110111111001101001000101111001111100011000101010100001100101100001010001110111001001100011100000111110110110010111101011011111000100111100110001101110110110110111100111010110000110110101011100010110001001100000100100010101000010110111010111000101011100010000011100010001000011101000011100011110110101101101110000101101100111101011110000011001001110011100100100001001001100000110110001100010101001000111010101010010101000000100100111011001101000000100111001111000111110101001100000111000001000010001100110011111001010001011100111001101110100010010010001111101111110011111011010110011101101001000100101010100110000010000100111110100111011101001011010010000000101010001110011010111010011001010001110101000010011110100001011001110011010001010000001000110010000111110100100000010101101001000100100100010011100011110111000001011001101101000011011011001011110000110101101101111101110100010100000010000110001000100100000000001110111101100001001111001011000101010100111010101010100110100111100100101100000110110100001011010100111110110001010101001001011001110011000110101011110000000001110010100111111101111100100110101100000001011111110011100111110110000001001110110010001100011011111110100000001011110011000110110100100010001111011010011000111111101101000101010001100001010101011000101010100011110001
2016-08-30 09:54:01,297 INFO  encryption.Paillier  [] - Parameters = p = 1427108495 q = 1141599359 N = 1432529137 NSquared = -771673375 lambdaN = 1242292646 bitLength = 3072
2016-08-30 09:54:01,417 INFO  general.PaillierTest  [] - encM1 = 643426462 encM2 = 2138164079
2016-08-30 09:54:01,534 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:01,595 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1750829439 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:04,259 INFO  encryption.Paillier  [] - testBit false

2016-08-30 09:54:05,877 INFO  encryption.Paillier  [] - testBit false
 N = 1110000001111100011101000001011010000111100100100001010010110010111100101000100101110011111100100100101000101010100101000001111000010000011101011010000100000010011000110110011110100110000010010110101101000100100000110100001000101101011110010100110010101100100011011010100101000011110110101010001011100011100110011111110111010010101000111010011111011111111001000110101100101011001100100111110110101001011101101101010001100000011010110100011111100110010101001010110110010010010000110010110101110010010001000101000001101100011111011000010110101100100110010000011010000010111010101100001100001011001111100100100110010000111101011100101011101111111110100100101001100111000111001110111000100101110100101100010101010110000010000011101100111100001001110111011011001110000010110011010000100000101010011101111111111000010001110011111111100010000111010111111001001011100101000110011101001110011000101100011101110000100000100001010100011110010010111110101101111010101100111111010110010110111111110111001000010110110001100011001110001101101111011000001001011110001100001101110111011011011011010110011001100011000100011111000100100010000100101001100111011000110001110001111110011000011100001010101001000001111111101011111110001110000101001011011001001101000011101000100010010110010010110000100100011010000000100011010100100110110001110011000101000000101001100101011101100111000011110101111001010100001011010011011101100011111011011001110101101110111100101110111111101101110001100110100101100100000001110111010011010011001110010100100011100111100000111011100110100111100101011101111011001111100100111010000011101110001101101111001110010001001110101110111111010011001101111100000110000001101011000100110111101000111010100011010100010101101010100011010100100011110110000100011111100000110001001001111010110010110101100111110100011001111100001010101101111110111001110111100110011010000101010100011010101010111001101110111100001001010111000000101111111001010111001100001100100110011011110111001100110010000000111101001011011101111100101110010001100000101010111011011001101111100101110101001000111110111001010000101101110101011101000111100001100100111100010110000011011111110111001010001100101111000011101010111001110101101001110110011101000100000000000010111110000001010011011000001110110011100010101010010111000011111011100111010111000011010010110101111001001011110110001100111110101011001111110000000110111101010010101110110100101000101101000000000010101101111001111110111101101010001101110110010011011000000111101011011100011011111011111111011010000001000000001110011011001111011000100010101110011011110111111011111110110010111001100111010010001101101101100000001100111111011001111010000011000010010011000001101101011100000000111111111110101101000000011010010001110011000110100001101001111100001100010001111101010110111101010010010010001101011111011101001110001010101110100111110111110110111011110011110101011010001110010100100001101111010100011101110101110011000010100101001000100100000010001101111100101010100011010000011001101101110000011111100101011100010000101011110000100110010000010101011011111111000100000011110101000111110111101001001001110010010011110001011010111100010001110000011010110110100111101100010010101110011011110011001000000000101100001101111000000001001110011011110011010111100110100010001111110010000111100010110010110001010010000111101001000010100000010010100101000010110101101101000000100000101111001000010010111010010110110011011110010001101111010000110001001000011011111101110011111111111110001101001110010111000001100011110001000010101000011010101001000111011010011011110100011111111011000001010001001000000101011111100110010001111011101010100000001111111001101111111001000000110001010000000100110101110100010100000110000001001001111000000110011110010101001010000011
2016-08-30 09:54:13,421 INFO  encryption.Paillier  [] - testBit false

2016-08-30 09:54:17,373 INFO  encryption.Paillier  [] - testBit false

2016-08-30 09:54:19,213 INFO  encryption.Paillier  [] - testBit false

2016-08-30 09:54:19,720 INFO  encryption.Paillier  [] - testBit false

2016-08-30 09:54:21,380 INFO  encryption.Paillier  [] - testBit false

2016-08-30 09:54:23,585 INFO  encryption.Paillier  [] - testBit true

2016-08-30 09:54:23,589 INFO  encryption.Paillier  [] - Parameters = p = 1721797619 q = 628295287 N = 1964097525 NSquared = 7962745 lambdaN = -192997690 bitLength = 3779
2016-08-30 09:54:23,809 INFO  general.PaillierTest  [] - encM1 = -75129912 encM2 = 346942472
2016-08-30 09:54:24,027 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:24,136 INFO  general.PaillierTest  [] - encM1_times_encM2 = 882645616 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:24,136 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-30 09:54:24,136 INFO  general.PaillierTest  [] - i = 0
2016-08-30 09:54:24,143 INFO  encryption.Paillier  [] - Parameters = p = 998041477 q = 1517474401 N = -612838555 NSquared = -1421892135 lambdaN = -1855830432 bitLength = 201
2016-08-30 09:54:24,144 INFO  general.PaillierTest  [] - encM1 = 1131104330 encM2 = 479337016
2016-08-30 09:54:24,144 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:24,144 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1580800938 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:24,739 INFO  encryption.Paillier  [] - Parameters = p = 1132813873 q = 1483804173 N = 613250685 NSquared = -460752631 lambdaN = -500841840 bitLength = 3072
2016-08-30 09:54:24,854 INFO  general.PaillierTest  [] - encM1 = 896148796 encM2 = -773044438
2016-08-30 09:54:24,973 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:25,030 INFO  general.PaillierTest  [] - encM1_times_encM2 = 502949601 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:27,078 INFO  encryption.Paillier  [] - Parameters = p = -114817045 q = 1851505591 N = 602886653 NSquared = 1588073481 lambdaN = -1199945114 bitLength = 3891
2016-08-30 09:54:27,316 INFO  general.PaillierTest  [] - encM1 = -760754131 encM2 = -1933081030
2016-08-30 09:54:27,545 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:27,662 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2063838045 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:27,662 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-30 09:54:27,663 INFO  general.PaillierTest  [] - i = 0
2016-08-30 09:54:27,666 INFO  encryption.Paillier  [] - testBit true
 N = 10111001101000100100100111101001111111001111000001111101011011111110100010011100000000111000110100011000101100111110001100111101101010000001101111111011000010010001111111101011100110110110001101110101
2016-08-30 09:54:27,666 INFO  encryption.Paillier  [] - Parameters = p = -1103746551 q = 341145869 N = -342137995 NSquared = 1683075961 lambdaN = 1223915112 bitLength = 201
2016-08-30 09:54:27,666 INFO  general.PaillierTest  [] - encM1 = 1464963910 encM2 = 128868571
2016-08-30 09:54:27,666 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:27,667 INFO  general.PaillierTest  [] - encM1_times_encM2 = -443284809 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:36,494 INFO  encryption.Paillier  [] - testBit false

2016-08-30 09:54:37,292 INFO  encryption.Paillier  [] - testBit true

2016-08-30 09:54:37,294 INFO  encryption.Paillier  [] - Parameters = p = 1515482369 q = -953095115 N = -1087931083 NSquared = 2036518137 lambdaN = -137526528 bitLength = 3072
2016-08-30 09:54:37,408 INFO  general.PaillierTest  [] - encM1 = -1844473564 encM2 = -1296698151
2016-08-30 09:54:37,524 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:37,584 INFO  general.PaillierTest  [] - encM1_times_encM2 = 762180620 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:41,838 INFO  encryption.Paillier  [] - testBit true

2016-08-30 09:54:41,842 INFO  encryption.Paillier  [] - Parameters = p = 1247664051 q = -1388055245 N = 184108969 NSquared = -1362023023 lambdaN = -1985233566 bitLength = 3831
2016-08-30 09:54:42,071 INFO  general.PaillierTest  [] - encM1 = -1351956405 encM2 = 1402911662
2016-08-30 09:54:42,297 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:42,410 INFO  general.PaillierTest  [] - encM1_times_encM2 = -19421207 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:42,411 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-30 09:54:42,411 INFO  general.PaillierTest  [] - i = 0
2016-08-30 09:54:42,414 INFO  encryption.Paillier  [] - Parameters = p = 549214887 q = 958510913 N = -752392857 NSquared = -678662287 lambdaN = -1130059328 bitLength = 201
2016-08-30 09:54:42,414 INFO  general.PaillierTest  [] - encM1 = 244992612 encM2 = -2136223601
2016-08-30 09:54:42,415 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:42,415 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2119814780 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:43,418 INFO  encryption.Paillier  [] - Parameters = p = -485135157 q = 822125061 N = -649882121 NSquared = -1792838575 lambdaN = -493436012 bitLength = 3072
2016-08-30 09:54:43,533 INFO  general.PaillierTest  [] - encM1 = -103744090 encM2 = -388478593
2016-08-30 09:54:43,651 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:43,712 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1341972570 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:45,315 INFO  encryption.Paillier  [] - Parameters = p = -614592739 q = -1331429405 N = -991147593 NSquared = 916578513 lambdaN = 1383977644 bitLength = 3577
2016-08-30 09:54:45,495 INFO  general.PaillierTest  [] - encM1 = -546046891 encM2 = -2025131176
2016-08-30 09:54:45,673 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:45,765 INFO  general.PaillierTest  [] - encM1_times_encM2 = -32268712 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:45,765 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-30 09:54:45,765 INFO  general.PaillierTest  [] - i = 0
2016-08-30 09:54:45,767 INFO  encryption.Paillier  [] - testBit false
 N = 10100010100110101000011000000010101010110101110001001011011001011000001110100101101101111001111110111100001000011011000111000100001101101011110001000111000110001000111011010111001000100110010100000101
2016-08-30 09:54:45,771 INFO  encryption.Paillier  [] - testBit false
 N = 10111011100010111111010001100110000101111101010111100111111111010010101110100110100001100010111111110100111001101111111011000100111010001000111111111110000110001000011000100100101111001101111010000101
2016-08-30 09:54:45,775 INFO  encryption.Paillier  [] - testBit true
 N = 10110101011110110001011001001101010101011001111111110101011110101111111111010110101001100000001110011110110011101111010100001111111011010000001000111010110001001011101100011010101010011000111010100101
2016-08-30 09:54:45,775 INFO  encryption.Paillier  [] - Parameters = p = 1240524479 q = 63530907 N = 447319717 NSquared = 693466713 lambdaN = -428367834 bitLength = 201
2016-08-30 09:54:45,776 INFO  general.PaillierTest  [] - encM1 = 1716476251 encM2 = -1562164653
2016-08-30 09:54:45,776 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:45,777 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1841639890 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:54:52,476 INFO  encryption.Paillier  [] - testBit false

2016-08-30 09:54:54,978 INFO  encryption.Paillier  [] - testBit false

2016-08-30 09:54:55,852 INFO  encryption.Paillier  [] - testBit true

2016-08-30 09:54:55,854 INFO  encryption.Paillier  [] - Parameters = p = -1886539647 q = 493305775 N = -1590532305 NSquared = -1779246431 lambdaN = -98649216 bitLength = 3072
2016-08-30 09:54:55,967 INFO  general.PaillierTest  [] - encM1 = -1005239575 encM2 = -626702536
2016-08-30 09:54:56,083 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:54:56,141 INFO  general.PaillierTest  [] - encM1_times_encM2 = -101167237 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:55:00,564 INFO  encryption.Paillier  [] - testBit true
 N = 11001000101100111011000100001111100100100101000001000110001100101011010101100111011000011101110000001101100101111000010101110000011001011011100001100110101110001010000101111110010100100101101101000110111110010111101001000010010010011100010110010110010101101010110000110101010101011101011000001101111110011110110011101011001111110011111100101110000110000110001100100001000101001010101110010010101010001101110100011111110110111000011111001001010100110010011100110111110010101010100111101100000100010100001101111000111100000011010000100010100010010010111001110011011111100000011001100011111000000110000011000101001000011011111001100101000110011010110110111101100010011011110111100101111001100000010110111010000111011110100001010110101010010111110010101110101101101011000000101000100100000101100001100011001001110000110000110000100001111101011101000000101010001011000110110101101011000010100011001111011000111010111011001110000111101111000100010010011011001010101110110110011101111110000111011100100101101000001110010011111000000011101100100110110110010000000001010111100101111110101100101110010100001110110011000101100001111010100101000010000111111010100111000010011100111010110000010010001101010000100101110110111001011101000010010111111010101101010001010000110101101111001111111001010001001101111011110011101001100000110101000110111000011010100111010011001010010011011001011100000010101101100011011110011011111111011000100101000001011110011001110011110011000100100011100110100100000011111110110110110110011100011001010111000011111110011101010101000100110101000001110101000100110111010010111011000111100100100101100110011110110000000101000000011101111010110011100110101011100010011101100011001001011000110110011110110011001000001101010100101011110110110010010101110111000100000101001101101111100101101100011000001111101101110100101010010111100101101010011111101011101001110100110001001111111011000111010011011001100111111011011110001011100001010101010100111110001100111011111000011111010011011110101111110100000101101000110100101011000100101111110101110110010011000101110111001010101100100110001111010001011010101100001100000010110001110011100110100000001011000011001100001110110011010001100100000100110110110110100001101000100001001101111110101000011100001011011011101101100000010011110110010111011001000110000110100101111111010101011011111000110100111111000101111110101001000110100000110011101000101100011000100010001001011011111100000101111100001100100011001110000011010000001101011111010010101100010100011001001000011010011111001011111011011010111001110110100010010001110001011101011110001111001011100010100101000010011110101011010111110001111111011011001100001000101001010100000010000001100101110111111111010100100101010011010101000111100000000101000110001000010111011101000100001010010010101101011111010111011110001000010010000000010011010110001000100110100110101000101100001000100100101000110000100111001000001000110001111000010010001101100000000111110100010100101000010010101111011101000100100010110010010101111101100100101001100111011011110010011101011011001111001001011011111000001000001010100010010110010010001001110111011011010110111011010011010001100011001011000001010011110101010111101110010111101000001100001111001101111111000100011110010001000011100101000011010110101000100001100101011101001111101011
2016-08-30 09:55:00,566 INFO  encryption.Paillier  [] - Parameters = p = 586158383 q = 1164370437 N = 563467243 NSquared = -184862279 lambdaN = 1553952860 bitLength = 3315
2016-08-30 09:55:00,727 INFO  general.PaillierTest  [] - encM1 = 1580317395 encM2 = -1455613420
2016-08-30 09:55:00,890 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:55:00,967 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1559256626 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:55:00,967 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-30 09:55:00,967 INFO  general.PaillierTest  [] - i = 0
2016-08-30 09:55:00,969 INFO  encryption.Paillier  [] - Parameters = p = 409202911 q = -571959405 N = -1047602931 NSquared = 477301417 lambdaN = 1705060430 bitLength = 201
2016-08-30 09:55:00,970 INFO  general.PaillierTest  [] - encM1 = -74227299 encM2 = 1461182131
2016-08-30 09:55:00,970 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:55:00,970 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1140787190 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:55:01,449 INFO  encryption.Paillier  [] - Parameters = p = -834668261 q = 808480833 N = 541724635 NSquared = -342399655 lambdaN = -1863527616 bitLength = 3072
2016-08-30 09:55:01,570 INFO  general.PaillierTest  [] - encM1 = 882827935 encM2 = -1793660965
2016-08-30 09:55:01,689 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:55:01,751 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2046577022 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:55:06,051 INFO  encryption.Paillier  [] - Parameters = p = 1777801095 q = -204738109 N = 560595669 NSquared = 1114375481 lambdaN = -506233658 bitLength = 3467
2016-08-30 09:55:06,221 INFO  general.PaillierTest  [] - encM1 = -146989976 encM2 = 2011416816
2016-08-30 09:55:06,394 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:55:06,478 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1415643568 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:55:06,479 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-30 09:55:06,479 INFO  general.PaillierTest  [] - i = 0
2016-08-30 09:55:06,481 INFO  encryption.Paillier  [] - testBit true
 N = 10111001010110001101010010000000111000001111111011111111111000011110111100000100100011110101000110100001111000011110111010001111010101011110010010110000110011011011101011101100001100001101111000100011
2016-08-30 09:55:06,482 INFO  encryption.Paillier  [] - Parameters = p = 1261988955 q = 1763319769 N = -332341725 NSquared = -1780434743 lambdaN = -1678825224 bitLength = 201
2016-08-30 09:55:06,483 INFO  general.PaillierTest  [] - encM1 = -816966404 encM2 = -336379719
2016-08-30 09:55:06,483 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:55:06,484 INFO  general.PaillierTest  [] - encM1_times_encM2 = 465779480 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:55:08,166 INFO  encryption.Paillier  [] - testBit true

2016-08-30 09:55:08,170 INFO  encryption.Paillier  [] - Parameters = p = -1012770439 q = 84629325 N = 963643493 NSquared = 1386641369 lambdaN = -600795672 bitLength = 3072
2016-08-30 09:55:08,286 INFO  general.PaillierTest  [] - encM1 = -1295995739 encM2 = -1899932972
2016-08-30 09:55:08,424 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:55:08,490 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1449352575 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:55:09,945 INFO  encryption.Paillier  [] - testBit true

2016-08-30 09:55:09,947 INFO  encryption.Paillier  [] - Parameters = p = 453789217 q = -674340017 N = 1031169839 NSquared = -1360340319 lambdaN = -2022311584 bitLength = 3289
2016-08-30 09:55:10,086 INFO  general.PaillierTest  [] - encM1 = -1099936369 encM2 = -1793026521
2016-08-30 09:55:10,224 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:55:10,295 INFO  general.PaillierTest  [] - encM1_times_encM2 = -370288757 multDecrypt = 7 m1_plus_m2 = 7
2016-08-30 09:55:10,296 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-30 09:55:10,300 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-30 09:55:10,301 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-30 09:55:10,301 INFO  utils.SystemConfiguration  [] - Loading properties from dirName = /root/
2016-08-30 09:55:10,302 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-30 09:55:10,306 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-30 09:55:10,308 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-30 09:55:10,309 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-30 09:55:10,310 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-30 09:55:10,310 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-30 09:55:10,310 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-30 09:55:10,310 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-30 09:55:10,310 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-30 09:55:10,316 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-30 09:55:10,316 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-30 09:55:10,317 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-30 09:55:10,318 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-30 09:55:10,319 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-30 09:55:10,319 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-30 09:55:10,320 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-30 09:55:10,320 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-30 09:55:10,328 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4278289268666923692.xml
2016-08-30 09:55:10,368 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-30 09:55:10,369 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4278289268666923692.xml hdfs = false
2016-08-30 09:55:10,369 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4278289268666923692.xml
2016-08-30 09:55:10,372 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,375 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-30 09:55:10,376 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:10,377 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,377 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,377 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,377 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,378 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,378 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,378 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4278289268666923692.xml hdfs = false
2016-08-30 09:55:10,378 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4278289268666923692.xml
2016-08-30 09:55:10,380 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,380 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-30 09:55:10,381 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:10,381 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,381 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,381 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,381 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,381 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,382 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,382 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-30 09:55:10,382 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml
2016-08-30 09:55:10,382 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml
2016-08-30 09:55:10,383 INFO  utils.TestUtils    [] - elementName = date
2016-08-30 09:55:10,383 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-30 09:55:10,383 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:10,383 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-30 09:55:10,384 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-30 09:55:10,384 INFO  utils.TestUtils    [] - elementName = ip
2016-08-30 09:55:10,385 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-30 09:55:10,386 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2486783707408847439.xml
2016-08-30 09:55:10,386 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2486783707408847439.xml
2016-08-30 09:55:10,387 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-30 09:55:10,387 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:10,387 INFO  utils.TestUtils    [] - elementName = ip
2016-08-30 09:55:10,388 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-30 09:55:10,389 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6390978550278628153.xml
2016-08-30 09:55:10,389 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2486783707408847439.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6390978550278628153.xml
2016-08-30 09:55:10,390 INFO  utils.TestUtils    [] - elementName = qname
2016-08-30 09:55:10,391 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-30 09:55:10,391 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:10,392 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-30 09:55:10,393 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file964826973116790719.xml
2016-08-30 09:55:10,393 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2486783707408847439.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6390978550278628153.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file964826973116790719.xml
2016-08-30 09:55:10,394 INFO  utils.TestUtils    [] - elementName = qname
2016-08-30 09:55:10,395 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:10,395 INFO  utils.TestUtils    [] - elementName = ip
2016-08-30 09:55:10,396 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-30 09:55:10,396 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9100248011859292642.xml
2016-08-30 09:55:10,397 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2486783707408847439.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6390978550278628153.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file964826973116790719.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9100248011859292642.xml
2016-08-30 09:55:10,398 INFO  utils.TestUtils    [] - elementName = qname
2016-08-30 09:55:10,398 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:10,398 INFO  utils.TestUtils    [] - elementName = ip
2016-08-30 09:55:10,401 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-30 09:55:10,401 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml
2016-08-30 09:55:10,402 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml
2016-08-30 09:55:10,403 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,403 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-30 09:55:10,404 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,404 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:10,404 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:10,405 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-30 09:55:10,405 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,405 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:10,405 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,405 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:10,405 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,406 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-30 09:55:10,406 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,406 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-30 09:55:10,406 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,406 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-30 09:55:10,407 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2486783707408847439.xml
2016-08-30 09:55:10,407 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2486783707408847439.xml
2016-08-30 09:55:10,408 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,409 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-30 09:55:10,409 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,409 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-30 09:55:10,409 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,409 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-30 09:55:10,409 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,409 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-30 09:55:10,409 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,410 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-30 09:55:10,410 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6390978550278628153.xml
2016-08-30 09:55:10,410 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6390978550278628153.xml
2016-08-30 09:55:10,411 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,412 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-30 09:55:10,412 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,412 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:10,412 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,412 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:10,412 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,412 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:10,413 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,413 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:10,413 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file964826973116790719.xml
2016-08-30 09:55:10,416 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file964826973116790719.xml
2016-08-30 09:55:10,418 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,418 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-30 09:55:10,418 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,418 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:10,418 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,418 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:10,418 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,419 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:10,419 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,419 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:10,419 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9100248011859292642.xml
2016-08-30 09:55:10,419 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9100248011859292642.xml
2016-08-30 09:55:10,420 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,421 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-30 09:55:10,421 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,421 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:10,421 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,421 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:10,421 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,422 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:10,422 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,422 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:10,422 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml
2016-08-30 09:55:10,422 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file6578051677903000723.xml
2016-08-30 09:55:10,424 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,424 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-30 09:55:10,424 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,424 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:10,424 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:10,424 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-30 09:55:10,425 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,425 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:10,425 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,425 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:10,425 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,425 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-30 09:55:10,426 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,426 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-30 09:55:10,426 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,426 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-30 09:55:10,426 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2486783707408847439.xml
2016-08-30 09:55:10,426 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2486783707408847439.xml
2016-08-30 09:55:10,428 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,428 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-30 09:55:10,429 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,429 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-30 09:55:10,429 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,429 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-30 09:55:10,429 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,429 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-30 09:55:10,429 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,429 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-30 09:55:10,430 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6390978550278628153.xml
2016-08-30 09:55:10,430 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file6390978550278628153.xml
2016-08-30 09:55:10,431 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,431 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-30 09:55:10,431 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,432 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:10,432 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,432 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:10,432 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,432 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:10,432 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,432 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:10,432 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file964826973116790719.xml
2016-08-30 09:55:10,432 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file964826973116790719.xml
2016-08-30 09:55:10,434 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,434 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-30 09:55:10,434 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,434 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:10,434 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,434 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:10,434 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,434 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:10,435 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,435 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:10,435 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9100248011859292642.xml
2016-08-30 09:55:10,435 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9100248011859292642.xml
2016-08-30 09:55:10,437 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,437 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-30 09:55:10,437 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:10,437 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:10,437 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,438 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:10,438 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,438 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:10,438 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,438 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:10,488 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,488 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,488 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,488 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,490 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,490 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-30 09:55:10,490 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,490 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-30 09:55:10,491 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,491 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-30 09:55:10,491 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,491 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-30 09:55:10,492 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,492 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-30 09:55:10,492 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,492 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-30 09:55:10,493 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,493 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-30 09:55:10,493 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,493 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-30 09:55:10,494 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,494 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,494 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,494 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,495 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,495 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-30 09:55:10,495 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,495 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-30 09:55:10,496 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,496 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,496 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,496 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,497 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,497 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-30 09:55:10,497 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,497 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-30 09:55:10,497 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,498 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-30 09:55:10,498 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,498 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-30 09:55:10,498 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,499 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-30 09:55:10,499 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,499 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-30 09:55:10,499 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,499 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-30 09:55:10,500 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,500 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-30 09:55:10,500 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,500 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,501 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,501 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,501 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,501 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-30 09:55:10,501 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,502 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-30 09:55:10,502 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,502 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,502 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,502 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,503 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,503 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-30 09:55:10,503 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,503 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-30 09:55:10,504 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,504 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-30 09:55:10,504 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,504 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-30 09:55:10,505 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,505 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-30 09:55:10,505 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,505 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-30 09:55:10,505 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,506 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-30 09:55:10,506 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,506 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-30 09:55:10,506 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,506 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,507 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,507 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,507 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,507 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-30 09:55:10,507 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,508 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-30 09:55:10,512 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-30 09:55:10,513 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-30 09:55:10,513 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-30 09:55:10,513 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-30 09:55:10,513 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-30 09:55:10,514 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-30 09:55:10,514 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-30 09:55:10,514 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-30 09:55:10,514 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-30 09:55:10,514 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-30 09:55:10,515 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-30 09:55:10,515 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-30 09:55:10,515 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-30 09:55:10,515 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-30 09:55:10,515 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-30 09:55:10,516 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-30 09:55:10,516 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-30 09:55:10,516 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-30 09:55:10,516 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-30 09:55:10,516 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-30 09:55:10,517 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-30 09:55:10,517 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-30 09:55:10,517 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-30 09:55:10,517 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,517 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,517 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,517 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,517 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,518 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,518 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-30 09:55:10,518 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-30 09:55:10,518 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-30 09:55:10,518 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,518 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,518 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,519 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,519 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,519 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,519 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,519 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-30 09:55:10,519 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-30 09:55:10,519 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,520 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,520 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,520 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,520 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,520 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,520 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-30 09:55:10,521 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-30 09:55:10,521 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-30 09:55:10,521 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-30 09:55:10,521 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,521 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-30 09:55:10,521 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-30 09:55:10,521 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,522 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-30 09:55:10,522 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-30 09:55:10,522 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,522 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-30 09:55:10,522 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-30 09:55:10,522 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-30 09:55:10,522 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-30 09:55:10,523 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-30 09:55:10,523 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-30 09:55:10,524 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-30 09:55:10,524 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-30 09:55:10,524 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-30 09:55:10,524 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-30 09:55:10,524 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-30 09:55:10,525 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-30 09:55:10,525 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-30 09:55:10,525 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,525 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,525 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,525 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,525 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,526 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,526 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-30 09:55:10,526 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-30 09:55:10,526 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-30 09:55:10,526 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,526 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,526 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,526 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,526 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,527 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,527 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,527 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-30 09:55:10,527 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-30 09:55:10,527 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,527 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,527 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,528 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,528 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,528 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,528 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-30 09:55:10,528 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-30 09:55:10,528 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-30 09:55:10,529 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-30 09:55:10,529 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,529 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-30 09:55:10,529 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-30 09:55:10,529 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,529 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-30 09:55:10,529 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-30 09:55:10,529 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,530 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-30 09:55:10,530 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-30 09:55:10,530 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-30 09:55:10,530 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-30 09:55:10,530 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-30 09:55:10,530 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-30 09:55:10,530 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-30 09:55:10,530 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-30 09:55:10,531 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,531 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-30 09:55:10,531 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,531 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-30 09:55:10,531 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,531 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-30 09:55:10,531 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-30 09:55:10,531 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-30 09:55:10,532 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-30 09:55:10,532 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-30 09:55:10,532 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,532 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-30 09:55:10,532 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,532 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-30 09:55:10,532 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,532 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-30 09:55:10,533 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-30 09:55:10,533 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-30 09:55:10,533 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-30 09:55:10,533 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-30 09:55:10,534 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-30 09:55:10,534 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-30 09:55:10,534 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-30 09:55:10,534 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-30 09:55:10,534 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,534 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,534 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,534 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,535 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,535 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,535 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-30 09:55:10,535 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-30 09:55:10,535 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-30 09:55:10,535 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,535 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,536 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,536 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,536 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,536 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,536 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,536 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-30 09:55:10,536 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-30 09:55:10,536 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,537 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,537 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,537 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,537 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-30 09:55:10,537 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,537 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-30 09:55:10,537 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-30 09:55:10,538 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-30 09:55:10,538 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-30 09:55:10,538 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,538 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-30 09:55:10,538 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-30 09:55:10,538 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,538 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-30 09:55:10,538 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-30 09:55:10,539 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,539 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-30 09:55:10,539 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-30 09:55:10,539 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-30 09:55:10,539 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-30 09:55:10,539 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-30 09:55:10,540 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-30 09:55:10,540 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-30 09:55:10,540 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-30 09:55:10,540 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,540 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-30 09:55:10,540 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,540 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-30 09:55:10,541 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,541 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-30 09:55:10,541 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-30 09:55:10,541 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-30 09:55:10,541 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-30 09:55:10,541 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-30 09:55:10,541 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,541 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-30 09:55:10,542 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,542 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-30 09:55:10,542 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-30 09:55:10,542 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-30 09:55:10,542 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,543 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,543 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,543 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,544 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,544 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,544 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,544 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,544 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,545 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,545 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,545 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,546 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,546 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,546 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,546 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,547 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,547 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,547 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,547 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,548 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,548 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,548 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,548 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,549 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,549 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,550 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,550 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,550 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,551 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,551 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,551 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,551 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,551 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,551 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,552 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,552 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,552 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,552 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,552 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,553 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,553 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,553 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,553 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-30 09:55:10,554 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-30 09:55:10,554 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-30 09:55:10,555 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-30 09:55:10,556 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-30 09:55:10,560 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner8455676831698632491.xml
2016-08-30 09:55:10,562 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner8455676831698632491.xml hdfs = false
2016-08-30 09:55:10,562 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner8455676831698632491.xml
2016-08-30 09:55:10,564 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,564 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-30 09:55:10,565 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile6304561134322895254.xml
2016-08-30 09:55:10,567 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile6304561134322895254.xml hdfs = false
2016-08-30 09:55:10,567 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile6304561134322895254.xml
2016-08-30 09:55:10,568 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,569 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-30 09:55:10,569 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,569 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,569 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,570 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType2746705034743318614.xml
2016-08-30 09:55:10,571 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType2746705034743318614.xml hdfs = false
2016-08-30 09:55:10,572 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType2746705034743318614.xml
2016-08-30 09:55:10,573 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,573 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-30 09:55:10,575 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-30 09:55:10,575 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-30 09:55:10,576 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6689533515644497177.xml
2016-08-30 09:55:10,576 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6689533515644497177.xml
2016-08-30 09:55:10,577 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-30 09:55:10,578 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-30 09:55:10,578 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-30 09:55:10,579 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6689533515644497177.xml
2016-08-30 09:55:10,580 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6689533515644497177.xml
2016-08-30 09:55:10,581 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,582 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-30 09:55:10,582 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-30 09:55:10,582 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-30 09:55:10,582 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-30 09:55:10,582 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-30 09:55:10,583 INFO  utils.Inputs       [] - StopList file being created
2016-08-30 09:55:10,583 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/stopListFile2975638551938651389.tmp
2016-08-30 09:55:10,584 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8938253984004025084.xml
2016-08-30 09:55:10,586 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8938253984004025084.xml hdfs = false
2016-08-30 09:55:10,587 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8938253984004025084.xml
2016-08-30 09:55:10,588 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,588 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-30 09:55:10,588 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,588 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,589 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,589 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,590 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-30 09:55:10,590 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6854329664218911384.xml
2016-08-30 09:55:10,590 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6854329664218911384.xml
2016-08-30 09:55:10,591 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-30 09:55:10,591 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-30 09:55:10,591 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-30 09:55:10,591 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-30 09:55:10,592 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6854329664218911384.xml
2016-08-30 09:55:10,593 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6854329664218911384.xml
2016-08-30 09:55:10,594 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:10,594 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-30 09:55:10,595 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-30 09:55:10,595 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-30 09:55:10,596 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,596 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-30 09:55:10,596 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:10,596 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-30 09:55:10,596 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:10,596 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-30 09:55:10,597 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-30 09:55:10,847 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-30 09:55:11,098 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-30 09:55:11,098 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-30 09:55:11,099 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3056568822038702541.xml
2016-08-30 09:55:11,101 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3056568822038702541.xml hdfs = false
2016-08-30 09:55:11,101 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile3056568822038702541.xml
2016-08-30 09:55:11,103 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:11,103 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-30 09:55:11,103 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:11,103 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:11,104 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:11,104 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:11,104 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-30 09:55:11,104 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile9221180808812175944.xml
2016-08-30 09:55:11,104 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile9221180808812175944.xml
2016-08-30 09:55:11,105 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-30 09:55:11,106 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-30 09:55:11,106 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-30 09:55:11,106 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-30 09:55:11,107 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile9221180808812175944.xml
2016-08-30 09:55:11,108 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile9221180808812175944.xml
2016-08-30 09:55:11,109 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:11,109 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-30 09:55:11,109 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-30 09:55:11,110 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-30 09:55:11,110 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-30 09:55:11,111 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8964625838656809255.xml
2016-08-30 09:55:11,113 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8964625838656809255.xml hdfs = false
2016-08-30 09:55:11,114 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8964625838656809255.xml
2016-08-30 09:55:11,115 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:11,115 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-30 09:55:11,116 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:11,116 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:11,116 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:11,116 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:11,116 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-30 09:55:11,118 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6071814327435388982.xml
2016-08-30 09:55:11,119 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6071814327435388982.xml
2016-08-30 09:55:11,120 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-30 09:55:11,120 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-30 09:55:11,120 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-30 09:55:11,120 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-30 09:55:11,122 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6071814327435388982.xml
2016-08-30 09:55:11,123 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6071814327435388982.xml
2016-08-30 09:55:11,124 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:11,125 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-30 09:55:11,125 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-30 09:55:11,125 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-30 09:55:11,125 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-30 09:55:11,464 INFO  storm.KafkaStormIntegrationTest  [] - Starting zookeeper.
2016-08-30 09:55:12,753 INFO  storm.KafkaStormIntegrationTest  [] - Zookeeper initialized.
2016-08-30 09:55:13,197 INFO  server.KafkaConfig  [] - KafkaConfig values: 
	advertised.host.name = localhost
	metric.reporters = []
	quota.producer.default = 9223372036854775807
	offsets.topic.num.partitions = 50
	log.flush.interval.messages = 9223372036854775807
	auto.create.topics.enable = true
	controller.socket.timeout.ms = 30000
	log.flush.interval.ms = null
	principal.builder.class = class org.apache.kafka.common.security.auth.DefaultPrincipalBuilder
	replica.socket.receive.buffer.bytes = 65536
	min.insync.replicas = 1
	replica.fetch.wait.max.ms = 500
	num.recovery.threads.per.data.dir = 1
	ssl.keystore.type = JKS
	default.replication.factor = 1
	ssl.truststore.password = null
	log.preallocate = false
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	fetch.purgatory.purge.interval.requests = 1000
	ssl.endpoint.identification.algorithm = null
	replica.socket.timeout.ms = 30000
	message.max.bytes = 1000012
	num.io.threads = 8
	offsets.commit.required.acks = -1
	log.flush.offset.checkpoint.interval.ms = 60000
	delete.topic.enable = false
	quota.window.size.seconds = 1
	ssl.truststore.type = JKS
	offsets.commit.timeout.ms = 5000
	quota.window.num = 11
	zookeeper.connect = 127.0.0.1:56272
	authorizer.class.name = 
	num.replica.fetchers = 1
	log.retention.ms = null
	log.roll.jitter.hours = 0
	log.cleaner.enable = true
	offsets.load.buffer.size = 5242880
	log.cleaner.delete.retention.ms = 86400000
	ssl.client.auth = none
	controlled.shutdown.max.retries = 3
	queued.max.requests = 500
	offsets.topic.replication.factor = 3
	log.cleaner.threads = 1
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	socket.request.max.bytes = 104857600
	ssl.trustmanager.algorithm = PKIX
	zookeeper.session.timeout.ms = 100000
	log.retention.bytes = -1
	sasl.kerberos.min.time.before.relogin = 60000
	zookeeper.set.acl = false
	connections.max.idle.ms = 600000
	offsets.retention.minutes = 1440
	replica.fetch.backoff.ms = 1000
	inter.broker.protocol.version = 0.9.0.X
	log.retention.hours = 168
	num.partitions = 1
	broker.id.generation.enable = true
	listeners = null
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	log.roll.ms = null
	log.flush.scheduler.interval.ms = 9223372036854775807
	ssl.cipher.suites = null
	log.index.size.max.bytes = 10485760
	ssl.keymanager.algorithm = SunX509
	security.inter.broker.protocol = PLAINTEXT
	replica.fetch.max.bytes = 1048576
	advertised.port = null
	log.cleaner.dedupe.buffer.size = 134217728
	replica.high.watermark.checkpoint.interval.ms = 5000
	log.cleaner.io.buffer.size = 524288
	sasl.kerberos.ticket.renew.window.factor = 0.8
	zookeeper.connection.timeout.ms = null
	controlled.shutdown.retry.backoff.ms = 5000
	log.roll.hours = 168
	log.cleanup.policy = delete
	host.name = 
	log.roll.jitter.ms = null
	max.connections.per.ip = 2147483647
	offsets.topic.segment.bytes = 104857600
	background.threads = 10
	quota.consumer.default = 9223372036854775807
	request.timeout.ms = 30000
	log.index.interval.bytes = 4096
	log.dir = /tmp/kafka
	log.segment.bytes = 1073741824
	log.cleaner.backoff.ms = 15000
	offset.metadata.max.bytes = 4096
	ssl.truststore.location = null
	group.max.session.timeout.ms = 30000
	ssl.keystore.password = null
	zookeeper.sync.time.ms = 2000
	port = 11111
	log.retention.minutes = null
	log.segment.delete.delay.ms = 60000
	log.dirs = null
	controlled.shutdown.enable = true
	compression.type = producer
	max.connections.per.ip.overrides = 
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	auto.leader.rebalance.enable = true
	leader.imbalance.check.interval.seconds = 300
	log.cleaner.min.cleanable.ratio = 0.5
	replica.lag.time.max.ms = 10000
	num.network.threads = 3
	ssl.key.password = null
	reserved.broker.max.id = 1000
	metrics.num.samples = 2
	socket.send.buffer.bytes = 102400
	ssl.protocol = TLS
	socket.receive.buffer.bytes = 102400
	ssl.keystore.location = null
	replica.fetch.min.bytes = 1
	unclean.leader.election.enable = true
	group.min.session.timeout.ms = 6000
	log.cleaner.io.buffer.load.factor = 0.9
	offsets.retention.check.interval.ms = 600000
	producer.purgatory.purge.interval.requests = 1000
	metrics.sample.window.ms = 30000
	broker.id = -1
	offsets.topic.compression.codec = 0
	log.retention.check.interval.ms = 300000
	advertised.listeners = null
	leader.imbalance.per.broker.percentage = 10

2016-08-30 09:55:14,494 INFO  utils.AppInfoParser  [] - Kafka version : 0.9.0.1
2016-08-30 09:55:14,495 INFO  utils.AppInfoParser  [] - Kafka commitId : 23c69d62a0cabf06
2016-08-30 09:55:14,530 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml
2016-08-30 09:55:14,532 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml hdfs = false
2016-08-30 09:55:14,533 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml
2016-08-30 09:55:14,535 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:14,535 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-30 09:55:14,535 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:14,535 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:14,536 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,536 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,536 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:14,536 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:14,536 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,536 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-30 09:55:14,537 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml
2016-08-30 09:55:14,537 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml
2016-08-30 09:55:14,538 INFO  utils.TestUtils    [] - elementName = date
2016-08-30 09:55:14,538 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-30 09:55:14,538 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:14,539 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-30 09:55:14,539 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-30 09:55:14,539 INFO  utils.TestUtils    [] - elementName = ip
2016-08-30 09:55:14,539 INFO  utils.TestUtils    [] - filterName = qname
2016-08-30 09:55:14,544 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-30 09:55:14,545 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml
2016-08-30 09:55:14,546 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml
2016-08-30 09:55:14,547 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-30 09:55:14,547 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:14,547 INFO  utils.TestUtils    [] - elementName = ip
2016-08-30 09:55:14,547 INFO  utils.TestUtils    [] - filterName = qname
2016-08-30 09:55:14,550 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-30 09:55:14,550 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml
2016-08-30 09:55:14,550 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml
2016-08-30 09:55:14,551 INFO  utils.TestUtils    [] - elementName = qname
2016-08-30 09:55:14,552 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-30 09:55:14,552 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:14,552 INFO  utils.TestUtils    [] - filterName = qname
2016-08-30 09:55:14,553 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-30 09:55:14,556 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml
2016-08-30 09:55:14,556 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml
2016-08-30 09:55:14,557 INFO  utils.TestUtils    [] - elementName = qname
2016-08-30 09:55:14,557 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:14,557 INFO  utils.TestUtils    [] - elementName = ip
2016-08-30 09:55:14,557 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-30 09:55:14,557 INFO  utils.TestUtils    [] - filterName = ip
2016-08-30 09:55:14,559 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-30 09:55:14,559 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml
2016-08-30 09:55:14,559 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml
2016-08-30 09:55:14,561 INFO  utils.TestUtils    [] - elementName = qname
2016-08-30 09:55:14,561 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-30 09:55:14,562 INFO  utils.TestUtils    [] - elementName = ip
2016-08-30 09:55:14,563 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml
2016-08-30 09:55:14,563 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml
2016-08-30 09:55:14,565 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:14,565 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-30 09:55:14,565 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:14,565 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:14,565 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:14,566 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-30 09:55:14,566 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,566 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:14,567 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,567 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:14,567 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:14,567 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-30 09:55:14,567 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:14,567 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-30 09:55:14,567 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,568 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-30 09:55:14,568 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-30 09:55:14,604 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml
2016-08-30 09:55:14,604 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml
2016-08-30 09:55:14,606 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:14,606 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-30 09:55:14,606 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:14,606 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-30 09:55:14,607 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,607 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-30 09:55:14,607 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,607 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-30 09:55:14,607 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,607 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-30 09:55:14,608 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-30 09:55:14,643 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml
2016-08-30 09:55:14,644 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml
2016-08-30 09:55:14,646 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:14,646 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-30 09:55:14,647 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:14,647 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:14,648 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:14,649 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:14,650 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,650 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:14,651 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,652 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:14,653 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-30 09:55:14,708 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml
2016-08-30 09:55:14,709 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml
2016-08-30 09:55:14,711 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:14,712 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-30 09:55:14,712 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:14,712 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:14,712 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:14,713 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:14,713 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,713 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:14,713 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,713 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:14,714 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-30 09:55:14,714 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-30 09:55:14,752 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml
2016-08-30 09:55:14,753 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml
2016-08-30 09:55:14,754 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:14,754 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-30 09:55:14,754 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:14,755 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:14,755 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:14,755 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:14,755 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,756 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:14,756 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:14,756 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:14,780 INFO  encryption.Paillier  [] - Parameters = p = 904887635 q = 898048247 N = 1065437973 NSquared = 388976569 lambdaN = 2024567330 bitLength = 384
2016-08-30 09:55:14,783 INFO  wideskies.QueryInfo  [] - identifier = 74cbee54-9a78-48c3-905d-c83a0782b051 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-30 09:55:14,784 INFO  storm.KafkaStormIntegrationTest  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-30 09:55:15,970 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-30 09:55:15,975 INFO  storm.KafkaStormIntegrationTest  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-30 09:55:16,235 INFO  producer.ProducerConfig  [] - ProducerConfig values: 
	compression.type = none
	metric.reporters = []
	metadata.max.age.ms = 300000
	metadata.fetch.timeout.ms = 60000
	reconnect.backoff.ms = 50
	sasl.kerberos.ticket.renew.window.factor = 0.8
	bootstrap.servers = [localhost:11111]
	retry.backoff.ms = 100
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	buffer.memory = 33554432
	timeout.ms = 30000
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	ssl.keystore.type = JKS
	ssl.trustmanager.algorithm = PKIX
	block.on.buffer.full = false
	ssl.key.password = null
	max.block.ms = 60000
	sasl.kerberos.min.time.before.relogin = 60000
	connections.max.idle.ms = 540000
	ssl.truststore.password = null
	max.in.flight.requests.per.connection = 5
	metrics.num.samples = 2
	client.id = 
	ssl.endpoint.identification.algorithm = null
	ssl.protocol = TLS
	request.timeout.ms = 30000
	ssl.provider = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	acks = 1
	batch.size = 16384
	ssl.keystore.location = null
	receive.buffer.bytes = 32768
	ssl.cipher.suites = null
	ssl.truststore.type = JKS
	security.protocol = PLAINTEXT
	retries = 0
	max.request.size = 1048576
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer
	ssl.truststore.location = null
	ssl.keystore.password = null
	ssl.keymanager.algorithm = SunX509
	metrics.sample.window.ms = 30000
	partitioner.class = class org.apache.kafka.clients.producer.internals.DefaultPartitioner
	send.buffer.bytes = 131072
	linger.ms = 0

2016-08-30 09:55:16,258 INFO  utils.AppInfoParser  [] - Kafka version : 0.9.0.1
2016-08-30 09:55:16,259 INFO  utils.AppInfoParser  [] - Kafka commitId : 23c69d62a0cabf06
2016-08-30 09:55:16,259 INFO  storm.KafkaStormIntegrationTest  [] - Sending record to Kafka {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","qtype":[1],"qname":"a.b.c.com","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"rcode":0}
2016-08-30 09:55:16,395 INFO  storm.KafkaStormIntegrationTest  [] - Sending record to Kafka {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","qtype":[1],"qname":"d.e.com","dest_ip":"1.2.3.4","ip":["5.6.7.8"],"rcode":0}
2016-08-30 09:55:16,396 INFO  storm.KafkaStormIntegrationTest  [] - Sending record to Kafka {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","qtype":[1],"qname":"d.e.com","dest_ip":"9.10.11.12","ip":["13.14.15.16"],"rcode":0}
2016-08-30 09:55:16,397 INFO  storm.KafkaStormIntegrationTest  [] - Sending record to Kafka {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","qtype":[1],"qname":"d.e.com","dest_ip":"17.18.19.20","ip":["21.22.23.24"],"rcode":3}
2016-08-30 09:55:16,397 INFO  storm.KafkaStormIntegrationTest  [] - Sending record to Kafka {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","qtype":[1],"qname":"d.e.com","dest_ip":"25.26.27.28","ip":["5.6.7.8"],"rcode":0}
2016-08-30 09:55:16,397 INFO  storm.KafkaStormIntegrationTest  [] - Sending record to Kafka {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","qtype":[1],"qname":"d.e.com","dest_ip":"33.34.35.36","ip":["5.6.7.8"],"rcode":0}
2016-08-30 09:55:16,398 INFO  storm.KafkaStormIntegrationTest  [] - Sending record to Kafka {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","qtype":[1],"qname":"something.else","dest_ip":"2.2.2.2","ip":["3.3.3.3"],"rcode":0}
2016-08-30 09:55:16,398 INFO  storm.KafkaStormIntegrationTest  [] - Sending record to Kafka {"date":"2016-02-20T23:29:12.000Z","src_ip":"5.6.7.8","qtype":[1],"qname":"something.else2","dest_ip":"2.2.2.22","ip":["3.3.3.132"],"rcode":0}
2016-08-30 09:55:16,399 INFO  storm.KafkaStormIntegrationTest  [] - Sending record to Kafka {"date":"2016-02-20T23:29:13.000Z","src_ip":"55.55.55.55","qtype":[1],"qname":"something.else.on.stoplist","dest_ip":"2.2.2.232","ip":["3.3.3.132"],"rcode":0}
2016-08-30 09:55:16,399 INFO  storm.KafkaStormIntegrationTest  [] - Test (splitPartitions,saltColumns) = (true,true)
2016-08-30 09:55:16,401 INFO  storm.KafkaStormIntegrationTest  [] - Starting topology.
2016-08-30 09:55:16,419 INFO  storm.KafkaStormIntegrationTest  [] - KafkaConfig initialized...
2016-08-30 09:55:20,092 INFO  server.ZooKeeperServer  [] - Server environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
2016-08-30 09:55:20,092 INFO  server.ZooKeeperServer  [] - Server environment:host.name=traveler.ltsnet.net
2016-08-30 09:55:20,092 INFO  server.ZooKeeperServer  [] - Server environment:java.version=1.8.0_102
2016-08-30 09:55:20,093 INFO  server.ZooKeeperServer  [] - Server environment:java.vendor=Oracle Corporation
2016-08-30 09:55:20,093 INFO  server.ZooKeeperServer  [] - Server environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre
2016-08-30 09:55:20,093 INFO  server.ZooKeeperServer  [] - Server environment:java.class.path=/Users/voyager/apachePirk/incubator-pirk/target/test-classes:/Users/voyager/apachePirk/incubator-pirk/target/classes:/Users/voyager/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/voyager/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/voyager/.m2/repository/org/apache/commons/commons-math3/3.3/commons-math3-3.3.jar:/Users/voyager/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar:/Users/voyager/.m2/repository/commons-net/commons-net/3.3/commons-net-3.3.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-common/2.7.2/hadoop-common-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-annotations/2.7.2/hadoop-annotations-2.7.2.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/../lib/tools.jar:/Users/voyager/.m2/repository/com/google/guava/guava/11.0.2/guava-11.0.2.jar:/Users/voyager/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/Users/voyager/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/Users/voyager/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/voyager/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/Users/voyager/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/voyager/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/voyager/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/Users/voyager/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/Users/voyager/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar:/Users/voyager/.m2/repository/com/sun/jersey/jersey-json/1.9/jersey-json-1.9.jar:/Users/voyager/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/voyager/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/voyager/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.3/jackson-jaxrs-1.8.3.jar:/Users/voyager/.m2/repository/org/codehaus/jackson/jackson-xc/1.8.3/jackson-xc-1.8.3.jar:/Users/voyager/.m2/repository/com/sun/jersey/jersey-server/1.9/jersey-server-1.9.jar:/Users/voyager/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/voyager/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/Users/voyager/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/voyager/.m2/repository/net/java/dev/jets3t/jets3t/0.9.0/jets3t-0.9.0.jar:/Users/voyager/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/voyager/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/voyager/.m2/repository/com/jamesmurty/utils/java-xmlbuilder/0.4/java-xmlbuilder-0.4.jar:/Users/voyager/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/voyager/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/voyager/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/voyager/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/voyager/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/voyager/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/Users/voyager/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/Users/voyager/.m2/repository/org/apache/avro/avro/1.7.4/avro-1.7.4.jar:/Users/voyager/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/Users/voyager/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/Users/voyager/.m2/repository/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-auth/2.7.2/hadoop-auth-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/directory/server/apacheds-kerberos-codec/2.0.0-M15/apacheds-kerberos-codec-2.0.0-M15.jar:/Users/voyager/.m2/repository/org/apache/directory/server/apacheds-i18n/2.0.0-M15/apacheds-i18n-2.0.0-M15.jar:/Users/voyager/.m2/repository/org/apache/directory/api/api-asn1-api/1.0.0-M20/api-asn1-api-1.0.0-M20.jar:/Users/voyager/.m2/repository/org/apache/directory/api/api-util/1.0.0-M20/api-util-1.0.0-M20.jar:/Users/voyager/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar:/Users/voyager/.m2/repository/org/apache/curator/curator-recipes/2.7.1/curator-recipes-2.7.1.jar:/Users/voyager/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/Users/voyager/.m2/repository/org/apache/htrace/htrace-core/3.1.0-incubating/htrace-core-3.1.0-incubating.jar:/Users/voyager/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/Users/voyager/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar:/Users/voyager/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.7.2/hadoop-mapreduce-client-core-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.7.2/hadoop-yarn-common-2.7.2.jar:/Users/voyager/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/voyager/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/voyager/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/voyager/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar:/Users/voyager/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/Users/voyager/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/voyager/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/voyager/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.9/jersey-guice-1.9.jar:/Users/voyager/.m2/repository/com/google/inject/extensions/guice-servlet/3.0/guice-servlet-3.0.jar:/Users/voyager/.m2/repository/io/netty/netty/3.6.2.Final/netty-3.6.2.Final.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-client/2.7.2/hadoop-client-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.7.2/hadoop-hdfs-2.7.2.jar:/Users/voyager/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-app/2.7.2/hadoop-mapreduce-client-app-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-common/2.7.2/hadoop-mapreduce-client-common-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.7.2/hadoop-yarn-client-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-yarn-server-common/2.7.2/hadoop-yarn-server-common-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-shuffle/2.7.2/hadoop-mapreduce-client-shuffle-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.7.2/hadoop-yarn-api-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-jobclient/2.7.2/hadoop-mapreduce-client-jobclient-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-core_2.11/1.6.1/spark-core_2.11-1.6.1.jar:/Users/voyager/.m2/repository/org/apache/avro/avro-mapred/1.7.7/avro-mapred-1.7.7-hadoop2.jar:/Users/voyager/.m2/repository/org/apache/avro/avro-ipc/1.7.7/avro-ipc-1.7.7.jar:/Users/voyager/.m2/repository/org/apache/avro/avro-ipc/1.7.7/avro-ipc-1.7.7-tests.jar:/Users/voyager/.m2/repository/com/twitter/chill_2.11/0.5.0/chill_2.11-0.5.0.jar:/Users/voyager/.m2/repository/com/esotericsoftware/kryo/kryo/2.21/kryo-2.21.jar:/Users/voyager/.m2/repository/com/esotericsoftware/reflectasm/reflectasm/1.07/reflectasm-1.07-shaded.jar:/Users/voyager/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/Users/voyager/.m2/repository/com/twitter/chill-java/0.5.0/chill-java-0.5.0.jar:/Users/voyager/.m2/repository/org/apache/xbean/xbean-asm5-shaded/4.4/xbean-asm5-shaded-4.4.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-launcher_2.11/1.6.1/spark-launcher_2.11-1.6.1.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-network-common_2.11/1.6.1/spark-network-common_2.11-1.6.1.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-network-shuffle_2.11/1.6.1/spark-network-shuffle_2.11-1.6.1.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.4/jackson-annotations-2.4.4.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-unsafe_2.11/1.6.1/spark-unsafe_2.11-1.6.1.jar:/Users/voyager/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/Users/voyager/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/Users/voyager/.m2/repository/org/slf4j/jul-to-slf4j/1.7.10/jul-to-slf4j-1.7.10.jar:/Users/voyager/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.10/jcl-over-slf4j-1.7.10.jar:/Users/voyager/.m2/repository/com/ning/compress-lzf/1.0.3/compress-lzf-1.0.3.jar:/Users/voyager/.m2/repository/org/xerial/snappy/snappy-java/1.1.2/snappy-java-1.1.2.jar:/Users/voyager/.m2/repository/net/jpountz/lz4/lz4/1.3.0/lz4-1.3.0.jar:/Users/voyager/.m2/repository/org/roaringbitmap/RoaringBitmap/0.5.11/RoaringBitmap-0.5.11.jar:/Users/voyager/.m2/repository/com/typesafe/akka/akka-remote_2.11/2.3.11/akka-remote_2.11-2.3.11.jar:/Users/voyager/.m2/repository/com/typesafe/akka/akka-actor_2.11/2.3.11/akka-actor_2.11-2.3.11.jar:/Users/voyager/.m2/repository/com/typesafe/config/1.2.1/config-1.2.1.jar:/Users/voyager/.m2/repository/org/uncommons/maths/uncommons-maths/1.2.2a/uncommons-maths-1.2.2a.jar:/Users/voyager/.m2/repository/com/typesafe/akka/akka-slf4j_2.11/2.3.11/akka-slf4j_2.11-2.3.11.jar:/Users/voyager/.m2/repository/org/json4s/json4s-jackson_2.11/3.2.10/json4s-jackson_2.11-3.2.10.jar:/Users/voyager/.m2/repository/org/json4s/json4s-core_2.11/3.2.10/json4s-core_2.11-3.2.10.jar:/Users/voyager/.m2/repository/org/json4s/json4s-ast_2.11/3.2.10/json4s-ast_2.11-3.2.10.jar:/Users/voyager/.m2/repository/org/apache/mesos/mesos/0.21.1/mesos-0.21.1-shaded-protobuf.jar:/Users/voyager/.m2/repository/io/netty/netty-all/4.0.29.Final/netty-all-4.0.29.Final.jar:/Users/voyager/.m2/repository/com/clearspring/analytics/stream/2.7.0/stream-2.7.0.jar:/Users/voyager/.m2/repository/io/dropwizard/metrics/metrics-core/3.1.2/metrics-core-3.1.2.jar:/Users/voyager/.m2/repository/io/dropwizard/metrics/metrics-jvm/3.1.2/metrics-jvm-3.1.2.jar:/Users/voyager/.m2/repository/io/dropwizard/metrics/metrics-json/3.1.2/metrics-json-3.1.2.jar:/Users/voyager/.m2/repository/io/dropwizard/metrics/metrics-graphite/3.1.2/metrics-graphite-3.1.2.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.4/jackson-databind-2.4.4.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.4/jackson-core-2.4.4.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.4.4/jackson-module-scala_2.11-2.4.4.jar:/Users/voyager/.m2/repository/org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar:/Users/voyager/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/Users/voyager/.m2/repository/org/tachyonproject/tachyon-client/0.8.2/tachyon-client-0.8.2.jar:/Users/voyager/.m2/repository/org/tachyonproject/tachyon-underfs-hdfs/0.8.2/tachyon-underfs-hdfs-0.8.2.jar:/Users/voyager/.m2/repository/org/tachyonproject/tachyon-underfs-s3/0.8.2/tachyon-underfs-s3-0.8.2.jar:/Users/voyager/.m2/repository/org/tachyonproject/tachyon-underfs-local/0.8.2/tachyon-underfs-local-0.8.2.jar:/Users/voyager/.m2/repository/net/razorvine/pyrolite/4.9/pyrolite-4.9.jar:/Users/voyager/.m2/repository/net/sf/py4j/py4j/0.9/py4j-0.9.jar:/Users/voyager/.m2/repository/org/spark-project/spark/unused/1.0.0/unused-1.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-streaming_2.10/2.0.0/spark-streaming_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-core_2.10/2.0.0/spark-core_2.10-2.0.0.jar:/Users/voyager/.m2/repository/com/twitter/chill_2.10/0.8.0/chill_2.10-0.8.0.jar:/Users/voyager/.m2/repository/com/esotericsoftware/kryo-shaded/3.0.3/kryo-shaded-3.0.3.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-launcher_2.10/2.0.0/spark-launcher_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-network-common_2.10/2.0.0/spark-network-common_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-network-shuffle_2.10/2.0.0/spark-network-shuffle_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-unsafe_2.10/2.0.0/spark-unsafe_2.10-2.0.0.jar:/Users/voyager/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/voyager/.m2/repository/org/json4s/json4s-jackson_2.10/3.2.11/json4s-jackson_2.10-3.2.11.jar:/Users/voyager/.m2/repository/org/json4s/json4s-core_2.10/3.2.11/json4s-core_2.10-3.2.11.jar:/Users/voyager/.m2/repository/org/json4s/json4s-ast_2.10/3.2.11/json4s-ast_2.10-3.2.11.jar:/Users/voyager/.m2/repository/org/scala-lang/scalap/2.10.0/scalap-2.10.0.jar:/Users/voyager/.m2/repository/org/scala-lang/scala-compiler/2.10.0/scala-compiler-2.10.0.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/core/jersey-client/2.22.2/jersey-client-2.22.2.jar:/Users/voyager/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/hk2-api/2.4.0-b34/hk2-api-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/hk2-utils/2.4.0-b34/hk2-utils-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.4.0-b34/aopalliance-repackaged-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/external/javax.inject/2.4.0-b34/javax.inject-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/hk2-locator/2.4.0-b34/hk2-locator-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/core/jersey-common/2.22.2/jersey-common-2.22.2.jar:/Users/voyager/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/bundles/repackaged/jersey-guava/2.22.2/jersey-guava-2.22.2.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/core/jersey-server/2.22.2/jersey-server-2.22.2.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.22.2/jersey-media-jaxb-2.22.2.jar:/Users/voyager/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.22.2/jersey-container-servlet-2.22.2.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.22.2/jersey-container-servlet-core-2.22.2.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.10/2.6.5/jackson-module-scala_2.10-2.6.5.jar:/Users/voyager/.m2/repository/org/scala-lang/scala-reflect/2.10.6/scala-reflect-2.10.6.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/module/jackson-module-paranamer/2.6.5/jackson-module-paranamer-2.6.5.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-tags_2.10/2.0.0/spark-tags_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/scalatest/scalatest_2.10/2.2.6/scalatest_2.10-2.2.6.jar:/Users/voyager/.m2/repository/org/elasticsearch/elasticsearch-hadoop/2.3.3/elasticsearch-hadoop-2.3.3.jar:/Users/voyager/.m2/repository/org/apache/pig/pig/0.15.0/pig-0.15.0.jar:/Users/voyager/.m2/repository/tomcat/jasper-runtime/5.5.12/jasper-runtime-5.5.12.jar:/Users/voyager/.m2/repository/tomcat/jasper-compiler/5.5.12/jasper-compiler-5.5.12.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/jsp-api-2.1/6.1.14/jsp-api-2.1-6.1.14.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/jsp-2.1/6.1.14/jsp-2.1-6.1.14.jar:/Users/voyager/.m2/repository/org/eclipse/jdt/core/3.1.1/core-3.1.1.jar:/Users/voyager/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar:/Users/voyager/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/servlet-api-2.5/6.1.14/servlet-api-2.5-6.1.14.jar:/Users/voyager/.m2/repository/net/sf/kosmosfs/kfs/0.3/kfs-0.3.jar:/Users/voyager/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/Users/voyager/.m2/repository/jline/jline/1.0/jline-1.0.jar:/Users/voyager/.m2/repository/org/antlr/ST4/4.0.4/ST4-4.0.4.jar:/Users/voyager/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/voyager/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/voyager/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/voyager/.m2/repository/dk/brics/automaton/automaton/1.11-8/automaton-1.11-8.jar:/Users/voyager/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-sql_2.10/1.6.1/spark-sql_2.10-1.6.1.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-catalyst_2.10/1.6.1/spark-catalyst_2.10-1.6.1.jar:/Users/voyager/.m2/repository/org/codehaus/janino/janino/2.7.8/janino-2.7.8.jar:/Users/voyager/.m2/repository/org/codehaus/janino/commons-compiler/2.7.8/commons-compiler-2.7.8.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-column/1.7.0/parquet-column-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-common/1.7.0/parquet-common-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-encoding/1.7.0/parquet-encoding-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-generator/1.7.0/parquet-generator-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-hadoop/1.7.0/parquet-hadoop-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-format/2.3.0-incubating/parquet-format-2.3.0-incubating.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-jackson/1.7.0/parquet-jackson-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/storm/storm-core/1.0.1/storm-core-1.0.1.jar:/Users/voyager/.m2/repository/com/esotericsoftware/kryo/3.0.3/kryo-3.0.3.jar:/Users/voyager/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar:/Users/voyager/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/Users/voyager/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar:/Users/voyager/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/Users/voyager/.m2/repository/org/clojure/clojure/1.7.0/clojure-1.7.0.jar:/Users/voyager/.m2/repository/com/lmax/disruptor/3.3.2/disruptor-3.3.2.jar:/Users/voyager/.m2/repository/org/slf4j/log4j-over-slf4j/1.6.6/log4j-over-slf4j-1.6.6.jar:/Users/voyager/.m2/repository/org/apache/storm/storm-kafka/1.0.1/storm-kafka-1.0.1.jar:/Users/voyager/.m2/repository/org/apache/curator/curator-framework/2.10.0/curator-framework-2.10.0.jar:/Users/voyager/.m2/repository/org/apache/curator/curator-client/2.10.0/curator-client-2.10.0.jar:/Users/voyager/.m2/repository/org/apache/kafka/kafka-clients/0.9.0.1/kafka-clients-0.9.0.1.jar:/Users/voyager/.m2/repository/org/apache/kafka/kafka_2.10/0.9.0.1/kafka_2.10-0.9.0.1.jar:/Users/voyager/.m2/repository/com/101tec/zkclient/0.7/zkclient-0.7.jar:/Users/voyager/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/Users/voyager/.m2/repository/net/sf/jopt-simple/jopt-simple/3.2/jopt-simple-3.2.jar:/Users/voyager/.m2/repository/org/apache/curator/curator-test/2.10.0/curator-test-2.10.0.jar:/Users/voyager/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/Users/voyager/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/voyager/.m2/repository/com/squareup/jnagmp/jnagmp/1.1.0/jnagmp-1.1.0.jar:/Users/voyager/.m2/repository/net/java/dev/jna/jna/4.0.0/jna-4.0.0.jar:/Users/voyager/.m2/repository/org/openjdk/jmh/jmh-core/1.11.3/jmh-core-1.11.3.jar:/Users/voyager/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.11.3/jmh-generator-annprocess-1.11.3.jar:/Users/voyager/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar:/Users/voyager/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.1/log4j-slf4j-impl-2.1.jar:/Users/voyager/.m2/repository/org/apache/logging/log4j/log4j-api/2.1/log4j-api-2.1.jar:/Users/voyager/.m2/repository/org/apache/logging/log4j/log4j-core/2.1/log4j-core-2.1.jar:/Users/voyager/.m2/repository/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar:
2016-08-30 09:55:20,093 INFO  server.ZooKeeperServer  [] - Server environment:java.library.path=/Users/voyager/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2016-08-30 09:55:20,093 INFO  server.ZooKeeperServer  [] - Server environment:java.io.tmpdir=/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/
2016-08-30 09:55:20,093 INFO  server.ZooKeeperServer  [] - Server environment:java.compiler=<NA>
2016-08-30 09:55:20,093 INFO  server.ZooKeeperServer  [] - Server environment:os.name=Mac OS X
2016-08-30 09:55:20,093 INFO  server.ZooKeeperServer  [] - Server environment:os.arch=x86_64
2016-08-30 09:55:20,094 INFO  server.ZooKeeperServer  [] - Server environment:os.version=10.10.1
2016-08-30 09:55:20,094 INFO  server.ZooKeeperServer  [] - Server environment:user.name=voyager
2016-08-30 09:55:20,094 INFO  server.ZooKeeperServer  [] - Server environment:user.home=/Users/voyager
2016-08-30 09:55:20,094 INFO  server.ZooKeeperServer  [] - Server environment:user.dir=/Users/voyager/apachePirk/incubator-pirk
2016-08-30 09:55:20,112 INFO  server.ZooKeeperServer  [] - Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/a33de64d-2d7c-4185-97d1-e5acb519f5aa/version-2 snapdir /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/a33de64d-2d7c-4185-97d1-e5acb519f5aa/version-2
2016-08-30 09:55:20,118 INFO  server.NIOServerCnxnFactory  [] - binding to port 0.0.0.0/0.0.0.0:2000
2016-08-30 09:55:20,119 INFO  storm.zookeeper    [] - Starting inprocess zookeeper at port 2000 and dir /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//a33de64d-2d7c-4185-97d1-e5acb519f5aa
2016-08-30 09:55:20,224 INFO  daemon.nimbus      [] - Starting Nimbus with conf {"topology.builtin.metrics.bucket.size.secs" 60, "nimbus.childopts" "-Xmx1024m", "ui.filter.params" nil, "storm.cluster.mode" "local", "storm.messaging.netty.client_worker_threads" 1, "logviewer.max.per.worker.logs.size.mb" 2048, "supervisor.run.worker.as.user" false, "topology.max.task.parallelism" nil, "topology.priority" 29, "zmq.threads" 1, "storm.group.mapping.service" "org.apache.storm.security.auth.ShellBasedGroupsMapping", "transactional.zookeeper.root" "/transactional", "topology.sleep.spout.wait.strategy.time.ms" 1, "scheduler.display.resource" false, "topology.max.replication.wait.time.sec" 60, "qSchema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml", "drpc.invocations.port" 3773, "supervisor.localizer.cache.target.size.mb" 10240, "topology.multilang.serializer" "org.apache.storm.multilang.JsonSerializer", "storm.messaging.netty.server_worker_threads" 1, "nimbus.blobstore.class" "org.apache.storm.blobstore.LocalFsBlobStore", "resource.aware.scheduler.eviction.strategy" "org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy", "topology.max.error.report.per.interval" 5, "storm.thrift.transport" "org.apache.storm.security.auth.SimpleTransportPlugin", "zmq.hwm" 0, "output" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/responderFile3778566957499280122.txt", "storm.group.mapping.service.params" nil, "worker.profiler.enabled" false, "storm.principal.tolocal" "org.apache.storm.security.auth.DefaultPrincipalToLocal", "supervisor.worker.shutdown.sleep.secs" 1, "pacemaker.host" "localhost", "storm.zookeeper.retry.times" 5, "ui.actions.enabled" true, "zmq.linger.millis" 0, "supervisor.enable" true, "topology.stats.sample.rate" 0.05, "storm.messaging.netty.min_wait_ms" 100, "worker.log.level.reset.poll.secs" 30, "storm.zookeeper.port" 2000, "supervisor.heartbeat.frequency.secs" 5, "topology.enable.message.timeouts" false, "supervisor.cpu.capacity" 400.0, "drpc.worker.threads" 64, "supervisor.blobstore.download.thread.count" 5, "drpc.queue.size" 128, "topology.backpressure.enable" true, "supervisor.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "storm.blobstore.inputstream.buffer.size.bytes" 65536, "topology.shellbolt.max.pending" 100, "drpc.https.keystore.password" "", "nimbus.code.sync.freq.secs" 120, "logviewer.port" 8000, "topology.scheduler.strategy" "org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy", "topology.executor.send.buffer.size" 1024, "resource.aware.scheduler.priority.strategy" "org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy", "pacemaker.auth.method" "NONE", "storm.daemon.metrics.reporter.plugins" ["org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter"], "topology.worker.logwriter.childopts" "-Xmx64m", "topology.spout.wait.strategy" "org.apache.storm.spout.SleepSpoutWaitStrategy", "ui.host" "0.0.0.0", "storm.nimbus.retry.interval.millis" 2000, "nimbus.inbox.jar.expiration.secs" 3600, "dev.zookeeper.path" "/tmp/dev-storm-zookeeper", "topology.acker.executors" 1, "topology.fall.back.on.java.serialization" true, "topology.eventlogger.executors" 0, "supervisor.localizer.cleanup.interval.ms" 600000, "storm.zookeeper.servers" ["localhost"], "nimbus.thrift.threads" 64, "logviewer.cleanup.age.mins" 10080, "topology.worker.childopts" nil, "topology.classpath" nil, "supervisor.monitor.frequency.secs" 3, "nimbus.credential.renewers.freq.secs" 600, "topology.skip.missing.kryo.registrations" true, "drpc.authorizer.acl.filename" "drpc-auth-acl.yaml", "pacemaker.kerberos.users" [], "storm.group.mapping.service.cache.duration.secs" 120, "topology.testing.always.try.serialize" false, "nimbus.monitor.freq.secs" 10, "queryInfo" {"useHDFSExpLookupTable" false, "hashKey" "someKey", "numSelectors" 6, "dataPartitionsBitSize" 8, "hashBitSize" 12, "numPartitionsPerDataElement" 36, "numBitsPerDataElement" 256, "uuid" "74cbee54-9a78-48c3-905d-c83a0782b051", "useExpLookupTable" false, "embedSelector" true, "queryType" "dns-hostname-query"}, "storm.health.check.timeout.ms" 5000, "supervisor.supervisors" [], "topology.tasks" nil, "topology.bolts.outgoing.overflow.buffer.enable" false, "splitPartitions" true, "storm.messaging.netty.socket.backlog" 500, "topology.workers" 1, "pacemaker.base.threads" 10, "storm.local.dir" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//0c7a106b-3891-4efa-a029-1d8f3cced21c", "topology.disable.loadaware" false, "worker.childopts" "-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump", "storm.auth.simple-white-list.users" [], "topology.disruptor.batch.timeout.millis" 1, "topology.message.timeout.secs" 30, "topology.state.synchronization.timeout.secs" 60, "topology.tuple.serializer" "org.apache.storm.serialization.types.ListDelegateSerializer", "supervisor.supervisors.commands" [], "nimbus.blobstore.expiration.secs" 600, "logviewer.childopts" "-Xmx128m", "topology.environment" nil, "topology.debug" false, "topology.disruptor.batch.size" 100, "storm.messaging.netty.max_retries" 300, "ui.childopts" "-Xmx768m", "storm.network.topography.plugin" "org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping", "storm.zookeeper.session.timeout" 20000, "drpc.childopts" "-Xmx768m", "drpc.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.connection.timeout" 15000, "storm.zookeeper.auth.user" nil, "storm.meta.serialization.delegate" "org.apache.storm.serialization.GzipThriftSerializationDelegate", "topology.max.spout.pending" 300, "storm.codedistributor.class" "org.apache.storm.codedistributor.LocalFileSystemCodeDistributor", "nimbus.supervisor.timeout.secs" 60, "maxHitsPerSelector" 100, "nimbus.task.timeout.secs" 30, "drpc.port" 3772, "pacemaker.max.threads" 50, "storm.zookeeper.retry.intervalceiling.millis" 30000, "nimbus.thrift.port" 6627, "storm.auth.simple-acl.admins" [], "topology.component.cpu.pcore.percent" 10.0, "supervisor.memory.capacity.mb" 3072.0, "storm.nimbus.retry.times" 5, "supervisor.worker.start.timeout.secs" 120, "useHdfs" false, "storm.zookeeper.retry.interval" 1000, "limitHitsPerSelector" true, "logs.users" nil, "worker.profiler.command" "flight.bash", "transactional.zookeeper.port" nil, "drpc.max_buffer_size" 1048576, "pacemaker.thread.timeout" 10, "task.credentials.poll.secs" 30, "blobstore.superuser" "voyager", "drpc.https.keystore.type" "JKS", "topology.worker.receiver.thread.count" 1, "topology.state.checkpoint.interval.ms" 1000, "hdfsUri" "localhost", "supervisor.slots.ports" [6700 6701 6702 6703], "saltColumns" true, "topology.transfer.buffer.size" 32, "storm.health.check.dir" "healthchecks", "topology.worker.shared.thread.pool.size" 4, "drpc.authorizer.acl.strict" false, "nimbus.file.copy.expiration.secs" 600, "worker.profiler.childopts" "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder", "topology.executor.receive.buffer.size" 1024, "backpressure.disruptor.low.watermark" 0.4, "allowAdHocQuerySchemas" false, "queryFile" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/pir_integrationTest-query7554668182117678094.txt", "nimbus.task.launch.secs" 120, "storm.local.mode.zmq" false, "storm.messaging.netty.buffer_size" 5242880, "storm.cluster.state.store" "org.apache.storm.cluster_state.zookeeper_state_factory", "worker.heartbeat.frequency.secs" 1, "storm.log4j2.conf.dir" "log4j2", "ui.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.root" "/storm", "topology.tick.tuple.freq.secs" nil, "drpc.https.port" -1, "storm.workers.artifacts.dir" "workers-artifacts", "supervisor.blobstore.download.max_retries" 3, "task.refresh.poll.secs" 10, "storm.exhibitor.port" 8080, "task.heartbeat.frequency.secs" 3, "pacemaker.port" 6699, "storm.messaging.netty.max_wait_ms" 1000, "nimbus.impersonation.authorizer" "org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer", "topology.component.resources.offheap.memory.mb" 0.0, "drpc.http.port" 3774, "topology.error.throttle.interval.secs" 10, "storm.messaging.transport" "org.apache.storm.messaging.netty.Context", "storm.messaging.netty.authentication" false, "topology.component.resources.onheap.memory.mb" 128.0, "rowDivisions" 2, "topology.kryo.factory" "org.apache.storm.serialization.DefaultKryoFactory", "worker.gc.childopts" "", "nimbus.topology.validator" "org.apache.storm.nimbus.DefaultTopologyValidator", "nimbus.seeds" ["localhost"], "nimbus.queue.size" 100000, "nimbus.cleanup.inbox.freq.secs" 600, "storm.blobstore.replication.factor" 3, "worker.heap.memory.mb" 750, "logviewer.max.sum.worker.logs.size.mb" 4096, "pacemaker.childopts" "-Xmx1024m", "nSquared" "893714063091493252140805543927462484189909163470256324669366233674468493934531351808411750089403379605919371579520956313614309759596321404680678803731365842878590760838574242511806531716813184820975781862008105030373882425133453241", "ui.users" nil, "transactional.zookeeper.servers" nil, "supervisor.worker.timeout.secs" 30, "storm.zookeeper.auth.password" nil, "client.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "supervisor.childopts" "-Xmx256m", "topology.worker.max.heap.size.mb" 768.0, "backpressure.disruptor.high.watermark" 0.9, "ui.filter" nil, "ui.header.buffer.bytes" 4096, "topology.min.replication.count" 1, "topology.disruptor.wait.timeout.millis" 1000, "enccolmultboltPar" 2, "storm.nimbus.retry.intervalceiling.millis" 60000, "topology.trident.batch.emit.interval.millis" 50, "storm.auth.simple-acl.users" [], "drpc.invocations.threads" 64, "java.library.path" "/usr/local/lib:/opt/local/lib:/usr/lib", "encrowcalcboltPar" 2, "ui.port" 8080, "dschema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml", "storm.exhibitor.poll.uripath" "/exhibitor/v1/cluster/list", "storm.messaging.netty.transfer.batch.size" 262144, "logviewer.appender.name" "A1", "nimbus.thrift.max_buffer_size" 1048576, "storm.auth.simple-acl.users.commands" [], "drpc.request.timeout.secs" 600}
2016-08-30 09:55:20,224 INFO  daemon.nimbus      [] - Using default scheduler
2016-08-30 09:55:20,346 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,354 INFO  zookeeper.ZooKeeper  [] - Client environment:zookeeper.version=3.4.6-1569965, built on 02/20/2014 09:09 GMT
2016-08-30 09:55:20,354 INFO  zookeeper.ZooKeeper  [] - Client environment:host.name=traveler.ltsnet.net
2016-08-30 09:55:20,354 INFO  zookeeper.ZooKeeper  [] - Client environment:java.version=1.8.0_102
2016-08-30 09:55:20,355 INFO  zookeeper.ZooKeeper  [] - Client environment:java.vendor=Oracle Corporation
2016-08-30 09:55:20,355 INFO  zookeeper.ZooKeeper  [] - Client environment:java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre
2016-08-30 09:55:20,355 INFO  zookeeper.ZooKeeper  [] - Client environment:java.class.path=/Users/voyager/apachePirk/incubator-pirk/target/test-classes:/Users/voyager/apachePirk/incubator-pirk/target/classes:/Users/voyager/.m2/repository/junit/junit/4.12/junit-4.12.jar:/Users/voyager/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/Users/voyager/.m2/repository/org/apache/commons/commons-math3/3.3/commons-math3-3.3.jar:/Users/voyager/.m2/repository/com/googlecode/json-simple/json-simple/1.1/json-simple-1.1.jar:/Users/voyager/.m2/repository/commons-net/commons-net/3.3/commons-net-3.3.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-common/2.7.2/hadoop-common-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-annotations/2.7.2/hadoop-annotations-2.7.2.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_102.jdk/Contents/Home/jre/../lib/tools.jar:/Users/voyager/.m2/repository/com/google/guava/guava/11.0.2/guava-11.0.2.jar:/Users/voyager/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/Users/voyager/.m2/repository/xmlenc/xmlenc/0.52/xmlenc-0.52.jar:/Users/voyager/.m2/repository/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar:/Users/voyager/.m2/repository/commons-codec/commons-codec/1.4/commons-codec-1.4.jar:/Users/voyager/.m2/repository/commons-io/commons-io/2.4/commons-io-2.4.jar:/Users/voyager/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/Users/voyager/.m2/repository/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/jetty/6.1.26/jetty-6.1.26.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/jetty-util/6.1.26/jetty-util-6.1.26.jar:/Users/voyager/.m2/repository/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar:/Users/voyager/.m2/repository/com/sun/jersey/jersey-core/1.9/jersey-core-1.9.jar:/Users/voyager/.m2/repository/com/sun/jersey/jersey-json/1.9/jersey-json-1.9.jar:/Users/voyager/.m2/repository/org/codehaus/jettison/jettison/1.1/jettison-1.1.jar:/Users/voyager/.m2/repository/com/sun/xml/bind/jaxb-impl/2.2.3-1/jaxb-impl-2.2.3-1.jar:/Users/voyager/.m2/repository/org/codehaus/jackson/jackson-jaxrs/1.8.3/jackson-jaxrs-1.8.3.jar:/Users/voyager/.m2/repository/org/codehaus/jackson/jackson-xc/1.8.3/jackson-xc-1.8.3.jar:/Users/voyager/.m2/repository/com/sun/jersey/jersey-server/1.9/jersey-server-1.9.jar:/Users/voyager/.m2/repository/asm/asm/3.1/asm-3.1.jar:/Users/voyager/.m2/repository/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar:/Users/voyager/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/voyager/.m2/repository/net/java/dev/jets3t/jets3t/0.9.0/jets3t-0.9.0.jar:/Users/voyager/.m2/repository/org/apache/httpcomponents/httpclient/4.1.2/httpclient-4.1.2.jar:/Users/voyager/.m2/repository/org/apache/httpcomponents/httpcore/4.1.2/httpcore-4.1.2.jar:/Users/voyager/.m2/repository/com/jamesmurty/utils/java-xmlbuilder/0.4/java-xmlbuilder-0.4.jar:/Users/voyager/.m2/repository/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/Users/voyager/.m2/repository/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar:/Users/voyager/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar:/Users/voyager/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar:/Users/voyager/.m2/repository/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar:/Users/voyager/.m2/repository/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/Users/voyager/.m2/repository/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/Users/voyager/.m2/repository/org/apache/avro/avro/1.7.4/avro-1.7.4.jar:/Users/voyager/.m2/repository/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar:/Users/voyager/.m2/repository/com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar:/Users/voyager/.m2/repository/com/google/code/gson/gson/2.2.4/gson-2.2.4.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-auth/2.7.2/hadoop-auth-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/directory/server/apacheds-kerberos-codec/2.0.0-M15/apacheds-kerberos-codec-2.0.0-M15.jar:/Users/voyager/.m2/repository/org/apache/directory/server/apacheds-i18n/2.0.0-M15/apacheds-i18n-2.0.0-M15.jar:/Users/voyager/.m2/repository/org/apache/directory/api/api-asn1-api/1.0.0-M20/api-asn1-api-1.0.0-M20.jar:/Users/voyager/.m2/repository/org/apache/directory/api/api-util/1.0.0-M20/api-util-1.0.0-M20.jar:/Users/voyager/.m2/repository/com/jcraft/jsch/0.1.42/jsch-0.1.42.jar:/Users/voyager/.m2/repository/org/apache/curator/curator-recipes/2.7.1/curator-recipes-2.7.1.jar:/Users/voyager/.m2/repository/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar:/Users/voyager/.m2/repository/org/apache/htrace/htrace-core/3.1.0-incubating/htrace-core-3.1.0-incubating.jar:/Users/voyager/.m2/repository/org/apache/zookeeper/zookeeper/3.4.6/zookeeper-3.4.6.jar:/Users/voyager/.m2/repository/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar:/Users/voyager/.m2/repository/org/tukaani/xz/1.0/xz-1.0.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-core/2.7.2/hadoop-mapreduce-client-core-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-yarn-common/2.7.2/hadoop-yarn-common-2.7.2.jar:/Users/voyager/.m2/repository/javax/xml/bind/jaxb-api/2.2.2/jaxb-api-2.2.2.jar:/Users/voyager/.m2/repository/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar:/Users/voyager/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/Users/voyager/.m2/repository/com/sun/jersey/jersey-client/1.9/jersey-client-1.9.jar:/Users/voyager/.m2/repository/com/google/inject/guice/3.0/guice-3.0.jar:/Users/voyager/.m2/repository/javax/inject/javax.inject/1/javax.inject-1.jar:/Users/voyager/.m2/repository/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/Users/voyager/.m2/repository/com/sun/jersey/contribs/jersey-guice/1.9/jersey-guice-1.9.jar:/Users/voyager/.m2/repository/com/google/inject/extensions/guice-servlet/3.0/guice-servlet-3.0.jar:/Users/voyager/.m2/repository/io/netty/netty/3.6.2.Final/netty-3.6.2.Final.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-client/2.7.2/hadoop-client-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-hdfs/2.7.2/hadoop-hdfs-2.7.2.jar:/Users/voyager/.m2/repository/org/fusesource/leveldbjni/leveldbjni-all/1.8/leveldbjni-all-1.8.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-app/2.7.2/hadoop-mapreduce-client-app-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-common/2.7.2/hadoop-mapreduce-client-common-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-yarn-client/2.7.2/hadoop-yarn-client-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-yarn-server-common/2.7.2/hadoop-yarn-server-common-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-shuffle/2.7.2/hadoop-mapreduce-client-shuffle-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-yarn-api/2.7.2/hadoop-yarn-api-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/hadoop/hadoop-mapreduce-client-jobclient/2.7.2/hadoop-mapreduce-client-jobclient-2.7.2.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-core_2.11/1.6.1/spark-core_2.11-1.6.1.jar:/Users/voyager/.m2/repository/org/apache/avro/avro-mapred/1.7.7/avro-mapred-1.7.7-hadoop2.jar:/Users/voyager/.m2/repository/org/apache/avro/avro-ipc/1.7.7/avro-ipc-1.7.7.jar:/Users/voyager/.m2/repository/org/apache/avro/avro-ipc/1.7.7/avro-ipc-1.7.7-tests.jar:/Users/voyager/.m2/repository/com/twitter/chill_2.11/0.5.0/chill_2.11-0.5.0.jar:/Users/voyager/.m2/repository/com/esotericsoftware/kryo/kryo/2.21/kryo-2.21.jar:/Users/voyager/.m2/repository/com/esotericsoftware/reflectasm/reflectasm/1.07/reflectasm-1.07-shaded.jar:/Users/voyager/.m2/repository/com/esotericsoftware/minlog/minlog/1.2/minlog-1.2.jar:/Users/voyager/.m2/repository/com/twitter/chill-java/0.5.0/chill-java-0.5.0.jar:/Users/voyager/.m2/repository/org/apache/xbean/xbean-asm5-shaded/4.4/xbean-asm5-shaded-4.4.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-launcher_2.11/1.6.1/spark-launcher_2.11-1.6.1.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-network-common_2.11/1.6.1/spark-network-common_2.11-1.6.1.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-network-shuffle_2.11/1.6.1/spark-network-shuffle_2.11-1.6.1.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.4.4/jackson-annotations-2.4.4.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-unsafe_2.11/1.6.1/spark-unsafe_2.11-1.6.1.jar:/Users/voyager/.m2/repository/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/Users/voyager/.m2/repository/org/apache/commons/commons-lang3/3.3.2/commons-lang3-3.3.2.jar:/Users/voyager/.m2/repository/org/slf4j/jul-to-slf4j/1.7.10/jul-to-slf4j-1.7.10.jar:/Users/voyager/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.10/jcl-over-slf4j-1.7.10.jar:/Users/voyager/.m2/repository/com/ning/compress-lzf/1.0.3/compress-lzf-1.0.3.jar:/Users/voyager/.m2/repository/org/xerial/snappy/snappy-java/1.1.2/snappy-java-1.1.2.jar:/Users/voyager/.m2/repository/net/jpountz/lz4/lz4/1.3.0/lz4-1.3.0.jar:/Users/voyager/.m2/repository/org/roaringbitmap/RoaringBitmap/0.5.11/RoaringBitmap-0.5.11.jar:/Users/voyager/.m2/repository/com/typesafe/akka/akka-remote_2.11/2.3.11/akka-remote_2.11-2.3.11.jar:/Users/voyager/.m2/repository/com/typesafe/akka/akka-actor_2.11/2.3.11/akka-actor_2.11-2.3.11.jar:/Users/voyager/.m2/repository/com/typesafe/config/1.2.1/config-1.2.1.jar:/Users/voyager/.m2/repository/org/uncommons/maths/uncommons-maths/1.2.2a/uncommons-maths-1.2.2a.jar:/Users/voyager/.m2/repository/com/typesafe/akka/akka-slf4j_2.11/2.3.11/akka-slf4j_2.11-2.3.11.jar:/Users/voyager/.m2/repository/org/json4s/json4s-jackson_2.11/3.2.10/json4s-jackson_2.11-3.2.10.jar:/Users/voyager/.m2/repository/org/json4s/json4s-core_2.11/3.2.10/json4s-core_2.11-3.2.10.jar:/Users/voyager/.m2/repository/org/json4s/json4s-ast_2.11/3.2.10/json4s-ast_2.11-3.2.10.jar:/Users/voyager/.m2/repository/org/apache/mesos/mesos/0.21.1/mesos-0.21.1-shaded-protobuf.jar:/Users/voyager/.m2/repository/io/netty/netty-all/4.0.29.Final/netty-all-4.0.29.Final.jar:/Users/voyager/.m2/repository/com/clearspring/analytics/stream/2.7.0/stream-2.7.0.jar:/Users/voyager/.m2/repository/io/dropwizard/metrics/metrics-core/3.1.2/metrics-core-3.1.2.jar:/Users/voyager/.m2/repository/io/dropwizard/metrics/metrics-jvm/3.1.2/metrics-jvm-3.1.2.jar:/Users/voyager/.m2/repository/io/dropwizard/metrics/metrics-json/3.1.2/metrics-json-3.1.2.jar:/Users/voyager/.m2/repository/io/dropwizard/metrics/metrics-graphite/3.1.2/metrics-graphite-3.1.2.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.4/jackson-databind-2.4.4.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.4.4/jackson-core-2.4.4.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.11/2.4.4/jackson-module-scala_2.11-2.4.4.jar:/Users/voyager/.m2/repository/org/apache/ivy/ivy/2.4.0/ivy-2.4.0.jar:/Users/voyager/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar:/Users/voyager/.m2/repository/org/tachyonproject/tachyon-client/0.8.2/tachyon-client-0.8.2.jar:/Users/voyager/.m2/repository/org/tachyonproject/tachyon-underfs-hdfs/0.8.2/tachyon-underfs-hdfs-0.8.2.jar:/Users/voyager/.m2/repository/org/tachyonproject/tachyon-underfs-s3/0.8.2/tachyon-underfs-s3-0.8.2.jar:/Users/voyager/.m2/repository/org/tachyonproject/tachyon-underfs-local/0.8.2/tachyon-underfs-local-0.8.2.jar:/Users/voyager/.m2/repository/net/razorvine/pyrolite/4.9/pyrolite-4.9.jar:/Users/voyager/.m2/repository/net/sf/py4j/py4j/0.9/py4j-0.9.jar:/Users/voyager/.m2/repository/org/spark-project/spark/unused/1.0.0/unused-1.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-streaming_2.10/2.0.0/spark-streaming_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-core_2.10/2.0.0/spark-core_2.10-2.0.0.jar:/Users/voyager/.m2/repository/com/twitter/chill_2.10/0.8.0/chill_2.10-0.8.0.jar:/Users/voyager/.m2/repository/com/esotericsoftware/kryo-shaded/3.0.3/kryo-shaded-3.0.3.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-launcher_2.10/2.0.0/spark-launcher_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-network-common_2.10/2.0.0/spark-network-common_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-network-shuffle_2.10/2.0.0/spark-network-shuffle_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-unsafe_2.10/2.0.0/spark-unsafe_2.10-2.0.0.jar:/Users/voyager/.m2/repository/javax/servlet/javax.servlet-api/3.1.0/javax.servlet-api-3.1.0.jar:/Users/voyager/.m2/repository/org/json4s/json4s-jackson_2.10/3.2.11/json4s-jackson_2.10-3.2.11.jar:/Users/voyager/.m2/repository/org/json4s/json4s-core_2.10/3.2.11/json4s-core_2.10-3.2.11.jar:/Users/voyager/.m2/repository/org/json4s/json4s-ast_2.10/3.2.11/json4s-ast_2.10-3.2.11.jar:/Users/voyager/.m2/repository/org/scala-lang/scalap/2.10.0/scalap-2.10.0.jar:/Users/voyager/.m2/repository/org/scala-lang/scala-compiler/2.10.0/scala-compiler-2.10.0.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/core/jersey-client/2.22.2/jersey-client-2.22.2.jar:/Users/voyager/.m2/repository/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/hk2-api/2.4.0-b34/hk2-api-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/hk2-utils/2.4.0-b34/hk2-utils-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/external/aopalliance-repackaged/2.4.0-b34/aopalliance-repackaged-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/external/javax.inject/2.4.0-b34/javax.inject-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/hk2-locator/2.4.0-b34/hk2-locator-2.4.0-b34.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/core/jersey-common/2.22.2/jersey-common-2.22.2.jar:/Users/voyager/.m2/repository/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/bundles/repackaged/jersey-guava/2.22.2/jersey-guava-2.22.2.jar:/Users/voyager/.m2/repository/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/core/jersey-server/2.22.2/jersey-server-2.22.2.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/media/jersey-media-jaxb/2.22.2/jersey-media-jaxb-2.22.2.jar:/Users/voyager/.m2/repository/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet/2.22.2/jersey-container-servlet-2.22.2.jar:/Users/voyager/.m2/repository/org/glassfish/jersey/containers/jersey-container-servlet-core/2.22.2/jersey-container-servlet-core-2.22.2.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/module/jackson-module-scala_2.10/2.6.5/jackson-module-scala_2.10-2.6.5.jar:/Users/voyager/.m2/repository/org/scala-lang/scala-reflect/2.10.6/scala-reflect-2.10.6.jar:/Users/voyager/.m2/repository/com/fasterxml/jackson/module/jackson-module-paranamer/2.6.5/jackson-module-paranamer-2.6.5.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-tags_2.10/2.0.0/spark-tags_2.10-2.0.0.jar:/Users/voyager/.m2/repository/org/scalatest/scalatest_2.10/2.2.6/scalatest_2.10-2.2.6.jar:/Users/voyager/.m2/repository/org/elasticsearch/elasticsearch-hadoop/2.3.3/elasticsearch-hadoop-2.3.3.jar:/Users/voyager/.m2/repository/org/apache/pig/pig/0.15.0/pig-0.15.0.jar:/Users/voyager/.m2/repository/tomcat/jasper-runtime/5.5.12/jasper-runtime-5.5.12.jar:/Users/voyager/.m2/repository/tomcat/jasper-compiler/5.5.12/jasper-compiler-5.5.12.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/jsp-api-2.1/6.1.14/jsp-api-2.1-6.1.14.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/jsp-2.1/6.1.14/jsp-2.1-6.1.14.jar:/Users/voyager/.m2/repository/org/eclipse/jdt/core/3.1.1/core-3.1.1.jar:/Users/voyager/.m2/repository/ant/ant/1.6.5/ant-1.6.5.jar:/Users/voyager/.m2/repository/commons-el/commons-el/1.0/commons-el-1.0.jar:/Users/voyager/.m2/repository/org/mortbay/jetty/servlet-api-2.5/6.1.14/servlet-api-2.5-6.1.14.jar:/Users/voyager/.m2/repository/net/sf/kosmosfs/kfs/0.3/kfs-0.3.jar:/Users/voyager/.m2/repository/hsqldb/hsqldb/1.8.0.10/hsqldb-1.8.0.10.jar:/Users/voyager/.m2/repository/jline/jline/1.0/jline-1.0.jar:/Users/voyager/.m2/repository/org/antlr/ST4/4.0.4/ST4-4.0.4.jar:/Users/voyager/.m2/repository/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar:/Users/voyager/.m2/repository/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar:/Users/voyager/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/voyager/.m2/repository/dk/brics/automaton/automaton/1.11-8/automaton-1.11-8.jar:/Users/voyager/.m2/repository/joda-time/joda-time/2.1/joda-time-2.1.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-sql_2.10/1.6.1/spark-sql_2.10-1.6.1.jar:/Users/voyager/.m2/repository/org/apache/spark/spark-catalyst_2.10/1.6.1/spark-catalyst_2.10-1.6.1.jar:/Users/voyager/.m2/repository/org/codehaus/janino/janino/2.7.8/janino-2.7.8.jar:/Users/voyager/.m2/repository/org/codehaus/janino/commons-compiler/2.7.8/commons-compiler-2.7.8.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-column/1.7.0/parquet-column-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-common/1.7.0/parquet-common-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-encoding/1.7.0/parquet-encoding-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-generator/1.7.0/parquet-generator-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-hadoop/1.7.0/parquet-hadoop-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-format/2.3.0-incubating/parquet-format-2.3.0-incubating.jar:/Users/voyager/.m2/repository/org/apache/parquet/parquet-jackson/1.7.0/parquet-jackson-1.7.0.jar:/Users/voyager/.m2/repository/org/apache/storm/storm-core/1.0.1/storm-core-1.0.1.jar:/Users/voyager/.m2/repository/com/esotericsoftware/kryo/3.0.3/kryo-3.0.3.jar:/Users/voyager/.m2/repository/com/esotericsoftware/reflectasm/1.10.1/reflectasm-1.10.1.jar:/Users/voyager/.m2/repository/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/Users/voyager/.m2/repository/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar:/Users/voyager/.m2/repository/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/Users/voyager/.m2/repository/org/clojure/clojure/1.7.0/clojure-1.7.0.jar:/Users/voyager/.m2/repository/com/lmax/disruptor/3.3.2/disruptor-3.3.2.jar:/Users/voyager/.m2/repository/org/slf4j/log4j-over-slf4j/1.6.6/log4j-over-slf4j-1.6.6.jar:/Users/voyager/.m2/repository/org/apache/storm/storm-kafka/1.0.1/storm-kafka-1.0.1.jar:/Users/voyager/.m2/repository/org/apache/curator/curator-framework/2.10.0/curator-framework-2.10.0.jar:/Users/voyager/.m2/repository/org/apache/curator/curator-client/2.10.0/curator-client-2.10.0.jar:/Users/voyager/.m2/repository/org/apache/kafka/kafka-clients/0.9.0.1/kafka-clients-0.9.0.1.jar:/Users/voyager/.m2/repository/org/apache/kafka/kafka_2.10/0.9.0.1/kafka_2.10-0.9.0.1.jar:/Users/voyager/.m2/repository/com/101tec/zkclient/0.7/zkclient-0.7.jar:/Users/voyager/.m2/repository/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar:/Users/voyager/.m2/repository/net/sf/jopt-simple/jopt-simple/3.2/jopt-simple-3.2.jar:/Users/voyager/.m2/repository/org/apache/curator/curator-test/2.10.0/curator-test-2.10.0.jar:/Users/voyager/.m2/repository/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/Users/voyager/.m2/repository/org/apache/commons/commons-math/2.2/commons-math-2.2.jar:/Users/voyager/.m2/repository/com/squareup/jnagmp/jnagmp/1.1.0/jnagmp-1.1.0.jar:/Users/voyager/.m2/repository/net/java/dev/jna/jna/4.0.0/jna-4.0.0.jar:/Users/voyager/.m2/repository/org/openjdk/jmh/jmh-core/1.11.3/jmh-core-1.11.3.jar:/Users/voyager/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.11.3/jmh-generator-annprocess-1.11.3.jar:/Users/voyager/.m2/repository/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar:/Users/voyager/.m2/repository/org/apache/logging/log4j/log4j-slf4j-impl/2.1/log4j-slf4j-impl-2.1.jar:/Users/voyager/.m2/repository/org/apache/logging/log4j/log4j-api/2.1/log4j-api-2.1.jar:/Users/voyager/.m2/repository/org/apache/logging/log4j/log4j-core/2.1/log4j-core-2.1.jar:/Users/voyager/.m2/repository/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar:
2016-08-30 09:55:20,355 INFO  zookeeper.ZooKeeper  [] - Client environment:java.library.path=/Users/voyager/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.
2016-08-30 09:55:20,355 INFO  zookeeper.ZooKeeper  [] - Client environment:java.io.tmpdir=/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/
2016-08-30 09:55:20,355 INFO  zookeeper.ZooKeeper  [] - Client environment:java.compiler=<NA>
2016-08-30 09:55:20,355 INFO  zookeeper.ZooKeeper  [] - Client environment:os.name=Mac OS X
2016-08-30 09:55:20,355 INFO  zookeeper.ZooKeeper  [] - Client environment:os.arch=x86_64
2016-08-30 09:55:20,356 INFO  zookeeper.ZooKeeper  [] - Client environment:os.version=10.10.1
2016-08-30 09:55:20,356 INFO  zookeeper.ZooKeeper  [] - Client environment:user.name=voyager
2016-08-30 09:55:20,356 INFO  zookeeper.ZooKeeper  [] - Client environment:user.home=/Users/voyager
2016-08-30 09:55:20,356 INFO  zookeeper.ZooKeeper  [] - Client environment:user.dir=/Users/voyager/apachePirk/incubator-pirk
2016-08-30 09:55:20,357 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@6945fdb8
2016-08-30 09:55:20,374 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,375 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,375 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56281
2016-08-30 09:55:20,383 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56281
2016-08-30 09:55:20,386 INFO  persistence.FileTxnLog  [] - Creating new log file: log.1
2016-08-30 09:55:20,403 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,404 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@21f48f6c
2016-08-30 09:55:20,407 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,407 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,407 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56282
2016-08-30 09:55:20,407 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56282
2016-08-30 09:55:20,585 INFO  blobstore.FileBlobStoreImpl  [] - Creating new blob store based in /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/0c7a106b-3891-4efa-a029-1d8f3cced21c/blobs
2016-08-30 09:55:20,591 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0000 with negotiated timeout 20000 for client /127.0.0.1:56281
2016-08-30 09:55:20,591 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0000, negotiated timeout = 20000
2016-08-30 09:55:20,592 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0001 with negotiated timeout 20000 for client /127.0.0.1:56282
2016-08-30 09:55:20,592 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0001, negotiated timeout = 20000
2016-08-30 09:55:20,598 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,598 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,601 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:20,617 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,618 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@5d0ca8a5
2016-08-30 09:55:20,620 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,621 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,621 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56283
2016-08-30 09:55:20,622 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56283
2016-08-30 09:55:20,622 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0002 with negotiated timeout 20000 for client /127.0.0.1:56283
2016-08-30 09:55:20,623 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0002, negotiated timeout = 20000
2016-08-30 09:55:20,623 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,623 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:20,676 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:20,679 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0002
2016-08-30 09:55:20,680 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:20,681 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0002 closed
2016-08-30 09:55:20,681 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56283 which had sessionid 0x156dbbb99be0002
2016-08-30 09:55:20,683 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,684 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@b768e4d
2016-08-30 09:55:20,685 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,686 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,686 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56284
2016-08-30 09:55:20,686 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56284
2016-08-30 09:55:20,688 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0003 with negotiated timeout 20000 for client /127.0.0.1:56284
2016-08-30 09:55:20,688 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0003, negotiated timeout = 20000
2016-08-30 09:55:20,688 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,689 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,690 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@2c634c0
2016-08-30 09:55:20,691 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,692 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,692 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56285
2016-08-30 09:55:20,692 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56285
2016-08-30 09:55:20,693 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0004 with negotiated timeout 20000 for client /127.0.0.1:56285
2016-08-30 09:55:20,693 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0004, negotiated timeout = 20000
2016-08-30 09:55:20,693 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,754 INFO  storm.zookeeper    [] - Queued up for leader lock.
2016-08-30 09:55:20,763 INFO  server.PrepRequestProcessor  [] - Got user-level KeeperException when processing sessionid:0x156dbbb99be0000 type:create cxid:0x1 zxid:0x12 txntype:-1 reqpath:n/a Error Path:/storm/leader-lock Error:KeeperErrorCode = NoNode for /storm/leader-lock
2016-08-30 09:55:20,774 WARN  utils.ZKPaths      [] - The version of ZooKeeper being used doesn't support Container nodes. CreateMode.PERSISTENT will be used instead.
2016-08-30 09:55:20,789 INFO  storm.zookeeper    [] - traveler.ltsnet.net gained leadership
2016-08-30 09:55:20,791 INFO  metrics.MetricsUtils  [] - Using statistics reporter plugin:org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter
2016-08-30 09:55:20,793 INFO  reporters.JmxPreparableReporter  [] - Preparing...
2016-08-30 09:55:20,803 INFO  daemon.common      [] - Started statistics report plugin...
2016-08-30 09:55:20,815 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,816 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@55c75b72
2016-08-30 09:55:20,817 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,818 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,818 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56286
2016-08-30 09:55:20,818 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56286
2016-08-30 09:55:20,819 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0005 with negotiated timeout 20000 for client /127.0.0.1:56286
2016-08-30 09:55:20,819 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0005, negotiated timeout = 20000
2016-08-30 09:55:20,819 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,820 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:20,821 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:20,822 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0005
2016-08-30 09:55:20,823 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:20,823 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0005 closed
2016-08-30 09:55:20,823 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56286 which had sessionid 0x156dbbb99be0005
2016-08-30 09:55:20,824 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,825 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@61a7930e
2016-08-30 09:55:20,826 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,826 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,826 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56287
2016-08-30 09:55:20,826 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56287
2016-08-30 09:55:20,827 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,827 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0006 with negotiated timeout 20000 for client /127.0.0.1:56287
2016-08-30 09:55:20,827 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@c88a842
2016-08-30 09:55:20,827 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0006, negotiated timeout = 20000
2016-08-30 09:55:20,828 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,829 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,830 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,830 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56288
2016-08-30 09:55:20,830 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56288
2016-08-30 09:55:20,833 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0007 with negotiated timeout 20000 for client /127.0.0.1:56288
2016-08-30 09:55:20,833 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0007, negotiated timeout = 20000
2016-08-30 09:55:20,834 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,834 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:20,837 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:20,838 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0007
2016-08-30 09:55:20,839 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56288 which had sessionid 0x156dbbb99be0007
2016-08-30 09:55:20,839 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:20,840 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0007 closed
2016-08-30 09:55:20,841 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,841 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@19cee7ed
2016-08-30 09:55:20,843 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,844 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,844 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56289
2016-08-30 09:55:20,844 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56289
2016-08-30 09:55:20,850 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0008 with negotiated timeout 20000 for client /127.0.0.1:56289
2016-08-30 09:55:20,850 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0008, negotiated timeout = 20000
2016-08-30 09:55:20,850 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,874 INFO  daemon.supervisor  [] - Starting Supervisor with conf {"topology.builtin.metrics.bucket.size.secs" 60, "nimbus.childopts" "-Xmx1024m", "ui.filter.params" nil, "storm.cluster.mode" "local", "storm.messaging.netty.client_worker_threads" 1, "logviewer.max.per.worker.logs.size.mb" 2048, "supervisor.run.worker.as.user" false, "topology.max.task.parallelism" nil, "topology.priority" 29, "zmq.threads" 1, "storm.group.mapping.service" "org.apache.storm.security.auth.ShellBasedGroupsMapping", "transactional.zookeeper.root" "/transactional", "topology.sleep.spout.wait.strategy.time.ms" 1, "scheduler.display.resource" false, "topology.max.replication.wait.time.sec" 60, "qSchema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml", "drpc.invocations.port" 3773, "supervisor.localizer.cache.target.size.mb" 10240, "topology.multilang.serializer" "org.apache.storm.multilang.JsonSerializer", "storm.messaging.netty.server_worker_threads" 1, "nimbus.blobstore.class" "org.apache.storm.blobstore.LocalFsBlobStore", "resource.aware.scheduler.eviction.strategy" "org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy", "topology.max.error.report.per.interval" 5, "storm.thrift.transport" "org.apache.storm.security.auth.SimpleTransportPlugin", "zmq.hwm" 0, "output" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/responderFile3778566957499280122.txt", "storm.group.mapping.service.params" nil, "worker.profiler.enabled" false, "storm.principal.tolocal" "org.apache.storm.security.auth.DefaultPrincipalToLocal", "supervisor.worker.shutdown.sleep.secs" 1, "pacemaker.host" "localhost", "storm.zookeeper.retry.times" 5, "ui.actions.enabled" true, "zmq.linger.millis" 0, "supervisor.enable" true, "topology.stats.sample.rate" 0.05, "storm.messaging.netty.min_wait_ms" 100, "worker.log.level.reset.poll.secs" 30, "storm.zookeeper.port" 2000, "supervisor.heartbeat.frequency.secs" 5, "topology.enable.message.timeouts" false, "supervisor.cpu.capacity" 400.0, "drpc.worker.threads" 64, "supervisor.blobstore.download.thread.count" 5, "drpc.queue.size" 128, "topology.backpressure.enable" true, "supervisor.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "storm.blobstore.inputstream.buffer.size.bytes" 65536, "topology.shellbolt.max.pending" 100, "drpc.https.keystore.password" "", "nimbus.code.sync.freq.secs" 120, "logviewer.port" 8000, "topology.scheduler.strategy" "org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy", "topology.executor.send.buffer.size" 1024, "resource.aware.scheduler.priority.strategy" "org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy", "pacemaker.auth.method" "NONE", "storm.daemon.metrics.reporter.plugins" ["org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter"], "topology.worker.logwriter.childopts" "-Xmx64m", "topology.spout.wait.strategy" "org.apache.storm.spout.SleepSpoutWaitStrategy", "ui.host" "0.0.0.0", "storm.nimbus.retry.interval.millis" 2000, "nimbus.inbox.jar.expiration.secs" 3600, "dev.zookeeper.path" "/tmp/dev-storm-zookeeper", "topology.acker.executors" 1, "topology.fall.back.on.java.serialization" true, "topology.eventlogger.executors" 0, "supervisor.localizer.cleanup.interval.ms" 600000, "storm.zookeeper.servers" ["localhost"], "nimbus.thrift.threads" 64, "logviewer.cleanup.age.mins" 10080, "topology.worker.childopts" nil, "topology.classpath" nil, "supervisor.monitor.frequency.secs" 3, "nimbus.credential.renewers.freq.secs" 600, "topology.skip.missing.kryo.registrations" true, "drpc.authorizer.acl.filename" "drpc-auth-acl.yaml", "pacemaker.kerberos.users" [], "storm.group.mapping.service.cache.duration.secs" 120, "topology.testing.always.try.serialize" false, "nimbus.monitor.freq.secs" 10, "queryInfo" {"useHDFSExpLookupTable" false, "hashKey" "someKey", "numSelectors" 6, "dataPartitionsBitSize" 8, "hashBitSize" 12, "numPartitionsPerDataElement" 36, "numBitsPerDataElement" 256, "uuid" "74cbee54-9a78-48c3-905d-c83a0782b051", "useExpLookupTable" false, "embedSelector" true, "queryType" "dns-hostname-query"}, "storm.health.check.timeout.ms" 5000, "supervisor.supervisors" [], "topology.tasks" nil, "topology.bolts.outgoing.overflow.buffer.enable" false, "splitPartitions" true, "storm.messaging.netty.socket.backlog" 500, "topology.workers" 1, "pacemaker.base.threads" 10, "storm.local.dir" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//809e4cbc-f8c6-4b20-9f6f-b3a7f7fcb81a", "topology.disable.loadaware" false, "worker.childopts" "-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump", "storm.auth.simple-white-list.users" [], "topology.disruptor.batch.timeout.millis" 1, "topology.message.timeout.secs" 30, "topology.state.synchronization.timeout.secs" 60, "topology.tuple.serializer" "org.apache.storm.serialization.types.ListDelegateSerializer", "supervisor.supervisors.commands" [], "nimbus.blobstore.expiration.secs" 600, "logviewer.childopts" "-Xmx128m", "topology.environment" nil, "topology.debug" false, "topology.disruptor.batch.size" 100, "storm.messaging.netty.max_retries" 300, "ui.childopts" "-Xmx768m", "storm.network.topography.plugin" "org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping", "storm.zookeeper.session.timeout" 20000, "drpc.childopts" "-Xmx768m", "drpc.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.connection.timeout" 15000, "storm.zookeeper.auth.user" nil, "storm.meta.serialization.delegate" "org.apache.storm.serialization.GzipThriftSerializationDelegate", "topology.max.spout.pending" 300, "storm.codedistributor.class" "org.apache.storm.codedistributor.LocalFileSystemCodeDistributor", "nimbus.supervisor.timeout.secs" 60, "maxHitsPerSelector" 100, "nimbus.task.timeout.secs" 30, "drpc.port" 3772, "pacemaker.max.threads" 50, "storm.zookeeper.retry.intervalceiling.millis" 30000, "nimbus.thrift.port" 6627, "storm.auth.simple-acl.admins" [], "topology.component.cpu.pcore.percent" 10.0, "supervisor.memory.capacity.mb" 3072.0, "storm.nimbus.retry.times" 5, "supervisor.worker.start.timeout.secs" 120, "useHdfs" false, "storm.zookeeper.retry.interval" 1000, "limitHitsPerSelector" true, "logs.users" nil, "worker.profiler.command" "flight.bash", "transactional.zookeeper.port" nil, "drpc.max_buffer_size" 1048576, "pacemaker.thread.timeout" 10, "task.credentials.poll.secs" 30, "blobstore.superuser" "voyager", "drpc.https.keystore.type" "JKS", "topology.worker.receiver.thread.count" 1, "topology.state.checkpoint.interval.ms" 1000, "hdfsUri" "localhost", "supervisor.slots.ports" (1024 1025 1026), "saltColumns" true, "topology.transfer.buffer.size" 32, "storm.health.check.dir" "healthchecks", "topology.worker.shared.thread.pool.size" 4, "drpc.authorizer.acl.strict" false, "nimbus.file.copy.expiration.secs" 600, "worker.profiler.childopts" "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder", "topology.executor.receive.buffer.size" 1024, "backpressure.disruptor.low.watermark" 0.4, "allowAdHocQuerySchemas" false, "queryFile" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/pir_integrationTest-query7554668182117678094.txt", "nimbus.task.launch.secs" 120, "storm.local.mode.zmq" false, "storm.messaging.netty.buffer_size" 5242880, "storm.cluster.state.store" "org.apache.storm.cluster_state.zookeeper_state_factory", "worker.heartbeat.frequency.secs" 1, "storm.log4j2.conf.dir" "log4j2", "ui.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.root" "/storm", "topology.tick.tuple.freq.secs" nil, "drpc.https.port" -1, "storm.workers.artifacts.dir" "workers-artifacts", "supervisor.blobstore.download.max_retries" 3, "task.refresh.poll.secs" 10, "storm.exhibitor.port" 8080, "task.heartbeat.frequency.secs" 3, "pacemaker.port" 6699, "storm.messaging.netty.max_wait_ms" 1000, "nimbus.impersonation.authorizer" "org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer", "topology.component.resources.offheap.memory.mb" 0.0, "drpc.http.port" 3774, "topology.error.throttle.interval.secs" 10, "storm.messaging.transport" "org.apache.storm.messaging.netty.Context", "storm.messaging.netty.authentication" false, "topology.component.resources.onheap.memory.mb" 128.0, "rowDivisions" 2, "topology.kryo.factory" "org.apache.storm.serialization.DefaultKryoFactory", "worker.gc.childopts" "", "nimbus.topology.validator" "org.apache.storm.nimbus.DefaultTopologyValidator", "nimbus.seeds" ["localhost"], "nimbus.queue.size" 100000, "nimbus.cleanup.inbox.freq.secs" 600, "storm.blobstore.replication.factor" 3, "worker.heap.memory.mb" 750, "logviewer.max.sum.worker.logs.size.mb" 4096, "pacemaker.childopts" "-Xmx1024m", "nSquared" "893714063091493252140805543927462484189909163470256324669366233674468493934531351808411750089403379605919371579520956313614309759596321404680678803731365842878590760838574242511806531716813184820975781862008105030373882425133453241", "ui.users" nil, "transactional.zookeeper.servers" nil, "supervisor.worker.timeout.secs" 30, "storm.zookeeper.auth.password" nil, "client.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "supervisor.childopts" "-Xmx256m", "topology.worker.max.heap.size.mb" 768.0, "backpressure.disruptor.high.watermark" 0.9, "ui.filter" nil, "ui.header.buffer.bytes" 4096, "topology.min.replication.count" 1, "topology.disruptor.wait.timeout.millis" 1000, "enccolmultboltPar" 2, "storm.nimbus.retry.intervalceiling.millis" 60000, "topology.trident.batch.emit.interval.millis" 50, "storm.auth.simple-acl.users" [], "drpc.invocations.threads" 64, "java.library.path" "/usr/local/lib:/opt/local/lib:/usr/lib", "encrowcalcboltPar" 2, "ui.port" 8080, "dschema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml", "storm.exhibitor.poll.uripath" "/exhibitor/v1/cluster/list", "storm.messaging.netty.transfer.batch.size" 262144, "logviewer.appender.name" "A1", "nimbus.thrift.max_buffer_size" 1048576, "storm.auth.simple-acl.users.commands" [], "drpc.request.timeout.secs" 600}
2016-08-30 09:55:20,908 INFO  localizer.Localizer  [] - Reconstruct localized resource: /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/809e4cbc-f8c6-4b20-9f6f-b3a7f7fcb81a/supervisor/usercache
2016-08-30 09:55:20,909 WARN  localizer.Localizer  [] - No left over resources found for any user during reconstructing of local resources at: /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/809e4cbc-f8c6-4b20-9f6f-b3a7f7fcb81a/supervisor/usercache
2016-08-30 09:55:20,914 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,915 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@627222d8
2016-08-30 09:55:20,916 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,917 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,917 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56290
2016-08-30 09:55:20,917 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56290
2016-08-30 09:55:20,918 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0009 with negotiated timeout 20000 for client /127.0.0.1:56290
2016-08-30 09:55:20,918 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be0009, negotiated timeout = 20000
2016-08-30 09:55:20,918 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,918 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:20,920 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:20,922 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0009
2016-08-30 09:55:20,922 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56290 which had sessionid 0x156dbbb99be0009
2016-08-30 09:55:20,923 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:20,923 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0009 closed
2016-08-30 09:55:20,924 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:20,925 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@7f0b32c0
2016-08-30 09:55:20,927 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:20,928 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:20,928 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56291
2016-08-30 09:55:20,929 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56291
2016-08-30 09:55:20,930 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be000a with negotiated timeout 20000 for client /127.0.0.1:56291
2016-08-30 09:55:20,930 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be000a, negotiated timeout = 20000
2016-08-30 09:55:20,930 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:20,971 INFO  daemon.supervisor  [] - Starting supervisor with id 589b499b-f6c4-4068-83f4-058efebbccab at host traveler.ltsnet.net
2016-08-30 09:55:20,983 INFO  logging.ThriftAccessLogger  [] - Request ID: 1 access from:  principal:  operation: submitTopology
2016-08-30 09:55:21,036 INFO  daemon.nimbus      [] - Received topology submission for pirk_integration_test with conf {"topology.max.task.parallelism" nil, "qSchema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml", "output" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/responderFile3778566957499280122.txt", "topology.executor.send.buffer.size" 1024, "topology.submitter.principal" "", "topology.acker.executors" 1, "topology.eventlogger.executors" 0, "queryInfo" {"dataPartitionsBitSize" 8, "numPartitionsPerDataElement" 36, "hashBitSize" 12, "queryType" "dns-hostname-query", "embedSelector" true, "uuid" "74cbee54-9a78-48c3-905d-c83a0782b051", "hashKey" "someKey", "useExpLookupTable" false, "useHDFSExpLookupTable" false, "numBitsPerDataElement" 256, "numSelectors" 6}, "splitPartitions" true, "topology.workers" 1, "topology.debug" false, "topology.max.spout.pending" 300, "maxHitsPerSelector" 100, "storm.zookeeper.superACL" nil, "useHdfs" false, "limitHitsPerSelector" true, "hdfsUri" "localhost", "saltColumns" true, "topology.transfer.buffer.size" 32, "topology.executor.receive.buffer.size" 1024, "allowAdHocQuerySchemas" false, "queryFile" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/pir_integrationTest-query7554668182117678094.txt", "topology.users" (), "topology.submitter.user" "voyager", "topology.component.resources.onheap.memory.mb" 128.0, "rowDivisions" 2, "topology.kryo.register" nil, "worker.heap.memory.mb" 750, "nSquared" "893714063091493252140805543927462484189909163470256324669366233674468493934531351808411750089403379605919371579520956313614309759596321404680678803731365842878590760838574242511806531716813184820975781862008105030373882425133453241", "enccolmultboltPar" 2, "encrowcalcboltPar" 2, "dschema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml", "topology.kryo.decorators" (), "storm.id" "pirk_integration_test-1-1472565320", "topology.name" "pirk_integration_test"}
2016-08-30 09:55:21,040 INFO  daemon.nimbus      [] - uploadedJar 
2016-08-30 09:55:21,058 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:21,059 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@69173bb7
2016-08-30 09:55:21,066 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:21,067 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:21,067 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56292
2016-08-30 09:55:21,067 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56292
2016-08-30 09:55:21,069 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be000b with negotiated timeout 20000 for client /127.0.0.1:56292
2016-08-30 09:55:21,069 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be000b, negotiated timeout = 20000
2016-08-30 09:55:21,069 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:21,071 INFO  server.PrepRequestProcessor  [] - Got user-level KeeperException when processing sessionid:0x156dbbb99be000b type:create cxid:0x2 zxid:0x22 txntype:-1 reqpath:n/a Error Path:/storm/blobstoremaxkeysequencenumber Error:KeeperErrorCode = NoNode for /storm/blobstoremaxkeysequencenumber
2016-08-30 09:55:21,080 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:21,081 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be000b
2016-08-30 09:55:21,082 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56292 which had sessionid 0x156dbbb99be000b
2016-08-30 09:55:21,082 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be000b closed
2016-08-30 09:55:21,082 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:21,083 INFO  storm.cluster      [] - setup-path/blobstore/pirk_integration_test-1-1472565320-stormconf.ser/traveler.ltsnet.net:6627-1
2016-08-30 09:55:21,123 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:21,124 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@766534b0
2016-08-30 09:55:21,125 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:21,126 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:21,126 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56293
2016-08-30 09:55:21,126 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56293
2016-08-30 09:55:21,127 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be000c with negotiated timeout 20000 for client /127.0.0.1:56293
2016-08-30 09:55:21,127 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be000c, negotiated timeout = 20000
2016-08-30 09:55:21,127 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:21,130 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:21,131 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be000c
2016-08-30 09:55:21,131 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be000c closed
2016-08-30 09:55:21,132 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56293 which had sessionid 0x156dbbb99be000c
2016-08-30 09:55:21,132 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:21,132 INFO  storm.cluster      [] - setup-path/blobstore/pirk_integration_test-1-1472565320-stormcode.ser/traveler.ltsnet.net:6627-1
2016-08-30 09:55:21,139 INFO  daemon.nimbus      [] - desired replication count of 1 not achieved but we have hit the max wait time 60 so moving on with replication count for conf key = 1 for code key = 1for jar key = 1
2016-08-30 09:55:21,187 INFO  daemon.nimbus      [] - Activating pirk_integration_test: pirk_integration_test-1-1472565320
2016-08-30 09:55:21,195 INFO  storm.KafkaStormIntegrationTest  [] - Pausing for setup.
2016-08-30 09:55:21,593 INFO  scheduler.EvenScheduler  [] - Available slots: (["589b499b-f6c4-4068-83f4-058efebbccab" 1024] ["589b499b-f6c4-4068-83f4-058efebbccab" 1025] ["589b499b-f6c4-4068-83f4-058efebbccab" 1026])
2016-08-30 09:55:21,615 INFO  daemon.nimbus      [] - Setting new assignment for topology id pirk_integration_test-1-1472565320: #org.apache.storm.daemon.common.Assignment{:master-code-dir "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//0c7a106b-3891-4efa-a029-1d8f3cced21c", :node->host {"589b499b-f6c4-4068-83f4-058efebbccab" "traveler.ltsnet.net"}, :executor->node+port {[8 8] ["589b499b-f6c4-4068-83f4-058efebbccab" 1024], [7 7] ["589b499b-f6c4-4068-83f4-058efebbccab" 1024], [6 6] ["589b499b-f6c4-4068-83f4-058efebbccab" 1024], [5 5] ["589b499b-f6c4-4068-83f4-058efebbccab" 1024], [4 4] ["589b499b-f6c4-4068-83f4-058efebbccab" 1024], [3 3] ["589b499b-f6c4-4068-83f4-058efebbccab" 1024], [2 2] ["589b499b-f6c4-4068-83f4-058efebbccab" 1024], [1 1] ["589b499b-f6c4-4068-83f4-058efebbccab" 1024]}, :executor->start-time-secs {[1 1] 1472565321, [2 2] 1472565321, [3 3] 1472565321, [4 4] 1472565321, [5 5] 1472565321, [6 6] 1472565321, [7 7] 1472565321, [8 8] 1472565321}, :worker->resources {["589b499b-f6c4-4068-83f4-058efebbccab" 1024] [0.0 0.0 0.0]}}
2016-08-30 09:55:21,946 INFO  daemon.supervisor  [] - Downloading code for storm id pirk_integration_test-1-1472565320
2016-08-30 09:55:21,949 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:21,949 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@6e1d0456
2016-08-30 09:55:21,950 INFO  blobstore.FileBlobStoreImpl  [] - Creating new blob store based in /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/0c7a106b-3891-4efa-a029-1d8f3cced21c/blobs
2016-08-30 09:55:21,950 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:21,951 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:21,952 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56294
2016-08-30 09:55:21,952 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56294
2016-08-30 09:55:21,953 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be000d with negotiated timeout 20000 for client /127.0.0.1:56294
2016-08-30 09:55:21,955 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be000d, negotiated timeout = 20000
2016-08-30 09:55:21,955 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:21,968 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:21,969 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be000d
2016-08-30 09:55:21,969 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be000d closed
2016-08-30 09:55:21,969 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:21,970 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56294 which had sessionid 0x156dbbb99be000d
2016-08-30 09:55:22,772 INFO  daemon.supervisor  [] - Finished downloading code for storm id pirk_integration_test-1-1472565320
2016-08-30 09:55:22,791 INFO  daemon.supervisor  [] - Launching worker with assignment {:storm-id "pirk_integration_test-1-1472565320", :executors [[8 8] [7 7] [6 6] [5 5] [4 4] [3 3] [2 2] [1 1]], :resources #object[org.apache.storm.generated.WorkerResources 0x725ca9c3 "WorkerResources(mem_on_heap:0.0, mem_off_heap:0.0, cpu:0.0)"]} for this supervisor 589b499b-f6c4-4068-83f4-058efebbccab on port 1024 with id 6c6d406d-5a3e-4431-ab7e-63350b12e155
2016-08-30 09:55:22,798 INFO  daemon.worker      [] - Launching worker for pirk_integration_test-1-1472565320 on 589b499b-f6c4-4068-83f4-058efebbccab:1024 with id 6c6d406d-5a3e-4431-ab7e-63350b12e155 and conf {"topology.builtin.metrics.bucket.size.secs" 60, "nimbus.childopts" "-Xmx1024m", "ui.filter.params" nil, "storm.cluster.mode" "local", "storm.messaging.netty.client_worker_threads" 1, "logviewer.max.per.worker.logs.size.mb" 2048, "supervisor.run.worker.as.user" false, "topology.max.task.parallelism" nil, "topology.priority" 29, "zmq.threads" 1, "storm.group.mapping.service" "org.apache.storm.security.auth.ShellBasedGroupsMapping", "transactional.zookeeper.root" "/transactional", "topology.sleep.spout.wait.strategy.time.ms" 1, "scheduler.display.resource" false, "topology.max.replication.wait.time.sec" 60, "qSchema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml", "drpc.invocations.port" 3773, "supervisor.localizer.cache.target.size.mb" 10240, "topology.multilang.serializer" "org.apache.storm.multilang.JsonSerializer", "storm.messaging.netty.server_worker_threads" 1, "nimbus.blobstore.class" "org.apache.storm.blobstore.LocalFsBlobStore", "resource.aware.scheduler.eviction.strategy" "org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy", "topology.max.error.report.per.interval" 5, "storm.thrift.transport" "org.apache.storm.security.auth.SimpleTransportPlugin", "zmq.hwm" 0, "output" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/responderFile3778566957499280122.txt", "storm.group.mapping.service.params" nil, "worker.profiler.enabled" false, "storm.principal.tolocal" "org.apache.storm.security.auth.DefaultPrincipalToLocal", "supervisor.worker.shutdown.sleep.secs" 1, "pacemaker.host" "localhost", "storm.zookeeper.retry.times" 5, "ui.actions.enabled" true, "zmq.linger.millis" 0, "supervisor.enable" true, "topology.stats.sample.rate" 0.05, "storm.messaging.netty.min_wait_ms" 100, "worker.log.level.reset.poll.secs" 30, "storm.zookeeper.port" 2000, "supervisor.heartbeat.frequency.secs" 5, "topology.enable.message.timeouts" false, "supervisor.cpu.capacity" 400.0, "drpc.worker.threads" 64, "supervisor.blobstore.download.thread.count" 5, "drpc.queue.size" 128, "topology.backpressure.enable" true, "supervisor.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "storm.blobstore.inputstream.buffer.size.bytes" 65536, "topology.shellbolt.max.pending" 100, "drpc.https.keystore.password" "", "nimbus.code.sync.freq.secs" 120, "logviewer.port" 8000, "topology.scheduler.strategy" "org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy", "topology.executor.send.buffer.size" 1024, "resource.aware.scheduler.priority.strategy" "org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy", "pacemaker.auth.method" "NONE", "storm.daemon.metrics.reporter.plugins" ["org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter"], "topology.worker.logwriter.childopts" "-Xmx64m", "topology.spout.wait.strategy" "org.apache.storm.spout.SleepSpoutWaitStrategy", "ui.host" "0.0.0.0", "storm.nimbus.retry.interval.millis" 2000, "nimbus.inbox.jar.expiration.secs" 3600, "dev.zookeeper.path" "/tmp/dev-storm-zookeeper", "topology.acker.executors" 1, "topology.fall.back.on.java.serialization" true, "topology.eventlogger.executors" 0, "supervisor.localizer.cleanup.interval.ms" 600000, "storm.zookeeper.servers" ["localhost"], "nimbus.thrift.threads" 64, "logviewer.cleanup.age.mins" 10080, "topology.worker.childopts" nil, "topology.classpath" nil, "supervisor.monitor.frequency.secs" 3, "nimbus.credential.renewers.freq.secs" 600, "topology.skip.missing.kryo.registrations" true, "drpc.authorizer.acl.filename" "drpc-auth-acl.yaml", "pacemaker.kerberos.users" [], "storm.group.mapping.service.cache.duration.secs" 120, "topology.testing.always.try.serialize" false, "nimbus.monitor.freq.secs" 10, "queryInfo" {"useHDFSExpLookupTable" false, "hashKey" "someKey", "numSelectors" 6, "dataPartitionsBitSize" 8, "hashBitSize" 12, "numPartitionsPerDataElement" 36, "numBitsPerDataElement" 256, "uuid" "74cbee54-9a78-48c3-905d-c83a0782b051", "useExpLookupTable" false, "embedSelector" true, "queryType" "dns-hostname-query"}, "storm.health.check.timeout.ms" 5000, "supervisor.supervisors" [], "topology.tasks" nil, "topology.bolts.outgoing.overflow.buffer.enable" false, "splitPartitions" true, "storm.messaging.netty.socket.backlog" 500, "topology.workers" 1, "pacemaker.base.threads" 10, "storm.local.dir" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//809e4cbc-f8c6-4b20-9f6f-b3a7f7fcb81a", "topology.disable.loadaware" false, "worker.childopts" "-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump", "storm.auth.simple-white-list.users" [], "topology.disruptor.batch.timeout.millis" 1, "topology.message.timeout.secs" 30, "topology.state.synchronization.timeout.secs" 60, "topology.tuple.serializer" "org.apache.storm.serialization.types.ListDelegateSerializer", "supervisor.supervisors.commands" [], "nimbus.blobstore.expiration.secs" 600, "logviewer.childopts" "-Xmx128m", "topology.environment" nil, "topology.debug" false, "topology.disruptor.batch.size" 100, "storm.messaging.netty.max_retries" 300, "ui.childopts" "-Xmx768m", "storm.network.topography.plugin" "org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping", "storm.zookeeper.session.timeout" 20000, "drpc.childopts" "-Xmx768m", "drpc.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.connection.timeout" 15000, "storm.zookeeper.auth.user" nil, "storm.meta.serialization.delegate" "org.apache.storm.serialization.GzipThriftSerializationDelegate", "topology.max.spout.pending" 300, "storm.codedistributor.class" "org.apache.storm.codedistributor.LocalFileSystemCodeDistributor", "nimbus.supervisor.timeout.secs" 60, "maxHitsPerSelector" 100, "nimbus.task.timeout.secs" 30, "drpc.port" 3772, "pacemaker.max.threads" 50, "storm.zookeeper.retry.intervalceiling.millis" 30000, "nimbus.thrift.port" 6627, "storm.auth.simple-acl.admins" [], "topology.component.cpu.pcore.percent" 10.0, "supervisor.memory.capacity.mb" 3072.0, "storm.nimbus.retry.times" 5, "supervisor.worker.start.timeout.secs" 120, "useHdfs" false, "storm.zookeeper.retry.interval" 1000, "limitHitsPerSelector" true, "logs.users" nil, "worker.profiler.command" "flight.bash", "transactional.zookeeper.port" nil, "drpc.max_buffer_size" 1048576, "pacemaker.thread.timeout" 10, "task.credentials.poll.secs" 30, "blobstore.superuser" "voyager", "drpc.https.keystore.type" "JKS", "topology.worker.receiver.thread.count" 1, "topology.state.checkpoint.interval.ms" 1000, "hdfsUri" "localhost", "supervisor.slots.ports" (1024 1025 1026), "saltColumns" true, "topology.transfer.buffer.size" 32, "storm.health.check.dir" "healthchecks", "topology.worker.shared.thread.pool.size" 4, "drpc.authorizer.acl.strict" false, "nimbus.file.copy.expiration.secs" 600, "worker.profiler.childopts" "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder", "topology.executor.receive.buffer.size" 1024, "backpressure.disruptor.low.watermark" 0.4, "allowAdHocQuerySchemas" false, "queryFile" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/pir_integrationTest-query7554668182117678094.txt", "nimbus.task.launch.secs" 120, "storm.local.mode.zmq" false, "storm.messaging.netty.buffer_size" 5242880, "storm.cluster.state.store" "org.apache.storm.cluster_state.zookeeper_state_factory", "worker.heartbeat.frequency.secs" 1, "storm.log4j2.conf.dir" "log4j2", "ui.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.root" "/storm", "topology.tick.tuple.freq.secs" nil, "drpc.https.port" -1, "storm.workers.artifacts.dir" "workers-artifacts", "supervisor.blobstore.download.max_retries" 3, "task.refresh.poll.secs" 10, "storm.exhibitor.port" 8080, "task.heartbeat.frequency.secs" 3, "pacemaker.port" 6699, "storm.messaging.netty.max_wait_ms" 1000, "nimbus.impersonation.authorizer" "org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer", "topology.component.resources.offheap.memory.mb" 0.0, "drpc.http.port" 3774, "topology.error.throttle.interval.secs" 10, "storm.messaging.transport" "org.apache.storm.messaging.netty.Context", "storm.messaging.netty.authentication" false, "topology.component.resources.onheap.memory.mb" 128.0, "rowDivisions" 2, "topology.kryo.factory" "org.apache.storm.serialization.DefaultKryoFactory", "worker.gc.childopts" "", "nimbus.topology.validator" "org.apache.storm.nimbus.DefaultTopologyValidator", "nimbus.seeds" ["localhost"], "nimbus.queue.size" 100000, "nimbus.cleanup.inbox.freq.secs" 600, "storm.blobstore.replication.factor" 3, "worker.heap.memory.mb" 750, "logviewer.max.sum.worker.logs.size.mb" 4096, "pacemaker.childopts" "-Xmx1024m", "nSquared" "893714063091493252140805543927462484189909163470256324669366233674468493934531351808411750089403379605919371579520956313614309759596321404680678803731365842878590760838574242511806531716813184820975781862008105030373882425133453241", "ui.users" nil, "transactional.zookeeper.servers" nil, "supervisor.worker.timeout.secs" 30, "storm.zookeeper.auth.password" nil, "client.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "supervisor.childopts" "-Xmx256m", "topology.worker.max.heap.size.mb" 768.0, "backpressure.disruptor.high.watermark" 0.9, "ui.filter" nil, "ui.header.buffer.bytes" 4096, "topology.min.replication.count" 1, "topology.disruptor.wait.timeout.millis" 1000, "enccolmultboltPar" 2, "storm.nimbus.retry.intervalceiling.millis" 60000, "topology.trident.batch.emit.interval.millis" 50, "storm.auth.simple-acl.users" [], "drpc.invocations.threads" 64, "java.library.path" "/usr/local/lib:/opt/local/lib:/usr/lib", "encrowcalcboltPar" 2, "ui.port" 8080, "dschema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml", "storm.exhibitor.poll.uripath" "/exhibitor/v1/cluster/list", "storm.messaging.netty.transfer.batch.size" 262144, "logviewer.appender.name" "A1", "nimbus.thrift.max_buffer_size" 1048576, "storm.auth.simple-acl.users.commands" [], "drpc.request.timeout.secs" 600}
2016-08-30 09:55:22,802 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:22,803 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@5d27e1d7
2016-08-30 09:55:22,804 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:22,805 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:22,805 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56295
2016-08-30 09:55:22,805 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56295
2016-08-30 09:55:22,806 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be000e with negotiated timeout 20000 for client /127.0.0.1:56295
2016-08-30 09:55:22,806 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be000e, negotiated timeout = 20000
2016-08-30 09:55:22,806 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:22,807 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:22,808 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:22,809 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be000e
2016-08-30 09:55:22,811 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be000e closed
2016-08-30 09:55:22,811 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:22,811 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56295 which had sessionid 0x156dbbb99be000e
2016-08-30 09:55:22,812 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:22,813 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@f29c4d1
2016-08-30 09:55:22,814 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:22,815 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:22,815 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56296
2016-08-30 09:55:22,815 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56296
2016-08-30 09:55:22,816 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be000f with negotiated timeout 20000 for client /127.0.0.1:56296
2016-08-30 09:55:22,816 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbb99be000f, negotiated timeout = 20000
2016-08-30 09:55:22,816 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:22,821 INFO  auth.AuthUtils     [] - Got AutoCreds []
2016-08-30 09:55:22,826 INFO  daemon.worker      [] - Reading Assignments.
2016-08-30 09:55:22,900 INFO  daemon.worker      [] - Registering IConnectionCallbacks for 589b499b-f6c4-4068-83f4-058efebbccab:1024
2016-08-30 09:55:22,953 INFO  daemon.executor    [] - Loading executor partitiondataBolt:[8 8]
2016-08-30 09:55:22,969 INFO  daemon.executor    [] - Loaded executor tasks partitiondataBolt:[8 8]
2016-08-30 09:55:23,179 INFO  daemon.executor    [] - Finished loading executor partitiondataBolt:[8 8]
2016-08-30 09:55:23,189 INFO  daemon.executor    [] - Loading executor enccolmultbolt:[2 2]
2016-08-30 09:55:23,190 INFO  daemon.executor    [] - Loaded executor tasks enccolmultbolt:[2 2]
2016-08-30 09:55:23,193 INFO  daemon.executor    [] - Finished loading executor enccolmultbolt:[2 2]
2016-08-30 09:55:23,199 INFO  daemon.executor    [] - Loading executor outputbolt:[7 7]
2016-08-30 09:55:23,200 INFO  daemon.executor    [] - Loaded executor tasks outputbolt:[7 7]
2016-08-30 09:55:23,202 INFO  daemon.executor    [] - Finished loading executor outputbolt:[7 7]
2016-08-30 09:55:23,208 INFO  daemon.executor    [] - Loading executor enccolmultbolt:[3 3]
2016-08-30 09:55:23,210 INFO  daemon.executor    [] - Loaded executor tasks enccolmultbolt:[3 3]
2016-08-30 09:55:23,212 INFO  daemon.executor    [] - Finished loading executor enccolmultbolt:[3 3]
2016-08-30 09:55:23,219 INFO  daemon.executor    [] - Loading executor __acker:[1 1]
2016-08-30 09:55:23,221 INFO  daemon.executor    [] - Loaded executor tasks __acker:[1 1]
2016-08-30 09:55:23,223 INFO  daemon.executor    [] - Timeouts disabled for executor __acker:[1 1]
2016-08-30 09:55:23,224 INFO  daemon.executor    [] - Finished loading executor __acker:[1 1]
2016-08-30 09:55:23,231 INFO  daemon.executor    [] - Loading executor kafkaspout:[6 6]
2016-08-30 09:55:23,236 INFO  daemon.executor    [] - Loaded executor tasks kafkaspout:[6 6]
2016-08-30 09:55:23,247 INFO  daemon.executor    [] - Timeouts disabled for executor kafkaspout:[6 6]
2016-08-30 09:55:23,247 INFO  daemon.executor    [] - Finished loading executor kafkaspout:[6 6]
2016-08-30 09:55:23,255 INFO  daemon.executor    [] - Loading executor __system:[-1 -1]
2016-08-30 09:55:23,256 INFO  daemon.executor    [] - Loaded executor tasks __system:[-1 -1]
2016-08-30 09:55:23,260 INFO  daemon.executor    [] - Finished loading executor __system:[-1 -1]
2016-08-30 09:55:23,270 INFO  daemon.executor    [] - Loading executor encrowcalcbolt:[5 5]
2016-08-30 09:55:23,272 INFO  daemon.executor    [] - Loaded executor tasks encrowcalcbolt:[5 5]
2016-08-30 09:55:23,275 INFO  daemon.executor    [] - Finished loading executor encrowcalcbolt:[5 5]
2016-08-30 09:55:23,282 INFO  daemon.executor    [] - Loading executor encrowcalcbolt:[4 4]
2016-08-30 09:55:23,283 INFO  daemon.executor    [] - Loaded executor tasks encrowcalcbolt:[4 4]
2016-08-30 09:55:23,286 INFO  daemon.executor    [] - Finished loading executor encrowcalcbolt:[4 4]
2016-08-30 09:55:23,306 INFO  daemon.worker      [] - Started with log levels: {"org.apache.hadoop.hbase" #object[org.apache.logging.log4j.Level 0x7af08580 "INFO"], "" #object[org.apache.logging.log4j.Level 0x7af08580 "INFO"], "org.apache.hadoop.hbase.zookeeper" #object[org.apache.logging.log4j.Level 0x6d660c48 "WARN"], "org.apache.zookeeper" #object[org.apache.logging.log4j.Level 0xf759057 "ERROR"]}
2016-08-30 09:55:23,316 INFO  daemon.worker      [] - Worker has topology config {"topology.builtin.metrics.bucket.size.secs" 60, "nimbus.childopts" "-Xmx1024m", "ui.filter.params" nil, "storm.cluster.mode" "local", "storm.messaging.netty.client_worker_threads" 1, "logviewer.max.per.worker.logs.size.mb" 2048, "supervisor.run.worker.as.user" false, "topology.max.task.parallelism" nil, "topology.priority" 29, "zmq.threads" 1, "storm.group.mapping.service" "org.apache.storm.security.auth.ShellBasedGroupsMapping", "transactional.zookeeper.root" "/transactional", "topology.sleep.spout.wait.strategy.time.ms" 1, "scheduler.display.resource" false, "topology.max.replication.wait.time.sec" 60, "qSchema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml", "drpc.invocations.port" 3773, "supervisor.localizer.cache.target.size.mb" 10240, "topology.multilang.serializer" "org.apache.storm.multilang.JsonSerializer", "storm.messaging.netty.server_worker_threads" 1, "nimbus.blobstore.class" "org.apache.storm.blobstore.LocalFsBlobStore", "resource.aware.scheduler.eviction.strategy" "org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy", "topology.max.error.report.per.interval" 5, "storm.thrift.transport" "org.apache.storm.security.auth.SimpleTransportPlugin", "zmq.hwm" 0, "output" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/responderFile3778566957499280122.txt", "storm.group.mapping.service.params" nil, "worker.profiler.enabled" false, "storm.principal.tolocal" "org.apache.storm.security.auth.DefaultPrincipalToLocal", "supervisor.worker.shutdown.sleep.secs" 1, "pacemaker.host" "localhost", "storm.zookeeper.retry.times" 5, "ui.actions.enabled" true, "zmq.linger.millis" 0, "supervisor.enable" true, "topology.stats.sample.rate" 0.05, "storm.messaging.netty.min_wait_ms" 100, "worker.log.level.reset.poll.secs" 30, "storm.zookeeper.port" 2000, "supervisor.heartbeat.frequency.secs" 5, "topology.enable.message.timeouts" false, "supervisor.cpu.capacity" 400.0, "drpc.worker.threads" 64, "supervisor.blobstore.download.thread.count" 5, "drpc.queue.size" 128, "topology.backpressure.enable" true, "supervisor.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "storm.blobstore.inputstream.buffer.size.bytes" 65536, "topology.shellbolt.max.pending" 100, "drpc.https.keystore.password" "", "nimbus.code.sync.freq.secs" 120, "logviewer.port" 8000, "topology.scheduler.strategy" "org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy", "topology.executor.send.buffer.size" 1024, "resource.aware.scheduler.priority.strategy" "org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy", "pacemaker.auth.method" "NONE", "storm.daemon.metrics.reporter.plugins" ["org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter"], "topology.worker.logwriter.childopts" "-Xmx64m", "topology.spout.wait.strategy" "org.apache.storm.spout.SleepSpoutWaitStrategy", "ui.host" "0.0.0.0", "topology.submitter.principal" "", "storm.nimbus.retry.interval.millis" 2000, "nimbus.inbox.jar.expiration.secs" 3600, "dev.zookeeper.path" "/tmp/dev-storm-zookeeper", "topology.acker.executors" 1, "topology.fall.back.on.java.serialization" true, "topology.eventlogger.executors" 0, "supervisor.localizer.cleanup.interval.ms" 600000, "storm.zookeeper.servers" ["localhost"], "nimbus.thrift.threads" 64, "logviewer.cleanup.age.mins" 10080, "topology.worker.childopts" nil, "topology.classpath" nil, "supervisor.monitor.frequency.secs" 3, "nimbus.credential.renewers.freq.secs" 600, "topology.skip.missing.kryo.registrations" true, "drpc.authorizer.acl.filename" "drpc-auth-acl.yaml", "pacemaker.kerberos.users" [], "storm.group.mapping.service.cache.duration.secs" 120, "topology.testing.always.try.serialize" false, "nimbus.monitor.freq.secs" 10, "queryInfo" {"dataPartitionsBitSize" 8, "numPartitionsPerDataElement" 36, "hashBitSize" 12, "queryType" "dns-hostname-query", "embedSelector" true, "uuid" "74cbee54-9a78-48c3-905d-c83a0782b051", "hashKey" "someKey", "useExpLookupTable" false, "useHDFSExpLookupTable" false, "numBitsPerDataElement" 256, "numSelectors" 6}, "storm.health.check.timeout.ms" 5000, "supervisor.supervisors" [], "topology.tasks" nil, "topology.bolts.outgoing.overflow.buffer.enable" false, "splitPartitions" true, "storm.messaging.netty.socket.backlog" 500, "topology.workers" 1, "pacemaker.base.threads" 10, "storm.local.dir" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//0c7a106b-3891-4efa-a029-1d8f3cced21c", "topology.disable.loadaware" false, "worker.childopts" "-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump", "storm.auth.simple-white-list.users" [], "topology.disruptor.batch.timeout.millis" 1, "topology.message.timeout.secs" 30, "topology.state.synchronization.timeout.secs" 60, "topology.tuple.serializer" "org.apache.storm.serialization.types.ListDelegateSerializer", "supervisor.supervisors.commands" [], "nimbus.blobstore.expiration.secs" 600, "logviewer.childopts" "-Xmx128m", "topology.environment" nil, "topology.debug" false, "topology.disruptor.batch.size" 100, "storm.messaging.netty.max_retries" 300, "ui.childopts" "-Xmx768m", "storm.network.topography.plugin" "org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping", "storm.zookeeper.session.timeout" 20000, "drpc.childopts" "-Xmx768m", "drpc.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.connection.timeout" 15000, "storm.zookeeper.auth.user" nil, "storm.meta.serialization.delegate" "org.apache.storm.serialization.GzipThriftSerializationDelegate", "topology.max.spout.pending" 300, "storm.codedistributor.class" "org.apache.storm.codedistributor.LocalFileSystemCodeDistributor", "nimbus.supervisor.timeout.secs" 60, "maxHitsPerSelector" 100, "nimbus.task.timeout.secs" 30, "storm.zookeeper.superACL" nil, "drpc.port" 3772, "pacemaker.max.threads" 50, "storm.zookeeper.retry.intervalceiling.millis" 30000, "nimbus.thrift.port" 6627, "storm.auth.simple-acl.admins" [], "topology.component.cpu.pcore.percent" 10.0, "supervisor.memory.capacity.mb" 3072.0, "storm.nimbus.retry.times" 5, "supervisor.worker.start.timeout.secs" 120, "useHdfs" false, "storm.zookeeper.retry.interval" 1000, "limitHitsPerSelector" true, "logs.users" nil, "worker.profiler.command" "flight.bash", "transactional.zookeeper.port" nil, "drpc.max_buffer_size" 1048576, "pacemaker.thread.timeout" 10, "task.credentials.poll.secs" 30, "blobstore.superuser" "voyager", "drpc.https.keystore.type" "JKS", "topology.worker.receiver.thread.count" 1, "topology.state.checkpoint.interval.ms" 1000, "hdfsUri" "localhost", "supervisor.slots.ports" [6700 6701 6702 6703], "saltColumns" true, "topology.transfer.buffer.size" 32, "storm.health.check.dir" "healthchecks", "topology.worker.shared.thread.pool.size" 4, "drpc.authorizer.acl.strict" false, "nimbus.file.copy.expiration.secs" 600, "worker.profiler.childopts" "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder", "topology.executor.receive.buffer.size" 1024, "backpressure.disruptor.low.watermark" 0.4, "allowAdHocQuerySchemas" false, "queryFile" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/pir_integrationTest-query7554668182117678094.txt", "topology.users" [], "nimbus.task.launch.secs" 120, "storm.local.mode.zmq" false, "storm.messaging.netty.buffer_size" 5242880, "storm.cluster.state.store" "org.apache.storm.cluster_state.zookeeper_state_factory", "worker.heartbeat.frequency.secs" 1, "storm.log4j2.conf.dir" "log4j2", "ui.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.root" "/storm", "topology.submitter.user" "voyager", "topology.tick.tuple.freq.secs" nil, "drpc.https.port" -1, "storm.workers.artifacts.dir" "workers-artifacts", "supervisor.blobstore.download.max_retries" 3, "task.refresh.poll.secs" 10, "storm.exhibitor.port" 8080, "task.heartbeat.frequency.secs" 3, "pacemaker.port" 6699, "storm.messaging.netty.max_wait_ms" 1000, "nimbus.impersonation.authorizer" "org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer", "topology.component.resources.offheap.memory.mb" 0.0, "drpc.http.port" 3774, "topology.error.throttle.interval.secs" 10, "storm.messaging.transport" "org.apache.storm.messaging.netty.Context", "storm.messaging.netty.authentication" false, "topology.component.resources.onheap.memory.mb" 128.0, "rowDivisions" 2, "topology.kryo.factory" "org.apache.storm.serialization.DefaultKryoFactory", "topology.kryo.register" nil, "worker.gc.childopts" "", "nimbus.topology.validator" "org.apache.storm.nimbus.DefaultTopologyValidator", "nimbus.seeds" ["localhost"], "nimbus.queue.size" 100000, "nimbus.cleanup.inbox.freq.secs" 600, "storm.blobstore.replication.factor" 3, "worker.heap.memory.mb" 750, "logviewer.max.sum.worker.logs.size.mb" 4096, "pacemaker.childopts" "-Xmx1024m", "nSquared" "893714063091493252140805543927462484189909163470256324669366233674468493934531351808411750089403379605919371579520956313614309759596321404680678803731365842878590760838574242511806531716813184820975781862008105030373882425133453241", "ui.users" nil, "transactional.zookeeper.servers" nil, "supervisor.worker.timeout.secs" 30, "storm.zookeeper.auth.password" nil, "client.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "supervisor.childopts" "-Xmx256m", "topology.worker.max.heap.size.mb" 768.0, "backpressure.disruptor.high.watermark" 0.9, "ui.filter" nil, "ui.header.buffer.bytes" 4096, "topology.min.replication.count" 1, "topology.disruptor.wait.timeout.millis" 1000, "enccolmultboltPar" 2, "storm.nimbus.retry.intervalceiling.millis" 60000, "topology.trident.batch.emit.interval.millis" 50, "storm.auth.simple-acl.users" [], "drpc.invocations.threads" 64, "java.library.path" "/usr/local/lib:/opt/local/lib:/usr/lib", "encrowcalcboltPar" 2, "ui.port" 8080, "dschema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml", "topology.kryo.decorators" [], "storm.id" "pirk_integration_test-1-1472565320", "topology.name" "pirk_integration_test", "storm.exhibitor.poll.uripath" "/exhibitor/v1/cluster/list", "storm.messaging.netty.transfer.batch.size" 262144, "logviewer.appender.name" "A1", "nimbus.thrift.max_buffer_size" 1048576, "storm.auth.simple-acl.users.commands" [], "drpc.request.timeout.secs" 600}
2016-08-30 09:55:23,317 INFO  daemon.worker      [] - Worker 6c6d406d-5a3e-4431-ab7e-63350b12e155 for storm pirk_integration_test-1-1472565320 on 589b499b-f6c4-4068-83f4-058efebbccab:1024 has finished loading
2016-08-30 09:55:23,317 INFO  storm.config       [] - SET worker-user 6c6d406d-5a3e-4431-ab7e-63350b12e155 
2016-08-30 09:55:23,875 INFO  daemon.worker      [] - All connections are ready for worker 589b499b-f6c4-4068-83f4-058efebbccab:1024 with id 6c6d406d-5a3e-4431-ab7e-63350b12e155
2016-08-30 09:55:23,890 INFO  daemon.executor    [] - Preparing bolt encrowcalcbolt:(5)
2016-08-30 09:55:23,892 INFO  daemon.executor    [] - Preparing bolt partitiondataBolt:(8)
2016-08-30 09:55:23,898 INFO  daemon.executor    [] - Preparing bolt encrowcalcbolt:(4)
2016-08-30 09:55:23,900 INFO  storm.PartitionDataBolt  [] - partition databolt hdfs = false
2016-08-30 09:55:23,901 INFO  storm.StormUtils   [] - reading local query file from /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/pir_integrationTest-query7554668182117678094.txt
2016-08-30 09:55:23,901 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml hdfs = false
2016-08-30 09:55:23,901 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml
2016-08-30 09:55:23,907 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:23,909 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-30 09:55:23,909 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:23,909 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:23,909 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:23,909 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:23,909 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:23,910 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:23,911 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:23,911 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml
2016-08-30 09:55:23,911 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml
2016-08-30 09:55:23,912 INFO  daemon.executor    [] - Preparing bolt enccolmultbolt:(2)
2016-08-30 09:55:23,913 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:23,913 INFO  storm.EncColMultBolt  [] - Initialized EncColMultBolt. 
2016-08-30 09:55:23,913 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-30 09:55:23,913 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:23,913 INFO  daemon.executor    [] - Prepared bolt enccolmultbolt:(2)
2016-08-30 09:55:23,913 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:23,914 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:23,914 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-30 09:55:23,914 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:23,914 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:23,914 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:23,914 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:23,914 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:23,914 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-30 09:55:23,914 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:23,915 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-30 09:55:23,915 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:23,915 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-30 09:55:23,915 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-30 09:55:23,928 INFO  daemon.executor    [] - Preparing bolt outputbolt:(7)
2016-08-30 09:55:23,929 INFO  storm.OutputBolt   [] - Intitialized OutputBolt.
2016-08-30 09:55:23,929 INFO  daemon.executor    [] - Prepared bolt outputbolt:(7)
2016-08-30 09:55:23,945 INFO  daemon.executor    [] - Preparing bolt enccolmultbolt:(3)
2016-08-30 09:55:23,946 INFO  storm.EncColMultBolt  [] - Initialized EncColMultBolt. 
2016-08-30 09:55:23,946 INFO  daemon.executor    [] - Prepared bolt enccolmultbolt:(3)
2016-08-30 09:55:23,947 INFO  daemon.executor    [] - Preparing bolt __acker:(1)
2016-08-30 09:55:23,962 INFO  daemon.executor    [] - Prepared bolt __acker:(1)
2016-08-30 09:55:23,964 INFO  daemon.executor    [] - Opening spout kafkaspout:(6)
2016-08-30 09:55:23,965 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml
2016-08-30 09:55:23,966 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml
2016-08-30 09:55:23,967 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:23,968 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-30 09:55:23,968 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:23,968 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-30 09:55:23,968 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:23,969 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-30 09:55:23,969 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:23,969 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-30 09:55:23,969 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:23,969 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-30 09:55:23,970 INFO  daemon.executor    [] - Preparing bolt __system:(-1)
2016-08-30 09:55:23,971 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-30 09:55:23,988 INFO  daemon.executor    [] - Prepared bolt __system:(-1)
2016-08-30 09:55:24,007 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml
2016-08-30 09:55:24,007 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml
2016-08-30 09:55:24,009 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:24,009 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-30 09:55:24,009 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:24,009 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:24,009 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,009 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:24,009 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,009 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:24,010 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,010 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:24,010 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-30 09:55:24,034 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:24,039 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56297
2016-08-30 09:55:24,040 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56297
2016-08-30 09:55:24,040 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbb99be0010 with negotiated timeout 20000 for client /127.0.0.1:56297
2016-08-30 09:55:24,049 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:24,051 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:24,056 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:24,080 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml
2016-08-30 09:55:24,080 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml
2016-08-30 09:55:24,082 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:24,082 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-30 09:55:24,082 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:24,083 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:24,083 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,083 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:24,083 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,083 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:24,083 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,083 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:24,083 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-30 09:55:24,084 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-30 09:55:24,113 INFO  kafka.DynamicBrokersReader  [] - Read partition info from zookeeper: GlobalPartitionInformation{topic=pirk_test_topic, partitionMap={0=localhost:11111}}
2016-08-30 09:55:24,113 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml
2016-08-30 09:55:24,114 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml
2016-08-30 09:55:24,115 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:24,115 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-30 09:55:24,115 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:24,115 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:24,115 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,116 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:24,116 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,116 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:24,116 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,116 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:24,116 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:24,116 INFO  storm.PartitionDataBolt  [] - Initialized ExtractAndPartitionDataBolt.
2016-08-30 09:55:24,117 INFO  daemon.executor    [] - Prepared bolt partitiondataBolt:(8)
2016-08-30 09:55:24,120 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:24,121 INFO  daemon.executor    [] - Opened spout kafkaspout:(6)
2016-08-30 09:55:24,124 INFO  daemon.executor    [] - Activating spout kafkaspout:(6)
2016-08-30 09:55:24,124 INFO  kafka.ZkCoordinator  [] - Task [1/1] Refreshing partition manager connections
2016-08-30 09:55:24,127 INFO  kafka.DynamicBrokersReader  [] - Read partition info from zookeeper: GlobalPartitionInformation{topic=pirk_test_topic, partitionMap={0=localhost:11111}}
2016-08-30 09:55:24,129 INFO  kafka.KafkaUtils   [] - Task [1/1] assigned [Partition{host=localhost:11111, topic=pirk_test_topic, partition=0}]
2016-08-30 09:55:24,130 INFO  kafka.ZkCoordinator  [] - Task [1/1] Deleted partition managers: []
2016-08-30 09:55:24,130 INFO  kafka.ZkCoordinator  [] - Task [1/1] New partition managers: [Partition{host=localhost:11111, topic=pirk_test_topic, partition=0}]
2016-08-30 09:55:24,163 INFO  storm.EncRowCalcBolt  [] - partition databolt hdfs = false
2016-08-30 09:55:24,163 INFO  storm.EncRowCalcBolt  [] - Initialized EncRowCalcBolt.
2016-08-30 09:55:24,164 INFO  daemon.executor    [] - Prepared bolt encrowcalcbolt:(4)
2016-08-30 09:55:24,164 INFO  storm.EncRowCalcBolt  [] - partition databolt hdfs = false
2016-08-30 09:55:24,164 INFO  storm.EncRowCalcBolt  [] - Initialized EncRowCalcBolt.
2016-08-30 09:55:24,164 INFO  daemon.executor    [] - Prepared bolt encrowcalcbolt:(5)
2016-08-30 09:55:24,166 INFO  kafka.PartitionManager  [] - Read partition information from: /pirk_test_root/pirk_integr_test_spout/partition_0  --> null
2016-08-30 09:55:24,205 INFO  kafka.PartitionManager  [] - No partition information found, using configuration to determine offset
2016-08-30 09:55:24,205 INFO  kafka.PartitionManager  [] - Last commit offset from zookeeper: 0
2016-08-30 09:55:24,205 INFO  kafka.PartitionManager  [] - Commit offset 0 is more than 9223372036854775807 behind latest offset 0, resetting to startOffsetTime=-2
2016-08-30 09:55:24,205 INFO  kafka.PartitionManager  [] - Starting Kafka localhost:0 from offset 0
2016-08-30 09:55:24,207 INFO  kafka.ZkCoordinator  [] - Task [1/1] Finished refreshing
2016-08-30 09:55:24,242 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml hdfs = false
2016-08-30 09:55:24,242 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml
2016-08-30 09:55:24,243 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-30 09:55:24,243 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-30 09:55:24,243 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:24,244 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,244 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,244 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,244 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,244 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,245 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,245 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml
2016-08-30 09:55:24,245 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml
2016-08-30 09:55:24,246 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:24,246 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-30 09:55:24,246 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:24,246 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:24,246 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-30 09:55:24,247 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,248 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-30 09:55:24,248 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-30 09:55:24,267 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml
2016-08-30 09:55:24,267 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml
2016-08-30 09:55:24,268 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:24,268 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-30 09:55:24,268 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:24,269 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-30 09:55:24,269 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,269 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-30 09:55:24,269 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,269 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-30 09:55:24,269 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,269 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-30 09:55:24,269 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-30 09:55:24,287 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml
2016-08-30 09:55:24,287 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml
2016-08-30 09:55:24,288 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:24,288 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-30 09:55:24,288 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:24,288 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-30 09:55:24,288 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,289 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:24,289 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,289 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:24,289 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,289 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-30 09:55:24,289 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-30 09:55:24,307 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml
2016-08-30 09:55:24,307 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml
2016-08-30 09:55:24,308 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:24,308 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-30 09:55:24,308 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:24,308 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:24,308 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,308 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:24,309 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,309 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:24,309 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,309 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:24,309 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-30 09:55:24,309 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-30 09:55:24,329 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml
2016-08-30 09:55:24,329 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml
2016-08-30 09:55:24,330 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-30 09:55:24,330 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-30 09:55:24,331 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-30 09:55:24,331 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-30 09:55:24,331 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-30 09:55:24,331 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-30 09:55:24,331 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,331 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-30 09:55:24,331 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-30 09:55:24,331 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-30 09:55:26,354 INFO  server.PrepRequestProcessor  [] - Got user-level KeeperException when processing sessionid:0x156dbbb99be0010 type:create cxid:0x3 zxid:0x3b txntype:-1 reqpath:n/a Error Path:/pirk_test_root/pirk_integr_test_spout Error:KeeperErrorCode = NoNode for /pirk_test_root/pirk_integr_test_spout
2016-08-30 09:55:31,313 INFO  storm.OutputBolt   [] - TimeToFlush reached - outputting response to /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/responderFile3778566957499280122.txt with columns.size = 180
2016-08-30 09:55:32,223 INFO  storm.KafkaStormIntegrationTest  [] - Finished...
2016-08-30 09:55:32,226 INFO  daemon.nimbus      [] - Shutting down master
2016-08-30 09:55:32,229 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,231 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0003
2016-08-30 09:55:32,231 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0003 closed
2016-08-30 09:55:32,231 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,232 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56284 which had sessionid 0x156dbbb99be0003
2016-08-30 09:55:32,232 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,233 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0004
2016-08-30 09:55:32,233 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,233 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0004 closed
2016-08-30 09:55:32,234 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56285 which had sessionid 0x156dbbb99be0004
2016-08-30 09:55:32,234 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,235 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0001
2016-08-30 09:55:32,235 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0001 closed
2016-08-30 09:55:32,235 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,235 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56282 which had sessionid 0x156dbbb99be0001
2016-08-30 09:55:32,236 INFO  storm.zookeeper    [] - closing zookeeper connection of leader elector.
2016-08-30 09:55:32,237 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,237 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0000
2016-08-30 09:55:32,238 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0000 closed
2016-08-30 09:55:32,238 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56281 which had sessionid 0x156dbbb99be0000
2016-08-30 09:55:32,238 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,239 INFO  daemon.nimbus      [] - Shut down master
2016-08-30 09:55:32,240 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,241 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0006
2016-08-30 09:55:32,242 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0006 closed
2016-08-30 09:55:32,242 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56287 which had sessionid 0x156dbbb99be0006
2016-08-30 09:55:32,242 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,243 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,243 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0008
2016-08-30 09:55:32,244 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be0008 closed
2016-08-30 09:55:32,244 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,244 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56289 which had sessionid 0x156dbbb99be0008
2016-08-30 09:55:32,245 INFO  daemon.supervisor  [] - Shutting down 589b499b-f6c4-4068-83f4-058efebbccab:6c6d406d-5a3e-4431-ab7e-63350b12e155
2016-08-30 09:55:32,245 INFO  storm.config       [] - GET worker-user 6c6d406d-5a3e-4431-ab7e-63350b12e155
2016-08-30 09:55:32,248 INFO  storm.process-simulator  [] - Killing process 833f343c-4206-47e1-b59a-35ebbd2832ad
2016-08-30 09:55:32,249 INFO  daemon.worker      [] - Shutting down worker pirk_integration_test-1-1472565320 589b499b-f6c4-4068-83f4-058efebbccab 1024
2016-08-30 09:55:32,249 INFO  daemon.worker      [] - Terminating messaging context
2016-08-30 09:55:32,249 INFO  daemon.worker      [] - Shutting down executors
2016-08-30 09:55:32,250 INFO  daemon.executor    [] - Shutting down executor partitiondataBolt:[8 8]
2016-08-30 09:55:32,251 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,251 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,252 INFO  daemon.executor    [] - Shut down executor partitiondataBolt:[8 8]
2016-08-30 09:55:32,252 INFO  daemon.executor    [] - Shutting down executor enccolmultbolt:[2 2]
2016-08-30 09:55:32,253 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,253 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,253 INFO  daemon.executor    [] - Shut down executor enccolmultbolt:[2 2]
2016-08-30 09:55:32,254 INFO  daemon.executor    [] - Shutting down executor outputbolt:[7 7]
2016-08-30 09:55:32,254 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,254 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,255 INFO  daemon.executor    [] - Shut down executor outputbolt:[7 7]
2016-08-30 09:55:32,255 INFO  daemon.executor    [] - Shutting down executor enccolmultbolt:[3 3]
2016-08-30 09:55:32,256 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,256 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,256 INFO  daemon.executor    [] - Shut down executor enccolmultbolt:[3 3]
2016-08-30 09:55:32,257 INFO  daemon.executor    [] - Shutting down executor __acker:[1 1]
2016-08-30 09:55:32,257 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,257 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,258 INFO  daemon.executor    [] - Shut down executor __acker:[1 1]
2016-08-30 09:55:32,259 INFO  daemon.executor    [] - Shutting down executor kafkaspout:[6 6]
2016-08-30 09:55:32,259 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,259 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,261 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,263 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be0010
2016-08-30 09:55:32,264 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56297 which had sessionid 0x156dbbb99be0010
2016-08-30 09:55:32,265 INFO  daemon.executor    [] - Shut down executor kafkaspout:[6 6]
2016-08-30 09:55:32,265 INFO  daemon.executor    [] - Shutting down executor __system:[-1 -1]
2016-08-30 09:55:32,265 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,265 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,266 INFO  daemon.executor    [] - Shut down executor __system:[-1 -1]
2016-08-30 09:55:32,266 INFO  daemon.executor    [] - Shutting down executor encrowcalcbolt:[5 5]
2016-08-30 09:55:32,266 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,267 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,267 INFO  daemon.executor    [] - Shut down executor encrowcalcbolt:[5 5]
2016-08-30 09:55:32,268 INFO  daemon.executor    [] - Shutting down executor encrowcalcbolt:[4 4]
2016-08-30 09:55:32,268 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,268 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,269 INFO  daemon.executor    [] - Shut down executor encrowcalcbolt:[4 4]
2016-08-30 09:55:32,269 INFO  daemon.worker      [] - Shut down executors
2016-08-30 09:55:32,269 INFO  daemon.worker      [] - Shutting down transfer thread
2016-08-30 09:55:32,270 INFO  storm.util         [] - Async loop interrupted!
2016-08-30 09:55:32,270 INFO  daemon.worker      [] - Shut down transfer thread
2016-08-30 09:55:32,271 INFO  daemon.worker      [] - Shut down backpressure thread
2016-08-30 09:55:32,272 INFO  daemon.worker      [] - Shutting down default resources
2016-08-30 09:55:32,272 INFO  daemon.worker      [] - Shut down default resources
2016-08-30 09:55:32,273 INFO  daemon.worker      [] - Trigger any worker shutdown hooks
2016-08-30 09:55:32,280 INFO  daemon.worker      [] - Disconnecting from storm cluster state context
2016-08-30 09:55:32,280 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,280 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be000f
2016-08-30 09:55:32,281 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be000f closed
2016-08-30 09:55:32,281 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,281 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56296 which had sessionid 0x156dbbb99be000f
2016-08-30 09:55:32,282 INFO  daemon.worker      [] - Shut down worker pirk_integration_test-1-1472565320 589b499b-f6c4-4068-83f4-058efebbccab 1024
2016-08-30 09:55:32,286 INFO  storm.config       [] - REMOVE worker-user 6c6d406d-5a3e-4431-ab7e-63350b12e155
2016-08-30 09:55:32,286 INFO  daemon.supervisor  [] - Shut down 589b499b-f6c4-4068-83f4-058efebbccab:6c6d406d-5a3e-4431-ab7e-63350b12e155
2016-08-30 09:55:32,287 INFO  daemon.supervisor  [] - Shutting down supervisor 589b499b-f6c4-4068-83f4-058efebbccab
2016-08-30 09:55:32,288 INFO  storm.event        [] - Event manager interrupted
2016-08-30 09:55:32,288 INFO  storm.event        [] - Event manager interrupted
2016-08-30 09:55:32,289 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,289 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbb99be000a
2016-08-30 09:55:32,290 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,290 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbb99be000a closed
2016-08-30 09:55:32,291 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56291 which had sessionid 0x156dbbb99be000a
2016-08-30 09:55:32,292 INFO  storm.testing      [] - Shutting down in process zookeeper
2016-08-30 09:55:32,293 INFO  server.NIOServerCnxnFactory  [] - NIOServerCnxn factory exited run method
2016-08-30 09:55:32,293 INFO  server.ZooKeeperServer  [] - shutting down
2016-08-30 09:55:32,293 INFO  server.SessionTrackerImpl  [] - Shutting down
2016-08-30 09:55:32,293 INFO  server.PrepRequestProcessor  [] - Shutting down
2016-08-30 09:55:32,294 INFO  server.SyncRequestProcessor  [] - Shutting down
2016-08-30 09:55:32,294 INFO  server.PrepRequestProcessor  [] - PrepRequestProcessor exited loop!
2016-08-30 09:55:32,294 INFO  server.SyncRequestProcessor  [] - SyncRequestProcessor exited!
2016-08-30 09:55:32,294 INFO  server.FinalRequestProcessor  [] - shutdown of request processor complete
2016-08-30 09:55:32,295 INFO  storm.testing      [] - Done shutting down in process zookeeper
2016-08-30 09:55:32,295 INFO  storm.testing      [] - Deleting temporary path /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//0c7a106b-3891-4efa-a029-1d8f3cced21c
2016-08-30 09:55:32,300 INFO  storm.testing      [] - Deleting temporary path /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//a33de64d-2d7c-4185-97d1-e5acb519f5aa
2016-08-30 09:55:32,301 INFO  storm.testing      [] - Deleting temporary path /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//809e4cbc-f8c6-4b20-9f6f-b3a7f7fcb81a
2016-08-30 09:55:32,329 INFO  storm.KafkaStormIntegrationTest  [] - Decrypting results. 14716
2016-08-30 09:55:32,524 INFO  utils.BaseTests    [] - results:
2016-08-30 09:55:32,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-30 09:55:32,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-30 09:55:32,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-30 09:55:32,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-30 09:55:32,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-30 09:55:32,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-30 09:55:32,526 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-30 09:55:32,526 INFO  utils.BaseTests    [] - correctResults: 
2016-08-30 09:55:32,526 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-30 09:55:32,526 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-30 09:55:32,526 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-30 09:55:32,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-30 09:55:32,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-30 09:55:32,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-30 09:55:32,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"74cbee54-9a78-48c3-905d-c83a0782b051","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-30 09:55:32,528 INFO  storm.KafkaStormIntegrationTest  [] - Test (splitPartitions,saltColumns) = (true,false)
2016-08-30 09:55:32,528 INFO  storm.KafkaStormIntegrationTest  [] - Starting topology.
2016-08-30 09:55:32,528 INFO  storm.KafkaStormIntegrationTest  [] - KafkaConfig initialized...
2016-08-30 09:55:32,555 INFO  server.ZooKeeperServer  [] - Created server with tickTime 2000 minSessionTimeout 4000 maxSessionTimeout 40000 datadir /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/e665f001-f902-4bd0-89ed-30254a84f1ef/version-2 snapdir /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/e665f001-f902-4bd0-89ed-30254a84f1ef/version-2
2016-08-30 09:55:32,555 INFO  server.NIOServerCnxnFactory  [] - binding to port 0.0.0.0/0.0.0.0:2000
2016-08-30 09:55:32,556 INFO  storm.zookeeper    [] - Starting inprocess zookeeper at port 2000 and dir /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//e665f001-f902-4bd0-89ed-30254a84f1ef
2016-08-30 09:55:32,577 INFO  daemon.nimbus      [] - Starting Nimbus with conf {"topology.builtin.metrics.bucket.size.secs" 60, "nimbus.childopts" "-Xmx1024m", "ui.filter.params" nil, "storm.cluster.mode" "local", "storm.messaging.netty.client_worker_threads" 1, "logviewer.max.per.worker.logs.size.mb" 2048, "supervisor.run.worker.as.user" false, "topology.max.task.parallelism" nil, "topology.priority" 29, "zmq.threads" 1, "storm.group.mapping.service" "org.apache.storm.security.auth.ShellBasedGroupsMapping", "transactional.zookeeper.root" "/transactional", "topology.sleep.spout.wait.strategy.time.ms" 1, "scheduler.display.resource" false, "topology.max.replication.wait.time.sec" 60, "qSchema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml", "drpc.invocations.port" 3773, "supervisor.localizer.cache.target.size.mb" 10240, "topology.multilang.serializer" "org.apache.storm.multilang.JsonSerializer", "storm.messaging.netty.server_worker_threads" 1, "nimbus.blobstore.class" "org.apache.storm.blobstore.LocalFsBlobStore", "resource.aware.scheduler.eviction.strategy" "org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy", "topology.max.error.report.per.interval" 5, "storm.thrift.transport" "org.apache.storm.security.auth.SimpleTransportPlugin", "zmq.hwm" 0, "output" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/responderFile5665813788069927912.txt", "storm.group.mapping.service.params" nil, "worker.profiler.enabled" false, "storm.principal.tolocal" "org.apache.storm.security.auth.DefaultPrincipalToLocal", "supervisor.worker.shutdown.sleep.secs" 1, "pacemaker.host" "localhost", "storm.zookeeper.retry.times" 5, "ui.actions.enabled" true, "zmq.linger.millis" 0, "supervisor.enable" true, "topology.stats.sample.rate" 0.05, "storm.messaging.netty.min_wait_ms" 100, "worker.log.level.reset.poll.secs" 30, "storm.zookeeper.port" 2000, "supervisor.heartbeat.frequency.secs" 5, "topology.enable.message.timeouts" false, "supervisor.cpu.capacity" 400.0, "drpc.worker.threads" 64, "supervisor.blobstore.download.thread.count" 5, "drpc.queue.size" 128, "topology.backpressure.enable" true, "supervisor.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "storm.blobstore.inputstream.buffer.size.bytes" 65536, "topology.shellbolt.max.pending" 100, "drpc.https.keystore.password" "", "nimbus.code.sync.freq.secs" 120, "logviewer.port" 8000, "topology.scheduler.strategy" "org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy", "topology.executor.send.buffer.size" 1024, "resource.aware.scheduler.priority.strategy" "org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy", "pacemaker.auth.method" "NONE", "storm.daemon.metrics.reporter.plugins" ["org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter"], "topology.worker.logwriter.childopts" "-Xmx64m", "topology.spout.wait.strategy" "org.apache.storm.spout.SleepSpoutWaitStrategy", "ui.host" "0.0.0.0", "storm.nimbus.retry.interval.millis" 2000, "nimbus.inbox.jar.expiration.secs" 3600, "dev.zookeeper.path" "/tmp/dev-storm-zookeeper", "topology.acker.executors" 1, "topology.fall.back.on.java.serialization" true, "topology.eventlogger.executors" 0, "supervisor.localizer.cleanup.interval.ms" 600000, "storm.zookeeper.servers" ["localhost"], "nimbus.thrift.threads" 64, "logviewer.cleanup.age.mins" 10080, "topology.worker.childopts" nil, "topology.classpath" nil, "supervisor.monitor.frequency.secs" 3, "nimbus.credential.renewers.freq.secs" 600, "topology.skip.missing.kryo.registrations" true, "drpc.authorizer.acl.filename" "drpc-auth-acl.yaml", "pacemaker.kerberos.users" [], "storm.group.mapping.service.cache.duration.secs" 120, "topology.testing.always.try.serialize" false, "nimbus.monitor.freq.secs" 10, "queryInfo" {"useHDFSExpLookupTable" false, "hashKey" "someKey", "numSelectors" 6, "dataPartitionsBitSize" 8, "hashBitSize" 12, "numPartitionsPerDataElement" 36, "numBitsPerDataElement" 256, "uuid" "74cbee54-9a78-48c3-905d-c83a0782b051", "useExpLookupTable" false, "embedSelector" true, "queryType" "dns-hostname-query"}, "storm.health.check.timeout.ms" 5000, "supervisor.supervisors" [], "topology.tasks" nil, "topology.bolts.outgoing.overflow.buffer.enable" false, "splitPartitions" true, "storm.messaging.netty.socket.backlog" 500, "topology.workers" 1, "pacemaker.base.threads" 10, "storm.local.dir" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//f9c8fb23-e6d6-415d-b29b-2ecc9cfd9b60", "topology.disable.loadaware" false, "worker.childopts" "-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump", "storm.auth.simple-white-list.users" [], "topology.disruptor.batch.timeout.millis" 1, "topology.message.timeout.secs" 30, "topology.state.synchronization.timeout.secs" 60, "topology.tuple.serializer" "org.apache.storm.serialization.types.ListDelegateSerializer", "supervisor.supervisors.commands" [], "nimbus.blobstore.expiration.secs" 600, "logviewer.childopts" "-Xmx128m", "topology.environment" nil, "topology.debug" false, "topology.disruptor.batch.size" 100, "storm.messaging.netty.max_retries" 300, "ui.childopts" "-Xmx768m", "storm.network.topography.plugin" "org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping", "storm.zookeeper.session.timeout" 20000, "drpc.childopts" "-Xmx768m", "drpc.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.connection.timeout" 15000, "storm.zookeeper.auth.user" nil, "storm.meta.serialization.delegate" "org.apache.storm.serialization.GzipThriftSerializationDelegate", "topology.max.spout.pending" 300, "storm.codedistributor.class" "org.apache.storm.codedistributor.LocalFileSystemCodeDistributor", "nimbus.supervisor.timeout.secs" 60, "maxHitsPerSelector" 100, "nimbus.task.timeout.secs" 30, "drpc.port" 3772, "pacemaker.max.threads" 50, "storm.zookeeper.retry.intervalceiling.millis" 30000, "nimbus.thrift.port" 6627, "storm.auth.simple-acl.admins" [], "topology.component.cpu.pcore.percent" 10.0, "supervisor.memory.capacity.mb" 3072.0, "storm.nimbus.retry.times" 5, "supervisor.worker.start.timeout.secs" 120, "useHdfs" false, "storm.zookeeper.retry.interval" 1000, "limitHitsPerSelector" true, "logs.users" nil, "worker.profiler.command" "flight.bash", "transactional.zookeeper.port" nil, "drpc.max_buffer_size" 1048576, "pacemaker.thread.timeout" 10, "task.credentials.poll.secs" 30, "blobstore.superuser" "voyager", "drpc.https.keystore.type" "JKS", "topology.worker.receiver.thread.count" 1, "topology.state.checkpoint.interval.ms" 1000, "hdfsUri" "localhost", "supervisor.slots.ports" [6700 6701 6702 6703], "saltColumns" true, "topology.transfer.buffer.size" 32, "storm.health.check.dir" "healthchecks", "topology.worker.shared.thread.pool.size" 4, "drpc.authorizer.acl.strict" false, "nimbus.file.copy.expiration.secs" 600, "worker.profiler.childopts" "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder", "topology.executor.receive.buffer.size" 1024, "backpressure.disruptor.low.watermark" 0.4, "allowAdHocQuerySchemas" false, "queryFile" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/pir_integrationTest-query7554668182117678094.txt", "nimbus.task.launch.secs" 120, "storm.local.mode.zmq" false, "storm.messaging.netty.buffer_size" 5242880, "storm.cluster.state.store" "org.apache.storm.cluster_state.zookeeper_state_factory", "worker.heartbeat.frequency.secs" 1, "storm.log4j2.conf.dir" "log4j2", "ui.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.root" "/storm", "topology.tick.tuple.freq.secs" nil, "drpc.https.port" -1, "storm.workers.artifacts.dir" "workers-artifacts", "supervisor.blobstore.download.max_retries" 3, "task.refresh.poll.secs" 10, "storm.exhibitor.port" 8080, "task.heartbeat.frequency.secs" 3, "pacemaker.port" 6699, "storm.messaging.netty.max_wait_ms" 1000, "nimbus.impersonation.authorizer" "org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer", "topology.component.resources.offheap.memory.mb" 0.0, "drpc.http.port" 3774, "topology.error.throttle.interval.secs" 10, "storm.messaging.transport" "org.apache.storm.messaging.netty.Context", "storm.messaging.netty.authentication" false, "topology.component.resources.onheap.memory.mb" 128.0, "rowDivisions" 2, "topology.kryo.factory" "org.apache.storm.serialization.DefaultKryoFactory", "worker.gc.childopts" "", "nimbus.topology.validator" "org.apache.storm.nimbus.DefaultTopologyValidator", "nimbus.seeds" ["localhost"], "nimbus.queue.size" 100000, "nimbus.cleanup.inbox.freq.secs" 600, "storm.blobstore.replication.factor" 3, "worker.heap.memory.mb" 750, "logviewer.max.sum.worker.logs.size.mb" 4096, "pacemaker.childopts" "-Xmx1024m", "nSquared" "893714063091493252140805543927462484189909163470256324669366233674468493934531351808411750089403379605919371579520956313614309759596321404680678803731365842878590760838574242511806531716813184820975781862008105030373882425133453241", "ui.users" nil, "transactional.zookeeper.servers" nil, "supervisor.worker.timeout.secs" 30, "storm.zookeeper.auth.password" nil, "client.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "supervisor.childopts" "-Xmx256m", "topology.worker.max.heap.size.mb" 768.0, "backpressure.disruptor.high.watermark" 0.9, "ui.filter" nil, "ui.header.buffer.bytes" 4096, "topology.min.replication.count" 1, "topology.disruptor.wait.timeout.millis" 1000, "enccolmultboltPar" 2, "storm.nimbus.retry.intervalceiling.millis" 60000, "topology.trident.batch.emit.interval.millis" 50, "storm.auth.simple-acl.users" [], "drpc.invocations.threads" 64, "java.library.path" "/usr/local/lib:/opt/local/lib:/usr/lib", "encrowcalcboltPar" 2, "ui.port" 8080, "dschema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml", "storm.exhibitor.poll.uripath" "/exhibitor/v1/cluster/list", "storm.messaging.netty.transfer.batch.size" 262144, "logviewer.appender.name" "A1", "nimbus.thrift.max_buffer_size" 1048576, "storm.auth.simple-acl.users.commands" [], "drpc.request.timeout.secs" 600}
2016-08-30 09:55:32,578 INFO  daemon.nimbus      [] - Using default scheduler
2016-08-30 09:55:32,579 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:32,579 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@4cde5d66
2016-08-30 09:55:32,581 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:32,581 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:32,581 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56302
2016-08-30 09:55:32,582 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56302
2016-08-30 09:55:32,582 INFO  persistence.FileTxnLog  [] - Creating new log file: log.1
2016-08-30 09:55:32,585 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbbca4d0000 with negotiated timeout 20000 for client /127.0.0.1:56302
2016-08-30 09:55:32,585 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbbca4d0000, negotiated timeout = 20000
2016-08-30 09:55:32,585 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:32,586 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:32,589 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:32,590 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@13453610
2016-08-30 09:55:32,591 INFO  blobstore.FileBlobStoreImpl  [] - Creating new blob store based in /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/f9c8fb23-e6d6-415d-b29b-2ecc9cfd9b60/blobs
2016-08-30 09:55:32,591 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:32,592 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:32,592 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56303
2016-08-30 09:55:32,592 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56303
2016-08-30 09:55:32,593 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbbca4d0001 with negotiated timeout 20000 for client /127.0.0.1:56303
2016-08-30 09:55:32,593 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbbca4d0001, negotiated timeout = 20000
2016-08-30 09:55:32,593 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:32,593 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:32,594 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@15d41953
2016-08-30 09:55:32,595 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:32,596 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:32,596 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56304
2016-08-30 09:55:32,596 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56304
2016-08-30 09:55:32,598 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbbca4d0002 with negotiated timeout 20000 for client /127.0.0.1:56304
2016-08-30 09:55:32,598 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbbca4d0002, negotiated timeout = 20000
2016-08-30 09:55:32,598 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:32,598 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:32,602 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,603 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbbca4d0002
2016-08-30 09:55:32,604 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,604 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbbca4d0002 closed
2016-08-30 09:55:32,605 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56304 which had sessionid 0x156dbbbca4d0002
2016-08-30 09:55:32,606 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:32,607 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@1c9fa12
2016-08-30 09:55:32,609 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:32,609 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:32,610 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:32,610 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56305
2016-08-30 09:55:32,610 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56305
2016-08-30 09:55:32,610 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@59ea2a36
2016-08-30 09:55:32,611 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbbca4d0003 with negotiated timeout 20000 for client /127.0.0.1:56305
2016-08-30 09:55:32,611 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbbca4d0003, negotiated timeout = 20000
2016-08-30 09:55:32,612 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:32,612 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:32,613 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:32,613 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56306
2016-08-30 09:55:32,614 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56306
2016-08-30 09:55:32,614 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbbca4d0004 with negotiated timeout 20000 for client /127.0.0.1:56306
2016-08-30 09:55:32,614 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbbca4d0004, negotiated timeout = 20000
2016-08-30 09:55:32,615 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:32,629 INFO  storm.zookeeper    [] - Queued up for leader lock.
2016-08-30 09:55:32,630 INFO  server.PrepRequestProcessor  [] - Got user-level KeeperException when processing sessionid:0x156dbbbca4d0000 type:create cxid:0x1 zxid:0x12 txntype:-1 reqpath:n/a Error Path:/storm/leader-lock Error:KeeperErrorCode = NoNode for /storm/leader-lock
2016-08-30 09:55:32,639 INFO  storm.zookeeper    [] - traveler.ltsnet.net gained leadership
2016-08-30 09:55:32,646 INFO  metrics.MetricsUtils  [] - Using statistics reporter plugin:org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter
2016-08-30 09:55:32,646 INFO  reporters.JmxPreparableReporter  [] - Preparing...
2016-08-30 09:55:32,649 INFO  daemon.common      [] - Started statistics report plugin...
2016-08-30 09:55:32,650 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:32,650 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@1c0cba60
2016-08-30 09:55:32,651 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:32,652 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:32,652 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56307
2016-08-30 09:55:32,652 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56307
2016-08-30 09:55:32,653 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbbca4d0005 with negotiated timeout 20000 for client /127.0.0.1:56307
2016-08-30 09:55:32,653 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbbca4d0005, negotiated timeout = 20000
2016-08-30 09:55:32,653 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:32,653 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:32,654 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,655 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbbca4d0005
2016-08-30 09:55:32,656 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbbca4d0005 closed
2016-08-30 09:55:32,656 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56307 which had sessionid 0x156dbbbca4d0005
2016-08-30 09:55:32,656 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,657 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:32,657 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@453d2a55
2016-08-30 09:55:32,658 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:32,658 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:32,659 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:32,659 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56308
2016-08-30 09:55:32,659 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000 sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@31741bb6
2016-08-30 09:55:32,659 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56308
2016-08-30 09:55:32,660 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbbca4d0006 with negotiated timeout 20000 for client /127.0.0.1:56308
2016-08-30 09:55:32,660 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbbca4d0006, negotiated timeout = 20000
2016-08-30 09:55:32,660 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:32,660 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:32,661 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56309
2016-08-30 09:55:32,661 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:32,661 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56309
2016-08-30 09:55:32,662 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbbca4d0007 with negotiated timeout 20000 for client /127.0.0.1:56309
2016-08-30 09:55:32,662 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbbca4d0007, negotiated timeout = 20000
2016-08-30 09:55:32,662 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:32,662 INFO  storm.zookeeper    [] - Zookeeper state update: :connected:none
2016-08-30 09:55:32,663 INFO  imps.CuratorFrameworkImpl  [] - backgroundOperationsLoop exiting
2016-08-30 09:55:32,663 INFO  server.PrepRequestProcessor  [] - Processed session termination for sessionid: 0x156dbbbca4d0007
2016-08-30 09:55:32,664 INFO  zookeeper.ZooKeeper  [] - Session: 0x156dbbbca4d0007 closed
2016-08-30 09:55:32,664 INFO  zookeeper.ClientCnxn  [] - EventThread shut down
2016-08-30 09:55:32,664 INFO  server.NIOServerCnxn  [] - Closed socket connection for client /127.0.0.1:56309 which had sessionid 0x156dbbbca4d0007
2016-08-30 09:55:32,665 INFO  imps.CuratorFrameworkImpl  [] - Starting
2016-08-30 09:55:32,666 INFO  zookeeper.ZooKeeper  [] - Initiating client connection, connectString=localhost:2000/storm sessionTimeout=20000 watcher=org.apache.storm.shade.org.apache.curator.ConnectionState@23e95661
2016-08-30 09:55:32,667 INFO  zookeeper.ClientCnxn  [] - Opening socket connection to server localhost/127.0.0.1:2000. Will not attempt to authenticate using SASL (unknown error)
2016-08-30 09:55:32,667 INFO  server.NIOServerCnxnFactory  [] - Accepted socket connection from /127.0.0.1:56310
2016-08-30 09:55:32,668 INFO  zookeeper.ClientCnxn  [] - Socket connection established to localhost/127.0.0.1:2000, initiating session
2016-08-30 09:55:32,668 INFO  server.ZooKeeperServer  [] - Client attempting to establish new session at /127.0.0.1:56310
2016-08-30 09:55:32,668 INFO  server.ZooKeeperServer  [] - Established session 0x156dbbbca4d0008 with negotiated timeout 20000 for client /127.0.0.1:56310
2016-08-30 09:55:32,668 INFO  zookeeper.ClientCnxn  [] - Session establishment complete on server localhost/127.0.0.1:2000, sessionid = 0x156dbbbca4d0008, negotiated timeout = 20000
2016-08-30 09:55:32,669 INFO  state.ConnectionStateManager  [] - State change: CONNECTED
2016-08-30 09:55:32,675 INFO  daemon.supervisor  [] - Starting Supervisor with conf {"topology.builtin.metrics.bucket.size.secs" 60, "nimbus.childopts" "-Xmx1024m", "ui.filter.params" nil, "storm.cluster.mode" "local", "storm.messaging.netty.client_worker_threads" 1, "logviewer.max.per.worker.logs.size.mb" 2048, "supervisor.run.worker.as.user" false, "topology.max.task.parallelism" nil, "topology.priority" 29, "zmq.threads" 1, "storm.group.mapping.service" "org.apache.storm.security.auth.ShellBasedGroupsMapping", "transactional.zookeeper.root" "/transactional", "topology.sleep.spout.wait.strategy.time.ms" 1, "scheduler.display.resource" false, "topology.max.replication.wait.time.sec" 60, "qSchema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file4532447393685025940.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6601659287734868610.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2033186626462123619.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file6934837797661139339.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file4280566018573806206.xml", "drpc.invocations.port" 3773, "supervisor.localizer.cache.target.size.mb" 10240, "topology.multilang.serializer" "org.apache.storm.multilang.JsonSerializer", "storm.messaging.netty.server_worker_threads" 1, "nimbus.blobstore.class" "org.apache.storm.blobstore.LocalFsBlobStore", "resource.aware.scheduler.eviction.strategy" "org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy", "topology.max.error.report.per.interval" 5, "storm.thrift.transport" "org.apache.storm.security.auth.SimpleTransportPlugin", "zmq.hwm" 0, "output" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/responderFile5665813788069927912.txt", "storm.group.mapping.service.params" nil, "worker.profiler.enabled" false, "storm.principal.tolocal" "org.apache.storm.security.auth.DefaultPrincipalToLocal", "supervisor.worker.shutdown.sleep.secs" 1, "pacemaker.host" "localhost", "storm.zookeeper.retry.times" 5, "ui.actions.enabled" true, "zmq.linger.millis" 0, "supervisor.enable" true, "topology.stats.sample.rate" 0.05, "storm.messaging.netty.min_wait_ms" 100, "worker.log.level.reset.poll.secs" 30, "storm.zookeeper.port" 2000, "supervisor.heartbeat.frequency.secs" 5, "topology.enable.message.timeouts" false, "supervisor.cpu.capacity" 400.0, "drpc.worker.threads" 64, "supervisor.blobstore.download.thread.count" 5, "drpc.queue.size" 128, "topology.backpressure.enable" true, "supervisor.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "storm.blobstore.inputstream.buffer.size.bytes" 65536, "topology.shellbolt.max.pending" 100, "drpc.https.keystore.password" "", "nimbus.code.sync.freq.secs" 120, "logviewer.port" 8000, "topology.scheduler.strategy" "org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy", "topology.executor.send.buffer.size" 1024, "resource.aware.scheduler.priority.strategy" "org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy", "pacemaker.auth.method" "NONE", "storm.daemon.metrics.reporter.plugins" ["org.apache.storm.daemon.metrics.reporters.JmxPreparableReporter"], "topology.worker.logwriter.childopts" "-Xmx64m", "topology.spout.wait.strategy" "org.apache.storm.spout.SleepSpoutWaitStrategy", "ui.host" "0.0.0.0", "storm.nimbus.retry.interval.millis" 2000, "nimbus.inbox.jar.expiration.secs" 3600, "dev.zookeeper.path" "/tmp/dev-storm-zookeeper", "topology.acker.executors" 1, "topology.fall.back.on.java.serialization" true, "topology.eventlogger.executors" 0, "supervisor.localizer.cleanup.interval.ms" 600000, "storm.zookeeper.servers" ["localhost"], "nimbus.thrift.threads" 64, "logviewer.cleanup.age.mins" 10080, "topology.worker.childopts" nil, "topology.classpath" nil, "supervisor.monitor.frequency.secs" 3, "nimbus.credential.renewers.freq.secs" 600, "topology.skip.missing.kryo.registrations" true, "drpc.authorizer.acl.filename" "drpc-auth-acl.yaml", "pacemaker.kerberos.users" [], "storm.group.mapping.service.cache.duration.secs" 120, "topology.testing.always.try.serialize" false, "nimbus.monitor.freq.secs" 10, "queryInfo" {"useHDFSExpLookupTable" false, "hashKey" "someKey", "numSelectors" 6, "dataPartitionsBitSize" 8, "hashBitSize" 12, "numPartitionsPerDataElement" 36, "numBitsPerDataElement" 256, "uuid" "74cbee54-9a78-48c3-905d-c83a0782b051", "useExpLookupTable" false, "embedSelector" true, "queryType" "dns-hostname-query"}, "storm.health.check.timeout.ms" 5000, "supervisor.supervisors" [], "topology.tasks" nil, "topology.bolts.outgoing.overflow.buffer.enable" false, "splitPartitions" true, "storm.messaging.netty.socket.backlog" 500, "topology.workers" 1, "pacemaker.base.threads" 10, "storm.local.dir" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T//960b6925-fc51-4264-984e-d7937568606f", "topology.disable.loadaware" false, "worker.childopts" "-Xmx%HEAP-MEM%m -XX:+PrintGCDetails -Xloggc:artifacts/gc.log -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=1M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=artifacts/heapdump", "storm.auth.simple-white-list.users" [], "topology.disruptor.batch.timeout.millis" 1, "topology.message.timeout.secs" 30, "topology.state.synchronization.timeout.secs" 60, "topology.tuple.serializer" "org.apache.storm.serialization.types.ListDelegateSerializer", "supervisor.supervisors.commands" [], "nimbus.blobstore.expiration.secs" 600, "logviewer.childopts" "-Xmx128m", "topology.environment" nil, "topology.debug" false, "topology.disruptor.batch.size" 100, "storm.messaging.netty.max_retries" 300, "ui.childopts" "-Xmx768m", "storm.network.topography.plugin" "org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping", "storm.zookeeper.session.timeout" 20000, "drpc.childopts" "-Xmx768m", "drpc.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.connection.timeout" 15000, "storm.zookeeper.auth.user" nil, "storm.meta.serialization.delegate" "org.apache.storm.serialization.GzipThriftSerializationDelegate", "topology.max.spout.pending" 300, "storm.codedistributor.class" "org.apache.storm.codedistributor.LocalFileSystemCodeDistributor", "nimbus.supervisor.timeout.secs" 60, "maxHitsPerSelector" 100, "nimbus.task.timeout.secs" 30, "drpc.port" 3772, "pacemaker.max.threads" 50, "storm.zookeeper.retry.intervalceiling.millis" 30000, "nimbus.thrift.port" 6627, "storm.auth.simple-acl.admins" [], "topology.component.cpu.pcore.percent" 10.0, "supervisor.memory.capacity.mb" 3072.0, "storm.nimbus.retry.times" 5, "supervisor.worker.start.timeout.secs" 120, "useHdfs" false, "storm.zookeeper.retry.interval" 1000, "limitHitsPerSelector" true, "logs.users" nil, "worker.profiler.command" "flight.bash", "transactional.zookeeper.port" nil, "drpc.max_buffer_size" 1048576, "pacemaker.thread.timeout" 10, "task.credentials.poll.secs" 30, "blobstore.superuser" "voyager", "drpc.https.keystore.type" "JKS", "topology.worker.receiver.thread.count" 1, "topology.state.checkpoint.interval.ms" 1000, "hdfsUri" "localhost", "supervisor.slots.ports" (1024 1025 1026), "saltColumns" true, "topology.transfer.buffer.size" 32, "storm.health.check.dir" "healthchecks", "topology.worker.shared.thread.pool.size" 4, "drpc.authorizer.acl.strict" false, "nimbus.file.copy.expiration.secs" 600, "worker.profiler.childopts" "-XX:+UnlockCommercialFeatures -XX:+FlightRecorder", "topology.executor.receive.buffer.size" 1024, "backpressure.disruptor.low.watermark" 0.4, "allowAdHocQuerySchemas" false, "queryFile" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/pir_integrationTest-query7554668182117678094.txt", "nimbus.task.launch.secs" 120, "storm.local.mode.zmq" false, "storm.messaging.netty.buffer_size" 5242880, "storm.cluster.state.store" "org.apache.storm.cluster_state.zookeeper_state_factory", "worker.heartbeat.frequency.secs" 1, "storm.log4j2.conf.dir" "log4j2", "ui.http.creds.plugin" "org.apache.storm.security.auth.DefaultHttpCredentialsPlugin", "storm.zookeeper.root" "/storm", "topology.tick.tuple.freq.secs" nil, "drpc.https.port" -1, "storm.workers.artifacts.dir" "workers-artifacts", "supervisor.blobstore.download.max_retries" 3, "task.refresh.poll.secs" 10, "storm.exhibitor.port" 8080, "task.heartbeat.frequency.secs" 3, "pacemaker.port" 6699, "storm.messaging.netty.max_wait_ms" 1000, "nimbus.impersonation.authorizer" "org.apache.storm.security.auth.authorizer.ImpersonationAuthorizer", "topology.component.resources.offheap.memory.mb" 0.0, "drpc.http.port" 3774, "topology.error.throttle.interval.secs" 10, "storm.messaging.transport" "org.apache.storm.messaging.netty.Context", "storm.messaging.netty.authentication" false, "topology.component.resources.onheap.memory.mb" 128.0, "rowDivisions" 2, "topology.kryo.factory" "org.apache.storm.serialization.DefaultKryoFactory", "worker.gc.childopts" "", "nimbus.topology.validator" "org.apache.storm.nimbus.DefaultTopologyValidator", "nimbus.seeds" ["localhost"], "nimbus.queue.size" 100000, "nimbus.cleanup.inbox.freq.secs" 600, "storm.blobstore.replication.factor" 3, "worker.heap.memory.mb" 750, "logviewer.max.sum.worker.logs.size.mb" 4096, "pacemaker.childopts" "-Xmx1024m", "nSquared" "893714063091493252140805543927462484189909163470256324669366233674468493934531351808411750089403379605919371579520956313614309759596321404680678803731365842878590760838574242511806531716813184820975781862008105030373882425133453241", "ui.users" nil, "transactional.zookeeper.servers" nil, "supervisor.worker.timeout.secs" 30, "storm.zookeeper.auth.password" nil, "client.blobstore.class" "org.apache.storm.blobstore.NimbusBlobStore", "supervisor.childopts" "-Xmx256m", "topology.worker.max.heap.size.mb" 768.0, "backpressure.disruptor.high.watermark" 0.9, "ui.filter" nil, "ui.header.buffer.bytes" 4096, "topology.min.replication.count" 1, "topology.disruptor.wait.timeout.millis" 1000, "enccolmultboltPar" 2, "storm.nimbus.retry.intervalceiling.millis" 60000, "topology.trident.batch.emit.interval.millis" 50, "storm.auth.simple-acl.users" [], "drpc.invocations.threads" 64, "java.library.path" "/usr/local/lib:/opt/local/lib:/usr/lib", "encrowcalcboltPar" 2, "ui.port" 8080, "dschema" "/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5716412757641366065.xml", "storm.exhibitor.poll.uripath" "/exhibitor/v1/cluster/list", "storm.messaging.netty.transfer.batch.size" 262144, "logviewer.appender.name" "A1", "nimbus.thrift.max_buffer_size" 1048576, "storm.auth.simple-acl.users.commands" [], "drpc.request.timeout.secs" 600}
