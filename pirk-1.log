2016-08-11 08:46:34,473 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-11 08:46:34,478 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-11 08:46:34,480 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-11 08:46:34,481 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-11 08:46:34,482 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-11 08:46:34,482 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-11 08:46:34,482 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-11 08:46:34,483 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-11 08:46:34,491 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-11 08:46:34,491 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-11 08:46:34,492 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-11 08:46:34,492 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-11 08:46:34,492 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-11 08:46:34,493 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-11 08:46:34,493 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-11 08:46:34,494 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-11 08:46:34,494 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-11 08:46:34,494 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-11 08:46:34,495 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-11 08:46:34,495 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-11 08:46:34,496 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-11 08:46:34,496 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-11 08:46:34,496 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-11 08:46:34,626 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-11 08:46:34,627 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-11 08:46:34,628 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-11 08:46:34,628 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-11 08:46:34,630 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-11 08:46:34,630 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-11 08:46:34,630 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-11 08:46:34,633 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-11 08:46:34,634 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-11 08:46:34,636 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-11 08:46:34,637 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-11 08:46:34,639 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-11 08:46:34,642 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-11 08:46:34,643 INFO  general.PaillierTest  [] - i = 0
2016-08-11 08:46:34,646 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-11 08:46:34,712 INFO  encryption.Paillier  [] - Parameters = p = -247356303 q = 1693544821 N = 787941541 NSquared = -89081255 lambdaN = -1238303568 bitLength = 201
2016-08-11 08:46:34,765 INFO  general.PaillierTest  [] - encM1 = 1996832785 encM2 = -1748453753
2016-08-11 08:46:34,766 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:34,766 INFO  general.PaillierTest  [] - encM1_times_encM2 = -845835087 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:35,965 INFO  encryption.Paillier  [] - Parameters = p = -1192761603 q = 1267242315 N = -87429857 NSquared = -1034917439 lambdaN = 2066528364 bitLength = 3072
2016-08-11 08:46:36,093 INFO  general.PaillierTest  [] - encM1 = 298231322 encM2 = -2133100365
2016-08-11 08:46:36,212 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:36,274 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1355924651 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:38,771 INFO  encryption.Paillier  [] - Parameters = p = -2031688585 q = -1140592117 N = 558452509 NSquared = -1325602487 lambdaN = 1865366606 bitLength = 3144
2016-08-11 08:46:38,911 INFO  general.PaillierTest  [] - encM1 = 1796652783 encM2 = 1685876273
2016-08-11 08:46:39,050 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:39,115 INFO  general.PaillierTest  [] - encM1_times_encM2 = -111276370 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:39,116 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-11 08:46:39,116 INFO  general.PaillierTest  [] - i = 0
2016-08-11 08:46:39,118 INFO  encryption.Paillier  [] - testBit false
 N = 11000100110101010100100100011000001101110110000101101011111100011000011110001110000001011000011010011010111000101010011011011010011010010000100110110000101100101001111101110101101001011011011101011111
2016-08-11 08:46:39,123 INFO  encryption.Paillier  [] - testBit true
 N = 10011100101000111110110011101101001011100011000011111011111100100011111001010010010001010111110000001011111000000010010111000001000010110101000100000000010011001100100101101000011111000110111011100001
2016-08-11 08:46:39,123 INFO  encryption.Paillier  [] - Parameters = p = -1758309119 q = 1808972257 N = 1752985313 NSquared = 1778262465 lambdaN = -1020544256 bitLength = 201
2016-08-11 08:46:39,123 INFO  general.PaillierTest  [] - encM1 = 1036884921 encM2 = -288419880
2016-08-11 08:46:39,124 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:39,124 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1850286205 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:40,008 INFO  encryption.Paillier  [] - testBit true

2016-08-11 08:46:40,010 INFO  encryption.Paillier  [] - Parameters = p = 12268969 q = 938110069 N = -1414737347 NSquared = -1398791543 lambdaN = 1556204552 bitLength = 3072
2016-08-11 08:46:40,132 INFO  general.PaillierTest  [] - encM1 = 1620152040 encM2 = 56484920
2016-08-11 08:46:40,253 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:40,313 INFO  general.PaillierTest  [] - encM1_times_encM2 = -788745838 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:43,264 INFO  encryption.Paillier  [] - testBit false

2016-08-11 08:46:46,784 INFO  encryption.Paillier  [] - testBit true

2016-08-11 08:46:46,786 INFO  encryption.Paillier  [] - Parameters = p = 2018585797 q = -403143507 N = 1271452961 NSquared = 184544833 lambdaN = -1818235484 bitLength = 3135
2016-08-11 08:46:46,910 INFO  general.PaillierTest  [] - encM1 = 1170162146 encM2 = -1354362259
2016-08-11 08:46:47,035 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:47,096 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1572459307 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:47,096 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-11 08:46:47,096 INFO  general.PaillierTest  [] - i = 0
2016-08-11 08:46:47,099 INFO  encryption.Paillier  [] - Parameters = p = -1767661091 q = 1982448321 N = 1550549405 NSquared = 1927125577 lambdaN = 1407682368 bitLength = 201
2016-08-11 08:46:47,099 INFO  general.PaillierTest  [] - encM1 = 1525034071 encM2 = 1295068305
2016-08-11 08:46:47,100 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:47,100 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1466854458 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:47,788 INFO  encryption.Paillier  [] - Parameters = p = 339758403 q = 1581047179 N = 928041569 NSquared = -895665983 lambdaN = 183455738 bitLength = 3072
2016-08-11 08:46:47,911 INFO  general.PaillierTest  [] - encM1 = -729679954 encM2 = -1248594236
2016-08-11 08:46:48,045 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:48,111 INFO  general.PaillierTest  [] - encM1_times_encM2 = 331281973 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:50,603 INFO  encryption.Paillier  [] - Parameters = p = -437672101 q = 1060838335 N = 619935205 NSquared = 1862868697 lambdaN = 975982066 bitLength = 3208
2016-08-11 08:46:50,739 INFO  general.PaillierTest  [] - encM1 = -1670908735 encM2 = 285167626
2016-08-11 08:46:50,870 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:50,937 INFO  general.PaillierTest  [] - encM1_times_encM2 = 726008895 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:50,937 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-11 08:46:50,937 INFO  general.PaillierTest  [] - i = 0
2016-08-11 08:46:50,942 INFO  encryption.Paillier  [] - testBit false
 N = 11000011101100000111011000010010100000011010110110010110101101010100010100001010010000011000000010000101000001101101001001101111100010000001011001011101111001100011100001001001110110011100111110011001
2016-08-11 08:46:50,948 INFO  encryption.Paillier  [] - testBit false
 N = 10110100001001001110011001111000010110010010000100110110111000001111111001001000000111111011010011010000101101111000100000100010001011001011000101000000111001111110001001011011010101010100010000000011
2016-08-11 08:46:50,960 INFO  encryption.Paillier  [] - testBit false
 N = 10101110011001010000001000001111110111001011111110110100011000110001001100001001111101101101111101001000100101110111011111110010000110001001001000000111110011010110001111101010101101010000100101001111
2016-08-11 08:46:50,964 INFO  encryption.Paillier  [] - testBit true
 N = 11001101101000100111011010001110010010010000100110011111011011001000101101110010101100110110011111110001010010011000010010010011110100010101000011111110001011100010000011000110000111010010100010100101
2016-08-11 08:46:50,964 INFO  encryption.Paillier  [] - Parameters = p = 1574019833 q = 2068673037 N = -971167579 NSquared = 2010511961 lambdaN = -1816144136 bitLength = 201
2016-08-11 08:46:50,965 INFO  general.PaillierTest  [] - encM1 = -1005413906 encM2 = -418776181
2016-08-11 08:46:50,965 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:50,966 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2014117270 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:46:52,683 INFO  encryption.Paillier  [] - testBit false

2016-08-11 08:46:55,254 INFO  encryption.Paillier  [] - testBit true
 N = 101000000010011110000011001000010000000011000000000000111000000101111100110101111000000001010111001110000001111100101001011011100111110000101100110101101100000010101001000011001010000110010011100010100110100010000101110011000110001100100101110001100111101010101111001100101011111100010111100011001101010101111011011100110101001001000001010100001100011111110100011000110100000111111110001100011101001111011101111110101111001011101101111101110100101010111011100101011011100001111100001101100010000001110101100000011100010010111100111001001110110110001011100100010100001010001010110101111001011101011011111001110000010110000111000010011001011100100010000001100011010100010101100011011110001110001101010101111101100110100001101010010010011011100000110101111010101000111110010000111001111011001001001001011110110011100110101110000110011111011100011110101100100111101001011010000100100000100000010101110101000101001001101000011110011001100100100111001100110011110011010011110000110100100110010001000100111101010001100101111110100100101111100010001011101100011000110110000000100100000001111011100111100011000000000110110010101100001011101010100101001011111101000011100001001000111001001101011111100001110001000011001100011111010010010101111110001101111111110111101111000000011001010010110100011100111000111111001110000001001111011011000011110101101101001001011001101111100000100011001111100000110100100110000110000001111011100111000001001001100111111010100100100101101000100110111010110010011011100101111000100011001001111101001111110000111101101100011110001000010100011010001001100100000011111111111110110011000111011100110101000100000010111001011011111001111100110110000111000110010010001101101010101101101110011101110010101000100100101101100111001001010011110101110000011110000111111110001110110111101110000001001101010010101010001001001001001001111001101011110100001101010110001000111110100000010100110010010111101000110110101011010111011000010001010100111000000101111101001000010001011111101011011101101011011000011011001001100100010010100011100000001110001100110011000011011110011010110011110100010101010110011100000010011101010000111010001000010111000011100110110010000100101001001001101010101011100011001100011100011110011000011110001111010010110110111110100001101000100110011111010101011011101111100100101000101101101010110000000111111101101000011011100110000111000100011100010000010111000111010011001001111000000101000110100011110110000111100100111000011100111101110110011100011010001011110001000100111011000000000010001001001100010100111100111101101000001100000110111100010001101110110101110000000010111011101110010100110011000000011000100100101101001101011101111011000000001000100011010101011000111001010010010100101111110001001000001111111110001001101100011111101101111101101011100001111000000010000111100101111001000001110111000010100000001001011000100100000010011111011001000111000000111000000110111111100110110000111110010100011011010101100110010010110001110100100000000001011101000010000011111100110111111010001001001110110001110011001101110010011001100001110111
2016-08-11 08:46:55,258 INFO  encryption.Paillier  [] - Parameters = p = 1280228291 q = 504301885 N = -842426249 NSquared = 1537967953 lambdaN = 834005436 bitLength = 3072
2016-08-11 08:46:55,395 INFO  general.PaillierTest  [] - encM1 = -959284183 encM2 = -173879904
2016-08-11 08:46:55,549 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:46:55,631 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1678679795 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:47:15,778 INFO  encryption.Paillier  [] - testBit true

2016-08-11 08:47:15,782 INFO  encryption.Paillier  [] - Parameters = p = -250059049 q = -323969721 N = -1129946975 NSquared = -314235583 lambdaN = -92653034 bitLength = 4918
2016-08-11 08:47:16,269 INFO  general.PaillierTest  [] - encM1 = -1956237706 encM2 = -718424191
2016-08-11 08:47:16,750 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:47:16,978 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1050628364 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:47:16,978 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-11 08:47:16,979 INFO  general.PaillierTest  [] - i = 0
2016-08-11 08:47:16,981 INFO  encryption.Paillier  [] - Parameters = p = -425148469 q = 1626162183 N = -797037939 NSquared = 165581225 lambdaN = -999025826 bitLength = 201
2016-08-11 08:47:16,981 INFO  general.PaillierTest  [] - encM1 = -1831794249 encM2 = 651123286
2016-08-11 08:47:16,981 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:47:16,982 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1926097599 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:47:17,728 INFO  encryption.Paillier  [] - Parameters = p = -53212843 q = 2096636471 N = -1323087037 NSquared = 1349669769 lambdaN = -1683255332 bitLength = 3072
2016-08-11 08:47:17,850 INFO  general.PaillierTest  [] - encM1 = 102381855 encM2 = -1928638140
2016-08-11 08:47:17,969 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:47:18,027 INFO  general.PaillierTest  [] - encM1_times_encM2 = -822997739 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:47:21,349 INFO  encryption.Paillier  [] - Parameters = p = -1597633889 q = 1562871381 N = 1820967115 NSquared = 846668025 lambdaN = -406539612 bitLength = 3173
2016-08-11 08:47:21,495 INFO  general.PaillierTest  [] - encM1 = -404793021 encM2 = -1234782280
2016-08-11 08:47:21,642 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:47:21,710 INFO  general.PaillierTest  [] - encM1_times_encM2 = 137328900 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:47:21,711 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-11 08:47:21,711 INFO  general.PaillierTest  [] - i = 0
2016-08-11 08:47:21,715 INFO  encryption.Paillier  [] - testBit false
 N = 10101011111011100000011000001110011000001110010011111110010101111101001000110101001101100101100111101101101111101010110000101010011001101011100011110011100100111011010111011110110010011011101110001111
2016-08-11 08:47:21,717 INFO  encryption.Paillier  [] - testBit true
 N = 10110100010000100011001000000000001011001011001100101000000011101111010110101110110101101011010011110011000001110001010000000110000100100011100000100011000111111001000000000100101011110001001111100011
2016-08-11 08:47:21,718 INFO  encryption.Paillier  [] - Parameters = p = 1167998727 q = 1536848197 N = 78582755 NSquared = 1239776073 lambdaN = 278117188 bitLength = 201
2016-08-11 08:47:21,718 INFO  general.PaillierTest  [] - encM1 = 199816607 encM2 = -202915430
2016-08-11 08:47:21,718 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:47:21,719 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1453685931 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:47:23,534 INFO  encryption.Paillier  [] - testBit false

2016-08-11 08:47:25,436 INFO  encryption.Paillier  [] - testBit false

2016-08-11 08:47:26,476 INFO  encryption.Paillier  [] - testBit true

2016-08-11 08:47:26,489 INFO  encryption.Paillier  [] - Parameters = p = -146291037 q = 1292545925 N = 1383178159 NSquared = 2014894497 lambdaN = 118461636 bitLength = 3072
2016-08-11 08:47:26,653 INFO  general.PaillierTest  [] - encM1 = 1373771558 encM2 = -1024212770
2016-08-11 08:47:26,800 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:47:26,864 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1898635839 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:47:39,432 INFO  encryption.Paillier  [] - testBit true

2016-08-11 08:47:39,435 INFO  encryption.Paillier  [] - Parameters = p = -1097954469 q = -337182901 N = -1923843927 NSquared = -1849237615 lambdaN = -244353278 bitLength = 3725
2016-08-11 08:47:39,636 INFO  general.PaillierTest  [] - encM1 = -77293711 encM2 = -1586718555
2016-08-11 08:47:39,841 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:47:39,942 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1525671398 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:47:39,942 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-11 08:47:39,942 INFO  general.PaillierTest  [] - i = 0
2016-08-11 08:47:39,948 INFO  encryption.Paillier  [] - Parameters = p = -481706707 q = -916359335 N = 1319088037 NSquared = 863567961 lambdaN = 584343448 bitLength = 201
2016-08-11 08:47:39,948 INFO  general.PaillierTest  [] - encM1 = -1845535374 encM2 = 1100138519
2016-08-11 08:47:39,949 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:47:39,949 INFO  general.PaillierTest  [] - encM1_times_encM2 = -217442229 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:47:42,141 INFO  encryption.Paillier  [] - Parameters = p = 136515303 q = 1748748919 N = -1186253983 NSquared = 1462094529 lambdaN = 377287118 bitLength = 3072
2016-08-11 08:47:42,259 INFO  general.PaillierTest  [] - encM1 = 116799308 encM2 = 1141388637
2016-08-11 08:47:42,375 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:47:42,432 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1407297332 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:48:50,424 INFO  encryption.Paillier  [] - Parameters = p = 25828719 q = -281632935 N = 666250391 NSquared = 1886929169 lambdaN = -1993807880 bitLength = 6247
2016-08-11 08:48:51,346 INFO  general.PaillierTest  [] - encM1 = -1688071568 encM2 = 1265758649
2016-08-11 08:48:52,279 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:48:52,745 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2022970794 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:48:52,745 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-11 08:48:52,745 INFO  general.PaillierTest  [] - i = 0
2016-08-11 08:48:52,748 INFO  encryption.Paillier  [] - testBit true
 N = 10011111101111111000011001101110100111010101011010100010011110110000000111110001111000011000000001001110110011011010010010110000011001110110001110000000010110100110100110011000101010110011111010111011
2016-08-11 08:48:52,748 INFO  encryption.Paillier  [] - Parameters = p = -1109037709 q = 1569363865 N = -1733607749 NSquared = -315548519 lambdaN = 1050516696 bitLength = 201
2016-08-11 08:48:52,748 INFO  general.PaillierTest  [] - encM1 = 1176184690 encM2 = 1759458124
2016-08-11 08:48:52,749 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:48:52,749 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1543824329 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:48:53,631 INFO  encryption.Paillier  [] - testBit false

2016-08-11 08:48:54,690 INFO  encryption.Paillier  [] - testBit false

2016-08-11 08:48:57,228 INFO  encryption.Paillier  [] - testBit false

2016-08-11 08:48:58,290 INFO  encryption.Paillier  [] - testBit true

2016-08-11 08:48:58,292 INFO  encryption.Paillier  [] - Parameters = p = -245690213 q = 1948402017 N = 55485883 NSquared = -885090663 lambdaN = 881042592 bitLength = 3072
2016-08-11 08:48:58,405 INFO  general.PaillierTest  [] - encM1 = -1219227503 encM2 = 441059511
2016-08-11 08:48:58,521 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:48:58,584 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1030970640 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:49:13,351 INFO  encryption.Paillier  [] - testBit true
 N = 10101110110010110110101101111001001001100111001100011001111101011011011000010001101101010011001110101110011100111110010001111101010111001111000010111010000001100101110101011110000011110011101111100011011000100100100011000110100011001010010100101111000000101011010111010110100000001111110010110101110011111100000110111000100011010111000010111011011001001010110100111010010001000111110011101110001011110101101000110110011010001101111101110011001100011100001101101100001100010111011001000111000010011100010100111110011011100111011000011111010000000111011011010101010000111001101000011110100010001001010000111100111010110000000001010011110110111111000001010101010000001111110110001000111100001010101000111001101010000001000100110000010100101101010001011000000100010001100110001100001011010111101111000010000001001110011001000000001000101000100011010110101101101001101110011100011010010010011001001110100010011001110010111011011010001011010010010111001110101001111110100000010010000110010101110111100100111101000111111111000100001111110011011001001101101111101110110100110110001111000101100101110001010111110001001000100100000111011001100000000000001111000000011001110110010001101011110100100010010110110001101100101100111001000101000101000010101100010011011101101100011010111001100001111010101010100110101101110000010110000111100000000010111011111101000010010101010100011100000101011000010101001001111100011001111110111000010101001011011010110100110010100101011001101000000001000011111010011101011100011100100110000010000010010010011001011010111011001110101001001110101010111101001010100000101110100001001110000110001110111100100010100111100000100011000000001101100101000100110001111000110000000011010110011111001101111011001001011100010101011100101111100100101010111000000100110101100111101110001011101001110100111000111001111100100100011011111010011010010000110010000000101111100101010001101100010001010000010010110011001111111101100100010000110101110000110101000000001100111010101111011011011111000010111001010101110101011111100101011011101111111010011011100100000001010001110001001011011001101111101111100101101101111111110111110011110101001010001000111101110011010000100100010110111011001101101000111010010000000111010001001011011011100001010100101101011111001101000010110010001110110101011111010111110101011100010100000100110111111010010111011000011111100101000100110111000001100000011110111111001011100011001011000011100111001110100100011100100001101010101111101110010011001010010001010111001010010001100000010001111110000110111010100111001101101111011011010110101100011011001010100010000110000010001010110101100100011001101000101110011100101011001010000001000101101101001011011011011011111110111100100101111011010110101010010100110011011111000010011011010011100011110100100000100001001001001111011111010100110101110110000011011110100010100111111011101000011010000110010011000100100111000100111100011100101110000101001001011010011001110011110110111110110011100000011001011011101011011100010010001101000101011001101111001010001001001110111001110110010000111101110111000010100000011001010010100010000101010101101111011010111100001010110010110101111100000001110000011000111010011011110010101011011100111101110100001110011111011111010111001011101101110110110001101011110000100110110100100001100110010100110100001100000011101001011000000001010101101010100010001111101100011111101100101001010011101101011000101110111100100010111001010110010001000010100101111011010111000100000010011110101001000100011001000100100010010111110111011101010110101001101110111101110000011100010010001100001011000010001011010111001111001110011000001110010100110110011011001010010101010000001011011011101110000110001101000100011110000011100010001100010110101100001010101010111010011110010100011011100010111100011000100010100010101110000000110011100100111000111101111010110101010001011100111100011010100000111000000101011100010101110101101000001110000001111101100101000010100101000101100011010011010101001001011111101011100100100101100111001010010001001011101101010001110000010100110000001101011011001010000010010010001000010010000010110110101110001001001101001110000001011001100110101001100000100111111110000101111100011111000001000110100000010011001111110010010011010011001001011101111111101000111101110011010110110010010000010110000000101101010101001000110100001100101011110010000010101111001011000001011000000100001110010011000001101011011010111010100100000001001000000000010101100101100010111110010101000001011010001001111011111110111101100100011010000100001100101111000111110111110101111101010010010001001110101110001011001001100011000100111011010000001001101100010001111011010011100110000010011011001110011110000111111010010001110011000011010100110110101100111001101110000001011011001110011000111011011000100011100000111111110011101010101100011111000001000111001011000010011101110110110100110111010100111100011101011000100010100110000101100110010011100010011010000000001101110000000011101101001000111100100110000011001101011111101111001100001001000011011100001011101010100100100110101000100111011110110000010010001010111001001101111110001100101010010000111001110100101010101000111001101010001101101101110010011001000010001010101111011110110010110000001010001101100011000111000110001110010110110011110110101000001100100001100001100010101000110110010010110110001110000101000110010101101011101010011111000101001011101000110111100001010111110010101101101000000100111000111110010011001110111101100110111010001011111110010010110011000110011011011010110010111100111011111001111001011000101011101111100010000010100000011110100001001000110011101000010111101100111000100111011010010100110100100110000100111011001111101111100000011111111001000100101001111101111010100100111000011110100010110100000111110100000000101000100101101010101010101010111101011011010111111101100111001011111111001011000000100110000111100001000011110010111111110100100011101111011001100010100000010001011111101001
2016-08-11 08:49:13,356 INFO  encryption.Paillier  [] - Parameters = p = 1671608583 q = 405281679 N = 1652627433 NSquared = 2131603985 lambdaN = 1935352234 bitLength = 5954
2016-08-11 08:49:14,227 INFO  general.PaillierTest  [] - encM1 = 2009167737 encM2 = -453612712
2016-08-11 08:49:15,063 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:49:15,481 INFO  general.PaillierTest  [] - encM1_times_encM2 = -612098513 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 08:49:15,481 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-11 08:49:15,485 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-11 08:49:15,486 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-11 08:49:15,487 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-11 08:49:15,491 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-11 08:49:15,494 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-11 08:49:15,495 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-11 08:49:15,497 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-11 08:49:15,497 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-11 08:49:15,497 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 08:49:15,497 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-11 08:49:15,498 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-11 08:49:15,500 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-11 08:49:15,503 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-11 08:49:15,504 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-11 08:49:15,507 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-11 08:49:15,508 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-11 08:49:15,509 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-11 08:49:15,509 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-11 08:49:15,510 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-11 08:49:15,523 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile9028966883437502424.xml
2016-08-11 08:49:15,585 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-11 08:49:15,586 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile9028966883437502424.xml hdfs = false
2016-08-11 08:49:15,586 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile9028966883437502424.xml
2016-08-11 08:49:15,594 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,597 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-11 08:49:15,598 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 08:49:15,599 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,599 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,599 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,600 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,600 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,600 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,601 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile9028966883437502424.xml hdfs = false
2016-08-11 08:49:15,601 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile9028966883437502424.xml
2016-08-11 08:49:15,604 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,604 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-11 08:49:15,605 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 08:49:15,605 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,605 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,606 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,607 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,607 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,607 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,607 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-11 08:49:15,608 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml
2016-08-11 08:49:15,609 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml
2016-08-11 08:49:15,610 INFO  utils.TestUtils    [] - elementName = date
2016-08-11 08:49:15,610 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 08:49:15,611 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:15,611 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-11 08:49:15,611 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-11 08:49:15,611 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 08:49:15,614 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-11 08:49:15,614 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2012241577036504711.xml
2016-08-11 08:49:15,615 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2012241577036504711.xml
2016-08-11 08:49:15,616 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 08:49:15,616 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:15,617 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 08:49:15,618 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-11 08:49:15,619 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5364659527691733792.xml
2016-08-11 08:49:15,619 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2012241577036504711.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5364659527691733792.xml
2016-08-11 08:49:15,620 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 08:49:15,625 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 08:49:15,625 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:15,627 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-11 08:49:15,628 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8079302149431333744.xml
2016-08-11 08:49:15,628 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2012241577036504711.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5364659527691733792.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8079302149431333744.xml
2016-08-11 08:49:15,633 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 08:49:15,633 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:15,633 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 08:49:15,635 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-11 08:49:15,636 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8691484889316492562.xml
2016-08-11 08:49:15,636 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2012241577036504711.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5364659527691733792.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8079302149431333744.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8691484889316492562.xml
2016-08-11 08:49:15,639 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 08:49:15,640 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:15,640 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 08:49:15,643 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-11 08:49:15,644 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml
2016-08-11 08:49:15,644 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml
2016-08-11 08:49:15,646 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,647 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-11 08:49:15,647 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,648 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 08:49:15,648 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 08:49:15,649 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-11 08:49:15,649 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,649 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:15,649 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,650 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 08:49:15,650 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,650 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-11 08:49:15,650 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,650 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-11 08:49:15,651 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,651 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-11 08:49:15,653 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2012241577036504711.xml
2016-08-11 08:49:15,654 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2012241577036504711.xml
2016-08-11 08:49:15,656 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,656 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-11 08:49:15,656 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,657 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-11 08:49:15,657 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,657 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-11 08:49:15,657 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,657 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-11 08:49:15,658 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,658 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-11 08:49:15,658 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5364659527691733792.xml
2016-08-11 08:49:15,658 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5364659527691733792.xml
2016-08-11 08:49:15,660 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,661 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-11 08:49:15,661 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,661 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 08:49:15,661 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,662 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 08:49:15,662 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,662 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:15,662 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,662 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 08:49:15,663 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8079302149431333744.xml
2016-08-11 08:49:15,663 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8079302149431333744.xml
2016-08-11 08:49:15,665 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,666 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-11 08:49:15,666 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,666 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 08:49:15,666 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,667 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 08:49:15,667 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,667 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:15,667 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,667 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 08:49:15,668 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8691484889316492562.xml
2016-08-11 08:49:15,668 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8691484889316492562.xml
2016-08-11 08:49:15,671 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,672 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-11 08:49:15,672 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,672 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 08:49:15,673 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,673 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 08:49:15,673 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,673 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:15,674 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,674 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 08:49:15,675 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml
2016-08-11 08:49:15,675 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7269770643832165892.xml
2016-08-11 08:49:15,680 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,680 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-11 08:49:15,680 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,681 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 08:49:15,681 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 08:49:15,682 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-11 08:49:15,689 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,689 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:15,689 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,689 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 08:49:15,690 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,690 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-11 08:49:15,690 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,690 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-11 08:49:15,690 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,691 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-11 08:49:15,691 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2012241577036504711.xml
2016-08-11 08:49:15,691 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2012241577036504711.xml
2016-08-11 08:49:15,695 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,695 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-11 08:49:15,695 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,696 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-11 08:49:15,696 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,696 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-11 08:49:15,696 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,696 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-11 08:49:15,697 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,697 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-11 08:49:15,697 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5364659527691733792.xml
2016-08-11 08:49:15,697 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file5364659527691733792.xml
2016-08-11 08:49:15,700 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,701 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-11 08:49:15,701 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,701 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 08:49:15,702 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,702 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 08:49:15,702 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,702 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:15,702 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,702 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 08:49:15,703 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8079302149431333744.xml
2016-08-11 08:49:15,703 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8079302149431333744.xml
2016-08-11 08:49:15,706 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,706 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-11 08:49:15,707 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,707 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 08:49:15,707 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,707 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 08:49:15,708 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,709 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:15,709 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,709 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 08:49:15,709 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8691484889316492562.xml
2016-08-11 08:49:15,710 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file8691484889316492562.xml
2016-08-11 08:49:15,712 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,712 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-11 08:49:15,712 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:15,712 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 08:49:15,713 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,713 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 08:49:15,713 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,713 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:15,713 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,713 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 08:49:15,796 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,797 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,797 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,797 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,800 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,802 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-11 08:49:15,802 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,803 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-11 08:49:15,804 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,805 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-11 08:49:15,805 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,805 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-11 08:49:15,807 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,807 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-11 08:49:15,808 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,808 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-11 08:49:15,809 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,809 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-11 08:49:15,810 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,810 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-11 08:49:15,811 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,812 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,812 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,812 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,813 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,814 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-11 08:49:15,814 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,816 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-11 08:49:15,818 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,818 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,818 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,818 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,819 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,819 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-11 08:49:15,819 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,820 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-11 08:49:15,820 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,821 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-11 08:49:15,821 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,821 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-11 08:49:15,822 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,822 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-11 08:49:15,822 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,823 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-11 08:49:15,823 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,824 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-11 08:49:15,824 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,824 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-11 08:49:15,825 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,825 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,825 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,825 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,826 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,827 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-11 08:49:15,827 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,827 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-11 08:49:15,828 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,828 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,829 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,829 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,829 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,830 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-11 08:49:15,830 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,830 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-11 08:49:15,831 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,831 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-11 08:49:15,831 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,832 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-11 08:49:15,832 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,833 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-11 08:49:15,833 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,833 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-11 08:49:15,834 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,834 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-11 08:49:15,835 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,835 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-11 08:49:15,835 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,836 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,836 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,836 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,837 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,837 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-11 08:49:15,837 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,837 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-11 08:49:15,844 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-11 08:49:15,844 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-11 08:49:15,845 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-11 08:49:15,845 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-11 08:49:15,845 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-11 08:49:15,846 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-11 08:49:15,846 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-11 08:49:15,846 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-11 08:49:15,847 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-11 08:49:15,847 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-11 08:49:15,847 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-11 08:49:15,848 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-11 08:49:15,849 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-11 08:49:15,849 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-11 08:49:15,850 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-11 08:49:15,851 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-11 08:49:15,852 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-11 08:49:15,852 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-11 08:49:15,852 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-11 08:49:15,852 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-11 08:49:15,853 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-11 08:49:15,853 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-11 08:49:15,853 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-11 08:49:15,854 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,854 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,854 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,854 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,855 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,855 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,855 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-11 08:49:15,855 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-11 08:49:15,856 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 08:49:15,856 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,856 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,856 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,856 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,856 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,857 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,857 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,857 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-11 08:49:15,857 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-11 08:49:15,858 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,858 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,858 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,859 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,859 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,860 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,860 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-11 08:49:15,861 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-11 08:49:15,861 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-11 08:49:15,861 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-11 08:49:15,861 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,862 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 08:49:15,862 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-11 08:49:15,862 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,862 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 08:49:15,863 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-11 08:49:15,863 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,863 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 08:49:15,863 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-11 08:49:15,863 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 08:49:15,864 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-11 08:49:15,864 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 08:49:15,865 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-11 08:49:15,865 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-11 08:49:15,866 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-11 08:49:15,866 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-11 08:49:15,867 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-11 08:49:15,867 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-11 08:49:15,867 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-11 08:49:15,867 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-11 08:49:15,868 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,868 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,868 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,868 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,868 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,869 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,869 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-11 08:49:15,869 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-11 08:49:15,869 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 08:49:15,869 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,869 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,870 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,870 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,870 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,870 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,870 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,870 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-11 08:49:15,871 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-11 08:49:15,871 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,871 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,871 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,872 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,872 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,872 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,872 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-11 08:49:15,873 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-11 08:49:15,873 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-11 08:49:15,873 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-11 08:49:15,874 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,874 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 08:49:15,874 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-11 08:49:15,874 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,874 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 08:49:15,874 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-11 08:49:15,874 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,875 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 08:49:15,875 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-11 08:49:15,875 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 08:49:15,875 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-11 08:49:15,875 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 08:49:15,875 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-11 08:49:15,876 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-11 08:49:15,876 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-11 08:49:15,876 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,876 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-11 08:49:15,876 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,876 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-11 08:49:15,876 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,876 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-11 08:49:15,877 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 08:49:15,877 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-11 08:49:15,877 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-11 08:49:15,877 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-11 08:49:15,877 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,877 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-11 08:49:15,878 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,878 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-11 08:49:15,878 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,878 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-11 08:49:15,878 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-11 08:49:15,879 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-11 08:49:15,879 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-11 08:49:15,879 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-11 08:49:15,879 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-11 08:49:15,880 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-11 08:49:15,881 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-11 08:49:15,881 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-11 08:49:15,881 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,881 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,882 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,882 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,882 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,882 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,883 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-11 08:49:15,883 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-11 08:49:15,884 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 08:49:15,884 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,885 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,886 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,886 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,886 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,886 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,886 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,887 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-11 08:49:15,887 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-11 08:49:15,888 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,888 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,888 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,888 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,889 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 08:49:15,889 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,889 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-11 08:49:15,890 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-11 08:49:15,890 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-11 08:49:15,891 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-11 08:49:15,891 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,891 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 08:49:15,891 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-11 08:49:15,891 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,891 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 08:49:15,892 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-11 08:49:15,892 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,892 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 08:49:15,892 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-11 08:49:15,892 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 08:49:15,893 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-11 08:49:15,893 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 08:49:15,893 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-11 08:49:15,893 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-11 08:49:15,894 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-11 08:49:15,894 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,894 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-11 08:49:15,894 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,894 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-11 08:49:15,894 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,895 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-11 08:49:15,895 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 08:49:15,895 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-11 08:49:15,896 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-11 08:49:15,896 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-11 08:49:15,896 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,896 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-11 08:49:15,896 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,897 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-11 08:49:15,897 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 08:49:15,897 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-11 08:49:15,898 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,898 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,898 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,898 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,899 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,900 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,900 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,901 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,902 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,906 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,907 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,907 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,909 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,910 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,910 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,911 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,911 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,912 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,912 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,912 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,913 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,921 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,921 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,921 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,922 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,923 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,923 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,923 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,924 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,925 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,925 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,925 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,926 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,926 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,926 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,926 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,927 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,927 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,928 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,928 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,928 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,929 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,929 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,929 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 08:49:15,930 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-11 08:49:15,931 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-11 08:49:15,932 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-11 08:49:15,933 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-11 08:49:15,937 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner5588777008185601566.xml
2016-08-11 08:49:15,940 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner5588777008185601566.xml hdfs = false
2016-08-11 08:49:15,940 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner5588777008185601566.xml
2016-08-11 08:49:15,942 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,942 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 08:49:15,944 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2461029789978631073.xml
2016-08-11 08:49:15,946 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2461029789978631073.xml hdfs = false
2016-08-11 08:49:15,947 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2461029789978631073.xml
2016-08-11 08:49:15,949 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,949 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 08:49:15,950 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,950 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,950 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,951 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType8846026940135099459.xml
2016-08-11 08:49:15,953 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType8846026940135099459.xml hdfs = false
2016-08-11 08:49:15,953 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType8846026940135099459.xml
2016-08-11 08:49:15,954 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,955 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 08:49:15,957 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-11 08:49:15,957 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-11 08:49:15,958 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile366179024053940146.xml
2016-08-11 08:49:15,959 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile366179024053940146.xml
2016-08-11 08:49:15,963 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-11 08:49:15,963 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-11 08:49:15,963 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-11 08:49:15,965 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile366179024053940146.xml
2016-08-11 08:49:15,965 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile366179024053940146.xml
2016-08-11 08:49:15,967 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,967 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-11 08:49:15,967 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-11 08:49:15,967 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-11 08:49:15,967 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-11 08:49:15,968 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-11 08:49:15,968 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-11 08:49:15,968 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile5039352669251034524.tmp
2016-08-11 08:49:15,970 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7694189508834441557.xml
2016-08-11 08:49:15,974 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7694189508834441557.xml hdfs = false
2016-08-11 08:49:15,974 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7694189508834441557.xml
2016-08-11 08:49:15,978 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,979 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 08:49:15,979 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,980 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,981 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,981 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,985 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-11 08:49:15,985 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile866150929337606031.xml
2016-08-11 08:49:15,986 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile866150929337606031.xml
2016-08-11 08:49:15,988 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-11 08:49:15,988 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-11 08:49:15,988 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-11 08:49:15,988 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-11 08:49:15,990 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile866150929337606031.xml
2016-08-11 08:49:15,990 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile866150929337606031.xml
2016-08-11 08:49:15,991 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:15,991 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-11 08:49:15,992 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-11 08:49:15,992 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-11 08:49:15,992 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,992 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-11 08:49:15,992 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:15,992 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-11 08:49:15,992 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:15,993 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-11 08:49:15,993 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-11 08:49:16,291 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-11 08:49:16,564 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-11 08:49:16,565 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-11 08:49:16,565 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1451983628854084957.xml
2016-08-11 08:49:16,569 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1451983628854084957.xml hdfs = false
2016-08-11 08:49:16,570 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1451983628854084957.xml
2016-08-11 08:49:16,571 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 08:49:16,572 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 08:49:16,572 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:16,572 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:16,572 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:16,573 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:16,573 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-11 08:49:16,573 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1800601831098209513.xml
2016-08-11 08:49:16,573 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1800601831098209513.xml
2016-08-11 08:49:16,575 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-11 08:49:16,575 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-11 08:49:16,575 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-11 08:49:16,576 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-11 08:49:16,577 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1800601831098209513.xml
2016-08-11 08:49:16,578 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1800601831098209513.xml
2016-08-11 08:49:16,579 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:16,580 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-11 08:49:16,580 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-11 08:49:16,580 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-11 08:49:16,580 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-11 08:49:16,584 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile6782161012925097579.xml
2016-08-11 08:49:16,587 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile6782161012925097579.xml hdfs = false
2016-08-11 08:49:16,588 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile6782161012925097579.xml
2016-08-11 08:49:16,589 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 08:49:16,589 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 08:49:16,590 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:16,590 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:16,590 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:16,590 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:16,590 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-11 08:49:16,591 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5852037829849708578.xml
2016-08-11 08:49:16,591 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5852037829849708578.xml
2016-08-11 08:49:16,592 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-11 08:49:16,592 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-11 08:49:16,592 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-11 08:49:16,592 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-11 08:49:16,594 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5852037829849708578.xml
2016-08-11 08:49:16,594 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5852037829849708578.xml
2016-08-11 08:49:16,596 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:16,596 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-11 08:49:16,596 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-11 08:49:16,597 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-11 08:49:16,597 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-11 08:49:16,967 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-11 08:49:16,967 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile7005121546554613568.tmp
2016-08-11 08:49:16,968 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile7005121546554613568.tmp
2016-08-11 08:49:16,968 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile973110494725707163.xml
2016-08-11 08:49:16,971 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile973110494725707163.xml hdfs = false
2016-08-11 08:49:16,971 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile973110494725707163.xml
2016-08-11 08:49:16,973 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 08:49:16,973 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-11 08:49:16,973 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 08:49:16,974 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:16,974 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:16,974 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:16,974 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:16,974 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:16,975 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:16,975 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-11 08:49:16,975 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2117760006683022809.xml
2016-08-11 08:49:16,975 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2117760006683022809.xml
2016-08-11 08:49:16,977 INFO  utils.TestUtils    [] - elementName = date
2016-08-11 08:49:16,977 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 08:49:16,977 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:16,977 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-11 08:49:16,977 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-11 08:49:16,977 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 08:49:16,978 INFO  utils.TestUtils    [] - filterName = qname
2016-08-11 08:49:16,979 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-11 08:49:16,980 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3179341550773000237.xml
2016-08-11 08:49:16,980 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2117760006683022809.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3179341550773000237.xml
2016-08-11 08:49:16,981 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 08:49:16,981 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:16,981 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 08:49:16,981 INFO  utils.TestUtils    [] - filterName = qname
2016-08-11 08:49:16,983 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-11 08:49:16,983 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file273828619069550221.xml
2016-08-11 08:49:16,984 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2117760006683022809.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3179341550773000237.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file273828619069550221.xml
2016-08-11 08:49:16,985 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 08:49:16,985 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 08:49:16,985 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:16,986 INFO  utils.TestUtils    [] - filterName = qname
2016-08-11 08:49:16,987 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-11 08:49:16,988 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3022469824032104895.xml
2016-08-11 08:49:16,988 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2117760006683022809.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3179341550773000237.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file273828619069550221.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3022469824032104895.xml
2016-08-11 08:49:16,989 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 08:49:16,989 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:16,989 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 08:49:16,990 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-11 08:49:16,990 INFO  utils.TestUtils    [] - filterName = ip
2016-08-11 08:49:16,991 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-11 08:49:16,992 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6462576502931049539.xml
2016-08-11 08:49:16,992 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2117760006683022809.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3179341550773000237.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file273828619069550221.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3022469824032104895.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6462576502931049539.xml
2016-08-11 08:49:16,993 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 08:49:16,993 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 08:49:16,993 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 08:49:16,996 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2117760006683022809.xml
2016-08-11 08:49:16,996 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2117760006683022809.xml
2016-08-11 08:49:16,998 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:16,998 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-11 08:49:16,999 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:16,999 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 08:49:16,999 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 08:49:16,999 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-11 08:49:16,999 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:16,999 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:16,999 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:16,999 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 08:49:16,999 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:17,000 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-11 08:49:17,000 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:17,000 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-11 08:49:17,000 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,000 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-11 08:49:17,000 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-11 08:49:17,048 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3179341550773000237.xml
2016-08-11 08:49:17,048 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3179341550773000237.xml
2016-08-11 08:49:17,050 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:17,050 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-11 08:49:17,050 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:17,050 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-11 08:49:17,051 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,051 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-11 08:49:17,051 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,051 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-11 08:49:17,051 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,051 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-11 08:49:17,051 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-11 08:49:17,090 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file273828619069550221.xml
2016-08-11 08:49:17,091 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file273828619069550221.xml
2016-08-11 08:49:17,092 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:17,092 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-11 08:49:17,092 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:17,093 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 08:49:17,093 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:17,093 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 08:49:17,093 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,093 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:17,093 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,093 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 08:49:17,094 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-11 08:49:17,120 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3022469824032104895.xml
2016-08-11 08:49:17,121 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file3022469824032104895.xml
2016-08-11 08:49:17,122 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:17,122 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-11 08:49:17,122 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:17,122 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 08:49:17,122 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:17,122 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 08:49:17,123 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,123 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:17,123 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,123 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 08:49:17,123 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-11 08:49:17,123 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-11 08:49:17,151 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6462576502931049539.xml
2016-08-11 08:49:17,151 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6462576502931049539.xml
2016-08-11 08:49:17,152 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 08:49:17,152 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-11 08:49:17,152 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 08:49:17,153 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 08:49:17,153 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 08:49:17,153 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 08:49:17,153 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,153 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 08:49:17,153 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 08:49:17,153 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 08:49:17,156 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 08:49:17,158 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:17,159 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4599440837447970833.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2244398868220082335.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2151093327976370179.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile234761808444097558.txt
2016-08-11 08:49:17,161 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 08:49:17,168 INFO  encryption.Paillier  [] - Parameters = p = -1539078079 q = -756952849 N = 1289880751 NSquared = 756150177 lambdaN = 2029307712 bitLength = 384
2016-08-11 08:49:17,168 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:18,098 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 08:49:18,100 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:18,352 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:18,514 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:18,514 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 08:49:18,518 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:18,521 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:18,525 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:18,527 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:18,530 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:18,533 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 08:49:18,537 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 08:49:18,540 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 08:49:18,544 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:18,544 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:18,552 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:18,552 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:18,702 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:18,703 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:18,705 INFO  utils.BaseTests    [] - results:
2016-08-11 08:49:18,706 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 08:49:18,706 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 08:49:18,707 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:18,707 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:18,707 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 08:49:18,707 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:18,708 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:18,708 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 08:49:18,708 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 08:49:18,709 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:18,709 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:18,709 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 08:49:18,709 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:18,710 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:18,710 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 08:49:18,711 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 08:49:18,712 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-11 08:49:18,712 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:18,713 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7579517840562825838.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5182322179603032157.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8261817100772836913.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6391356479133299879.txt
2016-08-11 08:49:18,713 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 08:49:18,728 INFO  encryption.Paillier  [] - Parameters = p = 446654913 q = -269608771 N = 436808573 NSquared = 2049784585 lambdaN = 1811216576 bitLength = 384
2016-08-11 08:49:18,729 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:19,205 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 08:49:19,205 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:19,345 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:19,422 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:19,422 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-11 08:49:19,424 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-11 08:49:19,426 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-11 08:49:19,428 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-11 08:49:19,430 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-11 08:49:19,431 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-11 08:49:19,433 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-11 08:49:19,434 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 08:49:19,436 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-11 08:49:19,437 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:19,437 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:19,439 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:19,439 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:19,503 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:19,503 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:19,504 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:19,504 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-11 08:49:19,504 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-11 08:49:19,505 INFO  utils.BaseTests    [] - correctResults:
2016-08-11 08:49:19,505 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-11 08:49:19,505 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:19,505 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-11 08:49:19,506 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-11 08:49:19,506 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-11 08:49:19,506 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:19,507 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8019928727848806161.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query821224440853129344.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6246488932603277130.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile9064704693030358396.txt
2016-08-11 08:49:19,507 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 08:49:19,515 INFO  encryption.Paillier  [] - Parameters = p = 1473949755 q = 1283489103 N = -2046217931 NSquared = -80784135 lambdaN = -254344746 bitLength = 384
2016-08-11 08:49:19,515 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:20,053 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 08:49:20,054 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:20,174 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:20,233 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:20,233 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-11 08:49:20,234 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 08:49:20,236 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-11 08:49:20,237 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-11 08:49:20,238 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 08:49:20,239 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 08:49:20,241 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-11 08:49:20,242 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-11 08:49:20,244 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-11 08:49:20,246 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:20,246 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:20,247 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:20,248 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:20,315 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:20,316 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:20,317 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:20,317 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:20,318 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:20,318 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-11 08:49:20,318 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-11 08:49:20,318 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-11 08:49:20,319 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-11 08:49:20,319 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-11 08:49:20,319 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:20,320 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6117197534298682764.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query6011128127321500349.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3018318753040376920.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8706147392283260231.txt
2016-08-11 08:49:20,320 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 08:49:20,328 INFO  encryption.Paillier  [] - Parameters = p = 153127693 q = 684805241 N = -2025417435 NSquared = -316663975 lambdaN = 1431646056 bitLength = 384
2016-08-11 08:49:20,328 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:20,717 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 08:49:20,717 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:20,838 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:20,890 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:20,890 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:20,891 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:20,891 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:20,893 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:20,893 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:20,950 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:20,950 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:20,951 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-11 08:49:20,951 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-11 08:49:20,951 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 08:49:20,951 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:20,952 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8866701023510512569.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4036545752029902032.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2719517402350275884.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5931369802616166137.txt
2016-08-11 08:49:20,952 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 08:49:20,962 INFO  encryption.Paillier  [] - Parameters = p = 400874171 q = 1862434971 N = -1352405191 NSquared = -744392015 lambdaN = -1807857166 bitLength = 384
2016-08-11 08:49:20,963 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:21,787 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 08:49:21,787 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:21,906 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:21,954 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:21,955 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 08:49:21,957 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:21,958 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:21,960 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:21,961 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:21,963 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:21,964 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 08:49:21,966 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 08:49:21,968 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 08:49:21,972 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:21,972 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:21,975 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:21,975 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:22,063 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:22,064 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:22,065 INFO  utils.BaseTests    [] - results:
2016-08-11 08:49:22,066 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 08:49:22,066 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 08:49:22,066 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:22,066 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:22,066 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 08:49:22,066 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:22,066 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:22,066 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 08:49:22,066 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 08:49:22,067 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:22,067 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:22,067 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 08:49:22,067 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:22,067 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:22,067 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 08:49:22,068 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 08:49:22,068 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 08:49:22,068 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:22,068 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier9188642918903658194.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4381053814333449762.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5899580809273910109.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3203604098688245242.txt
2016-08-11 08:49:22,068 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 08:49:22,076 INFO  encryption.Paillier  [] - Parameters = p = -1815739461 q = -115396415 N = -543105029 NSquared = 129450009 lambdaN = 694015424 bitLength = 384
2016-08-11 08:49:22,076 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:22,923 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 08:49:22,923 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:23,073 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:23,141 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:23,141 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 08:49:23,143 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:23,144 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:23,146 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:23,147 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:23,149 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:23,151 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 08:49:23,154 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 08:49:23,156 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 08:49:23,159 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:23,159 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:23,162 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:23,162 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:23,265 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:23,265 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:23,267 INFO  utils.BaseTests    [] - results:
2016-08-11 08:49:23,267 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 08:49:23,267 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 08:49:23,267 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:23,267 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:23,268 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 08:49:23,268 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:23,268 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:23,268 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 08:49:23,268 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 08:49:23,268 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:23,269 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:23,269 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 08:49:23,269 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:23,269 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:23,269 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 08:49:23,270 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 08:49:23,270 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 08:49:23,270 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:23,271 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4272165166297442755.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3959742496346463374.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7034101445763420023.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6517455084391473374.txt
2016-08-11 08:49:23,271 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 08:49:23,280 INFO  encryption.Paillier  [] - Parameters = p = 1410770527 q = 1630499735 N = 1351208713 NSquared = -552497583 lambdaN = -845030774 bitLength = 384
2016-08-11 08:49:23,280 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:24,124 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 08:49:24,124 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:24,245 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:24,296 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:24,296 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 08:49:24,298 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:24,300 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:24,301 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:24,303 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:24,304 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:24,305 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 08:49:24,307 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 08:49:24,309 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 08:49:24,311 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:24,311 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:24,315 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:24,315 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:24,413 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:24,414 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:24,415 INFO  utils.BaseTests    [] - results:
2016-08-11 08:49:24,415 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 08:49:24,415 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 08:49:24,415 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:24,416 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:24,416 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 08:49:24,416 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:24,416 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:24,416 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 08:49:24,416 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 08:49:24,416 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:24,416 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:24,417 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 08:49:24,417 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:24,417 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:24,417 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 08:49:24,417 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 08:49:24,417 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 08:49:24,417 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:24,418 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5709468293248538665.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8622538935138239905.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4100868091717089128.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7475805798938786534.txt
2016-08-11 08:49:24,418 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-11 08:49:24,431 INFO  encryption.Paillier  [] - Parameters = p = 1767283183 q = -1908859161 N = 191228073 NSquared = -288571503 lambdaN = -1981081622 bitLength = 384
2016-08-11 08:49:24,431 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:25,331 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 08:49:25,331 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:25,455 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:25,507 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:25,507 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 08:49:25,509 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:25,511 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:25,515 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:25,516 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:25,517 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:25,518 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 08:49:25,520 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 08:49:25,521 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 08:49:25,522 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:25,522 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:25,525 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:25,525 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:25,622 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:25,622 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:25,624 INFO  utils.BaseTests    [] - results:
2016-08-11 08:49:25,624 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 08:49:25,624 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 08:49:25,624 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:25,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:25,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 08:49:25,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:25,625 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:25,625 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 08:49:25,626 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 08:49:25,626 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:25,626 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:25,626 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 08:49:25,626 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:25,626 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:25,626 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 08:49:25,627 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 08:49:25,627 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-11 08:49:25,627 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:25,628 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2488012163039936827.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4087204102486233276.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6768664017255304851.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8650084895887264797.txt
2016-08-11 08:49:25,628 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-11 08:49:25,642 INFO  encryption.Paillier  [] - Parameters = p = -2008267513 q = -1743451339 N = 1347721075 NSquared = -1659839063 lambdaN = 134078772 bitLength = 384
2016-08-11 08:49:25,642 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:26,137 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 08:49:26,137 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:26,260 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:26,311 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:26,311 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-11 08:49:26,312 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-11 08:49:26,313 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-11 08:49:26,314 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-11 08:49:26,315 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-11 08:49:26,316 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-11 08:49:26,317 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-11 08:49:26,318 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 08:49:26,320 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-11 08:49:26,321 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:26,321 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:26,322 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:26,322 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:26,380 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:26,380 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:26,381 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:26,381 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-11 08:49:26,381 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-11 08:49:26,381 INFO  utils.BaseTests    [] - correctResults:
2016-08-11 08:49:26,382 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-11 08:49:26,382 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:26,382 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-11 08:49:26,382 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-11 08:49:26,382 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-11 08:49:26,382 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:26,383 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8177313610683090460.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7352271260617223324.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1036649920828056328.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5749178464722247255.txt
2016-08-11 08:49:26,383 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-11 08:49:26,390 INFO  encryption.Paillier  [] - Parameters = p = 530351151 q = -1778551047 N = -509789257 NSquared = -94118703 lambdaN = 369205320 bitLength = 384
2016-08-11 08:49:26,390 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:26,843 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 08:49:26,844 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:26,962 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:27,018 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:27,018 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-11 08:49:27,019 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 08:49:27,020 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-11 08:49:27,020 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-11 08:49:27,022 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 08:49:27,022 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 08:49:27,023 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-11 08:49:27,024 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-11 08:49:27,025 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-11 08:49:27,026 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:27,026 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:27,027 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:27,027 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:27,091 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:27,092 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:27,093 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:27,093 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:27,093 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 08:49:27,093 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-11 08:49:27,093 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-11 08:49:27,093 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-11 08:49:27,094 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-11 08:49:27,094 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-11 08:49:27,094 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:27,095 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier247053686095320873.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query678638536858272080.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6502792328243470763.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1710355408498500225.txt
2016-08-11 08:49:27,095 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-11 08:49:27,101 INFO  encryption.Paillier  [] - Parameters = p = -1568191377 q = -1673088917 N = 2104705637 NSquared = 1509309401 lambdaN = 525509318 bitLength = 384
2016-08-11 08:49:27,102 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:27,606 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 08:49:27,606 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:27,739 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:27,806 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:27,807 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:27,808 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:27,808 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:27,809 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:27,809 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:27,861 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:27,862 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:27,862 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-11 08:49:27,862 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-11 08:49:27,862 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 08:49:27,863 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 08:49:27,863 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2447539053132502185.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1873859984289584895.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4432667528917967927.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile410163574136423598.txt
2016-08-11 08:49:27,863 INFO  wideskies.QueryInfo  [] - identifier = 4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 08:49:27,870 INFO  encryption.Paillier  [] - Parameters = p = -1124655071 q = -593832117 N = -1740889941 NSquared = 1683173945 lambdaN = 2136282272 bitLength = 384
2016-08-11 08:49:27,870 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 08:49:28,715 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 08:49:28,715 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 08:49:28,715 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-11 08:49:28,842 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 08:49:28,893 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 08:49:28,893 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 08:49:28,894 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:28,896 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:28,898 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:28,899 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:28,901 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 08:49:28,902 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 08:49:28,904 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 08:49:28,906 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 08:49:28,908 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 08:49:28,908 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 08:49:28,911 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 08:49:28,911 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 08:49:29,004 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 08:49:29,004 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 08:49:29,005 INFO  utils.BaseTests    [] - results:
2016-08-11 08:49:29,005 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 08:49:29,006 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:29,006 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:29,006 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 08:49:29,006 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:29,006 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 08:49:29,006 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 08:49:29,006 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 08:49:29,006 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:29,007 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:29,007 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 08:49:29,007 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:29,007 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"4a42d06a-1fa8-4ab2-ae96-16cbb6a37c07","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 08:49:29,007 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 09:58:09,177 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-11 09:58:09,182 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-11 09:58:09,185 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-11 09:58:09,181 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-11 09:58:09,187 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-11 09:58:09,188 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-11 09:58:09,190 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-11 09:58:09,190 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-11 09:58:09,187 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-11 09:58:09,202 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-11 09:58:09,192 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-11 09:58:09,207 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-11 09:58:09,213 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-11 09:58:09,213 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-11 09:58:09,214 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-11 09:58:09,214 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-11 09:58:09,215 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-11 09:58:09,216 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-11 09:58:09,216 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-11 09:58:09,217 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-11 09:58:09,217 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-11 09:58:09,217 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-11 09:58:09,218 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-11 09:58:09,219 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-11 09:58:09,219 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-11 09:58:09,220 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-11 09:58:09,220 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-11 09:58:09,228 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile8416344360639342249.tmp
2016-08-11 09:58:09,229 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile8416344360639342249.tmp
2016-08-11 09:58:09,231 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2343915251280483842.xml
2016-08-11 09:58:09,306 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-11 09:58:09,308 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2343915251280483842.xml hdfs = false
2016-08-11 09:58:09,309 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2343915251280483842.xml
2016-08-11 09:58:09,315 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 09:58:09,318 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-11 09:58:09,324 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 09:58:09,325 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:09,327 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:09,327 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:09,332 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-11 09:58:09,332 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-11 09:58:09,333 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-11 09:58:09,333 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-11 09:58:09,334 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-11 09:58:09,335 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-11 09:58:09,335 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-11 09:58:09,332 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:09,340 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-11 09:58:09,339 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:09,342 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-11 09:58:09,342 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:09,344 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2343915251280483842.xml hdfs = false
2016-08-11 09:58:09,349 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2343915251280483842.xml
2016-08-11 09:58:09,349 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-11 09:58:09,350 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-11 09:58:09,351 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-11 09:58:09,352 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-11 09:58:09,353 INFO  general.PaillierTest  [] - i = 0
2016-08-11 09:58:09,354 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 09:58:09,355 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-11 09:58:09,355 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 09:58:09,355 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:09,356 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:09,357 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:09,357 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-11 09:58:09,357 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:09,357 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:09,358 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:09,358 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-11 09:58:09,359 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml
2016-08-11 09:58:09,360 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml
2016-08-11 09:58:09,361 INFO  utils.TestUtils    [] - elementName = date
2016-08-11 09:58:09,364 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 09:58:09,364 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 09:58:09,364 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-11 09:58:09,365 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-11 09:58:09,365 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 09:58:09,365 INFO  utils.TestUtils    [] - filterName = qname
2016-08-11 09:58:09,369 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-11 09:58:09,369 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6769659316322001708.xml
2016-08-11 09:58:09,370 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6769659316322001708.xml
2016-08-11 09:58:09,371 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 09:58:09,372 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 09:58:09,372 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 09:58:09,372 INFO  utils.TestUtils    [] - filterName = qname
2016-08-11 09:58:09,374 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-11 09:58:09,375 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4451976863015138428.xml
2016-08-11 09:58:09,375 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6769659316322001708.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4451976863015138428.xml
2016-08-11 09:58:09,377 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 09:58:09,377 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 09:58:09,377 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 09:58:09,377 INFO  utils.TestUtils    [] - filterName = qname
2016-08-11 09:58:09,380 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-11 09:58:09,381 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8743366438768790556.xml
2016-08-11 09:58:09,381 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6769659316322001708.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4451976863015138428.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8743366438768790556.xml
2016-08-11 09:58:09,383 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 09:58:09,383 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 09:58:09,384 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 09:58:09,384 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-11 09:58:09,384 INFO  utils.TestUtils    [] - filterName = ip
2016-08-11 09:58:09,386 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-11 09:58:09,387 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5009444342344894095.xml
2016-08-11 09:58:09,387 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6769659316322001708.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4451976863015138428.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8743366438768790556.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5009444342344894095.xml
2016-08-11 09:58:09,388 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 09:58:09,389 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 09:58:09,389 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 09:58:09,392 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-11 09:58:09,393 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml
2016-08-11 09:58:09,393 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml
2016-08-11 09:58:09,396 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:09,397 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-11 09:58:09,397 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:09,397 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 09:58:09,398 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 09:58:09,398 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-11 09:58:09,398 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:09,398 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 09:58:09,399 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:09,399 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 09:58:09,399 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:09,400 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-11 09:58:09,400 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:09,400 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-11 09:58:09,400 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:09,401 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-11 09:58:09,401 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-11 09:58:09,443 INFO  encryption.Paillier  [] - Parameters = p = 883439541 q = -805309511 N = -1833168691 NSquared = -2110634967 lambdaN = 1272380872 bitLength = 201
2016-08-11 09:58:09,559 INFO  general.PaillierTest  [] - encM1 = -274875720 encM2 = -668595843
2016-08-11 09:58:09,561 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:58:09,567 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1392895659 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:58:09,895 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-11 09:58:10,231 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6769659316322001708.xml
2016-08-11 09:58:10,231 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6769659316322001708.xml
2016-08-11 09:58:10,233 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:10,233 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-11 09:58:10,234 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:10,234 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-11 09:58:10,234 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,235 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-11 09:58:10,235 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,235 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-11 09:58:10,235 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,236 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-11 09:58:10,236 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-11 09:58:10,281 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4451976863015138428.xml
2016-08-11 09:58:10,282 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4451976863015138428.xml
2016-08-11 09:58:10,284 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:10,285 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-11 09:58:10,285 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:10,291 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 09:58:10,292 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:10,295 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 09:58:10,296 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,297 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 09:58:10,298 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,298 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 09:58:10,299 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-11 09:58:10,364 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8743366438768790556.xml
2016-08-11 09:58:10,364 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8743366438768790556.xml
2016-08-11 09:58:10,367 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:10,368 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-11 09:58:10,369 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:10,369 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 09:58:10,369 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:10,369 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 09:58:10,370 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,370 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 09:58:10,370 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,371 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 09:58:10,371 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-11 09:58:10,372 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-11 09:58:10,408 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5009444342344894095.xml
2016-08-11 09:58:10,408 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5009444342344894095.xml
2016-08-11 09:58:10,414 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:10,414 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-11 09:58:10,415 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:10,415 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 09:58:10,415 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:10,415 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 09:58:10,416 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,416 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 09:58:10,417 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,417 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 09:58:10,417 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml
2016-08-11 09:58:10,418 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file5210121802991038201.xml
2016-08-11 09:58:10,419 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:10,420 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-11 09:58:10,420 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:10,420 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 09:58:10,420 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 09:58:10,420 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-11 09:58:10,421 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,421 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 09:58:10,421 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,421 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 09:58:10,421 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:10,422 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-11 09:58:10,422 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:10,422 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-11 09:58:10,422 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,422 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-11 09:58:10,423 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-11 09:58:10,450 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6769659316322001708.xml
2016-08-11 09:58:10,451 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file6769659316322001708.xml
2016-08-11 09:58:10,452 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:10,453 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-11 09:58:10,453 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:10,454 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-11 09:58:10,454 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,454 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-11 09:58:10,454 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,455 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-11 09:58:10,455 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,455 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-11 09:58:10,455 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-11 09:58:10,483 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4451976863015138428.xml
2016-08-11 09:58:10,483 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4451976863015138428.xml
2016-08-11 09:58:10,485 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:10,485 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-11 09:58:10,485 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:10,486 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 09:58:10,486 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:10,486 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 09:58:10,486 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,486 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 09:58:10,487 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,487 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 09:58:10,487 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-11 09:58:10,514 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8743366438768790556.xml
2016-08-11 09:58:10,515 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file8743366438768790556.xml
2016-08-11 09:58:10,517 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:10,517 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-11 09:58:10,518 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:10,518 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 09:58:10,518 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:10,519 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 09:58:10,519 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,519 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 09:58:10,519 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,520 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 09:58:10,520 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-11 09:58:10,520 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-11 09:58:10,551 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5009444342344894095.xml
2016-08-11 09:58:10,551 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5009444342344894095.xml
2016-08-11 09:58:10,553 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 09:58:10,554 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-11 09:58:10,554 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 09:58:10,554 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 09:58:10,554 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 09:58:10,555 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 09:58:10,555 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,555 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 09:58:10,555 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 09:58:10,556 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 09:58:10,566 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 09:58:10,569 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:10,574 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4635905568569365230.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3087550123056864079.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4795367091698184947.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7680532600063186422.txt
2016-08-11 09:58:10,578 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 09:58:10,580 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-11 09:58:10,698 INFO  encryption.Paillier  [] - Parameters = p = 1979462587 q = 1667994949 N = -2025928601 NSquared = 1355094385 lambdaN = -689209420 bitLength = 384
2016-08-11 09:58:10,699 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:11,793 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 09:58:11,794 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:12,139 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:12,358 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:12,359 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 09:58:12,372 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:12,377 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:12,383 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:12,399 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:12,404 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:12,409 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 09:58:12,417 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 09:58:12,424 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 09:58:12,436 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:12,436 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:12,449 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:12,450 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:12,664 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:12,664 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:12,676 INFO  utils.BaseTests    [] - results:
2016-08-11 09:58:12,677 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 09:58:12,677 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 09:58:12,677 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:12,678 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:12,678 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 09:58:12,678 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:12,679 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:12,679 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 09:58:12,680 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 09:58:12,680 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:12,681 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:12,681 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 09:58:12,682 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:12,682 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:12,682 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 09:58:12,683 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 09:58:12,683 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-11 09:58:12,685 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:12,687 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5805435824981051922.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3149066470241234144.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8416781425991412765.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1710728435585259655.txt
2016-08-11 09:58:12,687 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 09:58:12,709 INFO  encryption.Paillier  [] - Parameters = p = 739614033 q = -908027477 N = -1655341541 NSquared = 437032665 lambdaN = -743464048 bitLength = 384
2016-08-11 09:58:12,709 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:13,414 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 09:58:13,414 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:13,555 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:13,629 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:13,629 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-11 09:58:13,631 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-11 09:58:13,632 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-11 09:58:13,634 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-11 09:58:13,635 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-11 09:58:13,637 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-11 09:58:13,639 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-11 09:58:13,641 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 09:58:13,642 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-11 09:58:13,644 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:13,644 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:13,646 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:13,646 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:13,706 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:13,707 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:13,710 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:13,710 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-11 09:58:13,710 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-11 09:58:13,710 INFO  utils.BaseTests    [] - correctResults:
2016-08-11 09:58:13,711 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":05a79bd3-b7bd-4043-abee-88acefb388f3,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-11 09:58:13,711 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":05a79bd3-b7bd-4043-abee-88acefb388f3,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:13,711 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":05a79bd3-b7bd-4043-abee-88acefb388f3,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-11 09:58:13,711 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-11 09:58:13,712 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-11 09:58:13,712 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:13,713 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2914194581318462722.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1929629237562348863.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7221539167812352816.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6167617554536235787.txt
2016-08-11 09:58:13,713 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 09:58:13,724 INFO  encryption.Paillier  [] - Parameters = p = -1305711119 q = 1422928367 N = -588890881 NSquared = -256080383 lambdaN = 1794429584 bitLength = 384
2016-08-11 09:58:13,724 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:14,135 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 09:58:14,135 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:14,243 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:14,294 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:14,295 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-11 09:58:14,297 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 09:58:14,299 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-11 09:58:14,301 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-11 09:58:14,303 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 09:58:14,304 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 09:58:14,305 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-11 09:58:14,308 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-11 09:58:14,313 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-11 09:58:14,315 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:14,315 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:14,317 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:14,317 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:14,383 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:14,383 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:14,385 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:14,385 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:14,386 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:14,386 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-11 09:58:14,386 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-11 09:58:14,386 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-11 09:58:14,387 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-11 09:58:14,387 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-11 09:58:14,388 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:14,388 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier397341288919165691.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4148798789804818079.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2798182307888095741.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1122416454342328344.txt
2016-08-11 09:58:14,389 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 09:58:14,408 INFO  encryption.Paillier  [] - Parameters = p = 601271695 q = 747128727 N = 1975191641 NSquared = -1941197071 lambdaN = -1327190562 bitLength = 384
2016-08-11 09:58:14,409 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:14,861 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 09:58:14,861 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:14,996 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:15,054 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:15,054 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:15,057 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:15,058 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:15,062 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:15,062 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:15,125 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:15,125 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:15,126 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-11 09:58:15,126 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-11 09:58:15,126 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 09:58:15,126 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:15,127 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6168575566277956494.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4811888433442076646.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3385939413563404592.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8265439479611899248.txt
2016-08-11 09:58:15,127 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 09:58:15,140 INFO  encryption.Paillier  [] - Parameters = p = 1364566237 q = 539384285 N = 2091299785 NSquared = 1592701905 lambdaN = -2100646332 bitLength = 384
2016-08-11 09:58:15,140 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:15,848 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 09:58:15,848 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:15,974 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:16,024 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:16,024 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 09:58:16,026 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:16,028 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:16,030 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:16,031 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:16,033 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:16,034 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 09:58:16,039 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 09:58:16,042 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 09:58:16,043 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:16,044 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:16,046 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:16,047 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:16,138 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:16,138 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:16,140 INFO  utils.BaseTests    [] - results:
2016-08-11 09:58:16,140 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 09:58:16,140 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 09:58:16,140 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:16,141 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:16,141 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 09:58:16,141 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:16,141 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:16,141 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 09:58:16,142 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 09:58:16,142 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:16,142 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:16,142 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 09:58:16,143 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:16,143 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:16,148 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 09:58:16,149 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 09:58:16,149 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 09:58:16,149 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:16,150 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1185624314972177177.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2732282776498378105.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3180930441478505837.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile504694227198439560.txt
2016-08-11 09:58:16,151 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 09:58:16,163 INFO  encryption.Paillier  [] - Parameters = p = -1268477689 q = 512756869 N = -721703773 NSquared = -200446007 lambdaN = 17008524 bitLength = 384
2016-08-11 09:58:16,163 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:16,216 INFO  encryption.Paillier  [] - Parameters = p = -1053978801 q = -1517884187 N = -1137179221 NSquared = -1561321415 lambdaN = 717341884 bitLength = 3072
2016-08-11 09:58:16,359 INFO  general.PaillierTest  [] - encM1 = -1131131741 encM2 = -1712456457
2016-08-11 09:58:16,486 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:58:16,551 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1591650869 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:58:16,936 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 09:58:16,936 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:17,063 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:17,121 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:17,121 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 09:58:17,123 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:17,125 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:17,128 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:17,130 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:17,131 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:17,133 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 09:58:17,135 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 09:58:17,137 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 09:58:17,139 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:17,139 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:17,143 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:17,143 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:17,234 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:17,235 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:17,236 INFO  utils.BaseTests    [] - results:
2016-08-11 09:58:17,237 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 09:58:17,237 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 09:58:17,237 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:17,237 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:17,238 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 09:58:17,238 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:17,238 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:17,238 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 09:58:17,239 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 09:58:17,239 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:17,239 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:17,239 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 09:58:17,239 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:17,240 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:17,240 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 09:58:17,240 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 09:58:17,241 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 09:58:17,241 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:17,241 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier3400618241617120204.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query6395641079917213135.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1298644459834931847.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6632518296018640473.txt
2016-08-11 09:58:17,242 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 09:58:17,261 INFO  encryption.Paillier  [] - Parameters = p = 2005886101 q = 1582084003 N = -1203051041 NSquared = 1129625665 lambdaN = 1899456724 bitLength = 384
2016-08-11 09:58:17,261 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:17,950 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 09:58:17,950 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:18,061 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:18,113 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:18,114 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 09:58:18,115 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:18,117 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:18,119 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:18,120 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:18,122 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:18,123 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 09:58:18,125 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 09:58:18,127 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 09:58:18,128 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:18,129 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:18,132 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:18,132 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:18,221 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:18,221 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:18,222 INFO  utils.BaseTests    [] - results:
2016-08-11 09:58:18,223 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 09:58:18,223 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 09:58:18,223 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:18,223 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:18,223 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 09:58:18,223 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:18,223 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:18,224 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 09:58:18,224 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 09:58:18,224 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:18,224 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:18,224 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 09:58:18,224 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:18,225 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:18,225 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 09:58:18,225 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 09:58:18,225 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 09:58:18,225 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:18,226 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6412366869626962107.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7539984066388730063.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3815804478300897377.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5611169911129164008.txt
2016-08-11 09:58:18,226 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-11 09:58:18,234 INFO  encryption.Paillier  [] - Parameters = p = -1780174381 q = -1797707487 N = -1429162189 NSquared = -235277271 lambdaN = 1074359840 bitLength = 384
2016-08-11 09:58:18,234 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:19,068 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 09:58:19,069 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:19,255 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:19,339 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:19,340 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 09:58:19,342 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:19,345 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:19,347 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:19,349 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:19,351 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:19,353 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 09:58:19,364 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 09:58:19,368 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 09:58:19,372 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:19,372 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:19,376 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:19,376 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:19,516 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:19,517 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:19,518 INFO  utils.BaseTests    [] - results:
2016-08-11 09:58:19,519 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 09:58:19,519 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-11 09:58:19,520 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:19,520 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:19,520 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 09:58:19,524 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:19,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:19,525 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 09:58:19,530 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 09:58:19,532 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:19,533 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:19,533 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 09:58:19,533 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:19,533 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:19,534 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-11 09:58:19,535 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 09:58:19,538 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-11 09:58:19,538 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:19,539 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2224493594710883668.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5495160000006246622.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3587717182332950316.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7082397502245562879.txt
2016-08-11 09:58:19,539 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-11 09:58:19,574 INFO  encryption.Paillier  [] - Parameters = p = 1183743955 q = 1259725629 N = 2023460423 NSquared = 688707505 lambdaN = -1501657292 bitLength = 384
2016-08-11 09:58:19,574 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:20,152 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 09:58:20,153 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:20,264 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:20,315 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:20,315 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-11 09:58:20,316 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-11 09:58:20,317 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-11 09:58:20,318 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-11 09:58:20,319 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-11 09:58:20,320 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-11 09:58:20,321 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-11 09:58:20,322 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 09:58:20,324 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-11 09:58:20,327 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:20,327 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:20,329 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:20,329 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:20,390 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:20,390 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:20,391 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:20,391 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-11 09:58:20,391 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-11 09:58:20,392 INFO  utils.BaseTests    [] - correctResults:
2016-08-11 09:58:20,392 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":05a79bd3-b7bd-4043-abee-88acefb388f3,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-11 09:58:20,392 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":05a79bd3-b7bd-4043-abee-88acefb388f3,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:20,392 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":05a79bd3-b7bd-4043-abee-88acefb388f3,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-11 09:58:20,392 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-11 09:58:20,392 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-11 09:58:20,393 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:20,393 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5897907296947907507.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7208981790296617234.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse718177948271559085.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7962897810947835266.txt
2016-08-11 09:58:20,393 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-11 09:58:20,409 INFO  encryption.Paillier  [] - Parameters = p = -626951635 q = -547910387 N = -1027015351 NSquared = 1621712593 lambdaN = -2110521980 bitLength = 384
2016-08-11 09:58:20,410 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:20,821 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 09:58:20,821 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:20,943 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:20,994 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:20,994 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-11 09:58:20,995 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 09:58:20,996 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-11 09:58:20,997 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-11 09:58:20,998 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 09:58:20,998 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-11 09:58:20,999 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-11 09:58:21,000 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-11 09:58:21,001 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-11 09:58:21,002 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:21,002 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:21,003 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:21,003 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:21,063 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:21,063 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:21,064 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:21,064 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:21,064 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-11 09:58:21,064 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-11 09:58:21,065 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-11 09:58:21,065 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-11 09:58:21,065 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-11 09:58:21,065 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-11 09:58:21,066 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:21,066 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier9095038783611895771.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8798049822753309189.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6483154220130060307.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3356174310118452165.txt
2016-08-11 09:58:21,066 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-11 09:58:21,078 INFO  encryption.Paillier  [] - Parameters = p = 867533087 q = 368369165 N = -1564708717 NSquared = -1788283799 lambdaN = 249059388 bitLength = 384
2016-08-11 09:58:21,078 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:21,470 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-11 09:58:21,470 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:21,577 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:21,627 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:21,628 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:21,631 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:21,632 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:21,632 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:21,633 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:21,685 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:21,685 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:21,686 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-11 09:58:21,686 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-11 09:58:21,686 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-11 09:58:21,686 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-11 09:58:21,686 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1989003380101780593.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4263561720558918462.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7103967743513623696.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6358509228570110220.txt
2016-08-11 09:58:21,687 INFO  wideskies.QueryInfo  [] - identifier = 05a79bd3-b7bd-4043-abee-88acefb388f3 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-11 09:58:21,702 INFO  encryption.Paillier  [] - Parameters = p = 1783453539 q = -1078985687 N = -1038781733 NSquared = -143276199 lambdaN = 1141114168 bitLength = 384
2016-08-11 09:58:21,702 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-11 09:58:22,379 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-11 09:58:22,380 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-11 09:58:22,380 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-11 09:58:22,486 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-11 09:58:22,536 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-11 09:58:22,536 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-11 09:58:22,538 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:22,539 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:22,541 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:22,542 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:22,544 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-11 09:58:22,546 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-11 09:58:22,549 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-11 09:58:22,551 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-11 09:58:22,555 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-11 09:58:22,555 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-11 09:58:22,560 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-11 09:58:22,560 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-11 09:58:22,643 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-11 09:58:22,643 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-11 09:58:22,645 INFO  utils.BaseTests    [] - results:
2016-08-11 09:58:22,645 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-11 09:58:22,645 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:22,645 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:22,645 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-11 09:58:22,646 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:22,646 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-11 09:58:22,646 INFO  utils.BaseTests    [] - correctResults: 
2016-08-11 09:58:22,646 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-11 09:58:22,646 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:22,646 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:22,647 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-11 09:58:22,647 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:22,647 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"05a79bd3-b7bd-4043-abee-88acefb388f3","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-11 09:58:22,648 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-11 09:58:34,576 INFO  encryption.Paillier  [] - Parameters = p = 2130747021 q = -1571650931 N = 1191505321 NSquared = 132798865 lambdaN = -915639516 bitLength = 6885
2016-08-11 09:58:35,885 INFO  general.PaillierTest  [] - encM1 = 152156801 encM2 = 11184049
2016-08-11 09:58:37,133 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:58:37,758 INFO  general.PaillierTest  [] - encM1_times_encM2 = 426025956 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:58:37,758 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-11 09:58:37,758 INFO  general.PaillierTest  [] - i = 0
2016-08-11 09:58:37,764 INFO  encryption.Paillier  [] - testBit true
 N = 10100101011100101010011010100000000100010000001111011001110010110000001000111111001100101000011010010110010001000011110010000100111011110001111001111110011101001000101010100110011010111100001011101001
2016-08-11 09:58:37,764 INFO  encryption.Paillier  [] - Parameters = p = -1741984315 q = 1872271061 N = -1502887191 NSquared = -1356072943 lambdaN = 665448340 bitLength = 201
2016-08-11 09:58:37,764 INFO  general.PaillierTest  [] - encM1 = -2059594412 encM2 = -2126492183
2016-08-11 09:58:37,765 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:58:37,765 INFO  general.PaillierTest  [] - encM1_times_encM2 = -886572908 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:58:38,887 INFO  encryption.Paillier  [] - testBit true

2016-08-11 09:58:38,890 INFO  encryption.Paillier  [] - Parameters = p = 1035610829 q = -1895484899 N = -1284250823 NSquared = -1528552783 lambdaN = 598410444 bitLength = 3072
2016-08-11 09:58:39,006 INFO  general.PaillierTest  [] - encM1 = 97779068 encM2 = -769804663
2016-08-11 09:58:39,121 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:58:39,179 INFO  general.PaillierTest  [] - encM1_times_encM2 = -483109160 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:58:46,542 INFO  encryption.Paillier  [] - testBit true

2016-08-11 09:58:46,548 INFO  encryption.Paillier  [] - Parameters = p = -2127488015 q = -327078655 N = 1670084849 NSquared = -187116831 lambdaN = 1774984960 bitLength = 5482
2016-08-11 09:58:47,224 INFO  general.PaillierTest  [] - encM1 = -738619031 encM2 = 128406424
2016-08-11 09:58:47,860 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:58:48,179 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1782270547 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:58:48,179 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-11 09:58:48,179 INFO  general.PaillierTest  [] - i = 0
2016-08-11 09:58:48,182 INFO  encryption.Paillier  [] - Parameters = p = 534105157 q = -2121868959 N = -79240411 NSquared = -1882807463 lambdaN = -696610976 bitLength = 201
2016-08-11 09:58:48,182 INFO  general.PaillierTest  [] - encM1 = -562325021 encM2 = 1536594907
2016-08-11 09:58:48,183 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:58:48,183 INFO  general.PaillierTest  [] - encM1_times_encM2 = -765329113 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:58:49,417 INFO  encryption.Paillier  [] - Parameters = p = 831414395 q = 477407041 N = -1580024773 NSquared = -1858947687 lambdaN = -1147878080 bitLength = 3072
2016-08-11 09:58:49,530 INFO  general.PaillierTest  [] - encM1 = -1393398671 encM2 = -1145540175
2016-08-11 09:58:49,647 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:58:49,709 INFO  general.PaillierTest  [] - encM1_times_encM2 = -561663541 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:58:59,815 INFO  encryption.Paillier  [] - Parameters = p = 236277731 q = -1307551703 N = 1762644827 NSquared = 422126169 lambdaN = -730524248 bitLength = 5297
2016-08-11 09:59:00,429 INFO  general.PaillierTest  [] - encM1 = -1018775351 encM2 = -1440774474
2016-08-11 09:59:01,052 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:59:01,332 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2056532306 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:59:01,333 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-11 09:59:01,333 INFO  general.PaillierTest  [] - i = 0
2016-08-11 09:59:01,337 INFO  encryption.Paillier  [] - testBit false
 N = 11010111011000010001111110001100011011010110101000010001111100101000100110010011011001011000000010111110011010011111001100010100011111111000000000110111010010101101100101100001001111001010111010000001
2016-08-11 09:59:01,340 INFO  encryption.Paillier  [] - testBit true
 N = 10110011110011101111100101011100101011010000001100100110111110110110110110010111000001100010111011111010110111010101011010101011111110110000101001001100011010000101001001010101110100101000111111110111
2016-08-11 09:59:01,341 INFO  encryption.Paillier  [] - Parameters = p = 337577427 q = 529253069 N = 1439862775 NSquared = -2009997231 lambdaN = 95505380 bitLength = 201
2016-08-11 09:59:01,341 INFO  general.PaillierTest  [] - encM1 = -488908232 encM2 = -41825533
2016-08-11 09:59:01,342 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:59:01,342 INFO  general.PaillierTest  [] - encM1_times_encM2 = -733471399 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:59:02,338 INFO  encryption.Paillier  [] - testBit true

2016-08-11 09:59:02,340 INFO  encryption.Paillier  [] - Parameters = p = 1074276143 q = -2026770861 N = -1609472451 NSquared = -51467639 lambdaN = 606331594 bitLength = 3072
2016-08-11 09:59:02,458 INFO  general.PaillierTest  [] - encM1 = 718659851 encM2 = 1356373287
2016-08-11 09:59:02,574 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 09:59:02,633 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2002977248 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 09:59:12,501 INFO  encryption.Paillier  [] - testBit false
 N = 11000001010011000010111111110111000001000001110110110111101110110110111011010111010101001110001110000100000101011100110000010100111001011100100011111001011001101000100101000010100101110111011000010100010000100100011100111010100010101011011110011111101010110011100010101111010011100001010101000101101100110011110100111101111000111000011001011110010001110101111001010010000010010001011000001010000110011001011010110011001001010011110001011010011110110010100011000010000001110011110111110100100010010111001111100100001010010000110000111101000111110101000011011011011111010010000000001110101111110001100101100011001011100011101010100001100110101101011011011010110001110111100101111110110011111011110110000010100000110100101010100000000110110010101010111100100111100001110000100100100001110011100111110111110110110010101011000001010001100010001111110000111101010001011110111000011011001010001001101111110111001000111100011000010111011010101011100010001110111000101000001000011111110100100010110111001011001110000001101111111001010011001001011010010100001110001001111010001001101111101000101011010010110101100110010100101101110111101000110011101001110110110110111101110001011111011001110110111110000010110001011011101101101101111011110101001100110100101010011011010001010000111011010110111110011100000010011111101010010011001011000010111110100000000101110111111011100000101011000000001111010100010111110110000110010100010000110010000101100011101101100111110001110000011110100110000010101100011101000100000001011111101101110110010111110000100010010101010000011110001111111011001111010101100010000010110011010111100011110101011110100001010001011011111101000000010001010110110011000001101110101001000001111010001010011010010001111101000011011011101000101111100100000000001010011010100000011000100110100000010100010110010010111000110011111110101000101100101100110010101001000011001101011110001110100011111010101100111101111101000011110101110001111110001110101011111110111001000100110011000101000011101100111011110000111100010100101110000110011011000010111101001011101100100101110001110101101001000010000001001100101101001100010100111111010011100100000000110000111110001000001111110011110010100101001100100111100001100010111010000100101011110011010000000100000001000010000110001001001111101010110010111110101110101100000011001010110100010011101100101100000010010010110111001111110100101001101001001100011000001001001011110111100001100011110111001010111010101000101100110110010010111101110010100110110000110000111101101101101001011110100100010010111110111011011000101110110110000010110011100011010001110101100000010110110011100011111100110100110000000000110100000000001100010100001011010100110111101110101110001011110010011001111111111111101100100010110101001001010101001000101000110101100001001100111110101100011000110011010000110010101011110001111010000010001011010001101111110101000000000010110111111000010010111001001101100101001001010001111101000010001001000110001110011110111010101110011111111100000000010101101111100110011110111001101101000001011110100101011101110001010110110100101101111011011000010001000011010100101010101110000011110010001110100101100111001100001101011111110111111010111101100111100111110111110100111001000011011101001111101111101101101110100110111100000000111111010000100101100000011001100110111110011111001010101110011100000000101101001010001011001111000010111011011101000111011110101100001000100111101010010001111010101001001100100000101100011011001101101111100000010001100110100100101011010000110000011100000011010101110010010001000110101111011101011111110001001000110100111000111001100100110110110001011000011000001000100001011100010111010001111000011100000111011001101101101001011001001110011111011001101010000011110101111001010000101110001001011010010111001111111111110100011001001111000101110110101001010101010011110000100100100101010011111011100100000101100000110101011011000100001111110010011100111111011100111101101100001110011101111000010111101100011001011011000101001011011010000101110100111111000011011010101001000010011011101000001000010111001000101101001011111010111000001001101010011110101000000110101011000000010001110100111010110111000011001101011011110100101000000111001010101011000001110011011000010000010011111011101011000101100110000100101111100101110110000111100100010101010111000111011011101101110111010010000010001111011100101101000010011010010101111100100011011101011011101111101011011111110001101100000101111011000100011011110101010101110010101100100000010101110010100110000010111111001101011100010101000001101000001101101000000101101010101011111101001010101010111111011001101111101110110111011001111100110111001100111010011011000111100001101110100100110110000110110101101101010001111100111011001110110011011100000011000111000000011001000100001101100001011100010000001110011011000100111010011111100110001110001111
2016-08-11 09:59:31,266 INFO  encryption.Paillier  [] - testBit false

2016-08-11 09:59:43,573 INFO  encryption.Paillier  [] - testBit false

2016-08-11 09:59:47,595 INFO  encryption.Paillier  [] - testBit false
 N = 10110101111010111100111010011111100100011010000100001111111100101011111101100100001000010010010000111101001111011100100001000011110110100000001111000111001111110010100000101111101100000111111101010100110110001010100101110110011110010010011110010001000111101010011111000000011110100111100100111001101010000101001001010101101001010000111100101011101100010111100001010110000111101001001011101100010101001010011100010111010000101101110011010111101000011111011101000101101100110011001011111100100101011011100011101011100001011111101111110110110111111100011011001010101011000011010101010001100001101011000100011100110000000000100000010101111011101111000110110111000111001001101111101001100101101111100010110000011010100011011110101010011000011000001011100010100010010011101110000011100001000001111011101000100111010001010010111100111001100001100001010101010110110001001101011110100100000100100100001010001110011011011000000100111101010000111110111000111101010011011011010001011010000110010001101101110011010000001011111101001100011111110110000101111110011011111010110111010101100011001000010110110101111011111100001111101100001100101010111100101000001000001011011100101100010011100101011000010010100101111101000001010011010011000001000010100001001001001010111101101001110011011001001001010010011001000011000010111011010100010001100110100010100001011011101100010001000110100100001111001001111100111110001111101110000001000111111010101100100101001100100110010100010110101111011101011110110011000011011101100111011010010110111100001000011001000101111000000100001010010011000000110111111010000111010100110010010011100110010000011010001001001000001101000000111000001100100100100010010011110100001110100101010110011001101101000101101001010111001110001001100101100011010101101010111001110000000100100011111011000000111110111101101100101001101110111101101010111110010001100000110111010010011001001101001000101110001001101001100001101001001001101011110100100100010001100001100011111001001100001011110111101011000000100111010100001101001000010010110100011110001010111110010011010000010111101000101011010010111001001100001010100110011001110011010100110111000010101100101111110111101100001010100001011001100011110000100011110010101111001101001000110101010111000111110111001010010010110110111000110011100100001011010011100111010100100100010111010001101110111000001001000100000111101101110001111001000011000000011110010011010010010011111100111001010110011011010001100010110110101010100101100101011010100110000101101000111101011110111001111001011001111100000001101100100110100011011100011001001010111101100010011001101100110100110000111011001011001110001010010100010100110100111011010010011101101110001010111010011011001110101001001011000011101100101110000100010100000111011100100011110010101110001000110011101010000110101100101010101001000111111001010110001000011110011001111010100000001101100111011100111001100011000011100001110101001110010011001010101101101101110101110110100000011011111111100010111010010100110101000011011110111111010100010100101010111011111100011011110110010110001101110000111011000011111101100010111111101001011111100101110011001000100110000110101010011101000110010100000001000110001000001011101100100010110011111110100100101011101101111111100101011111010001110011011100010111010010100010000011000100110001101111001111011001110010100011101111001011101010100010011101000100110011000101001000100100101011010010000101001001011010101011000110111011011011000011111110101001011001101111001100011000011110001001011101110110010100000100010110000110011110100010110100101001000000011101011011010011001110101101111010111010001111100000011101011111110010101100011111110001100110101000011000001111001010101001000001001010100011100001001000011100011000101100110011000110010001011000010110001000101001111010000000110111010101011100100100010100100001001100110100101100000011000111010111110111100000000111001110110111100001000110011010001100000010100000111001110111101100000111000101100001011010110010100000111011100100011100010011100000101000101010001110001110110010000111101110000010000001001011011011011000001110011100001111100001111101100000000001000011001100001111101010101101001010011110100100001111001010011010001010111011110011011110110110011111000110111100100101101011000001110011100110101000010101001100111000010000100000111110000011101010011110001111101111101100110110110101011111111100110111010110101011001010100111010101100101110001100010011001010011101110000001010100000001101000000011110110011110111011101101111100011100100010010000010001000000100110101000000110111100011110100100100001001100110000001100110110111011110100100111010111100010111101011010010110101100000000001100101110011111110011100100111000011111110111000111101011101100110111110110110010111100111100011100101110001110011011111000110100000011010111000010101010010011010101100001011010010001
2016-08-11 09:59:52,211 INFO  encryption.Paillier  [] - testBit false

2016-08-11 10:00:09,348 INFO  encryption.Paillier  [] - testBit true

2016-08-11 10:00:09,352 INFO  encryption.Paillier  [] - Parameters = p = 904422527 q = 1942248787 N = -451495891 NSquared = -1371752471 lambdaN = 498400046 bitLength = 4856
2016-08-11 10:00:09,802 INFO  general.PaillierTest  [] - encM1 = 539737755 encM2 = -1673313965
2016-08-11 10:00:10,242 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:00:10,472 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2005902931 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:00:10,472 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-11 10:00:10,472 INFO  general.PaillierTest  [] - i = 0
2016-08-11 10:00:10,476 INFO  encryption.Paillier  [] - Parameters = p = 244651927 q = 1706059961 N = -433888225 NSquared = 1000487873 lambdaN = -1192300056 bitLength = 201
2016-08-11 10:00:10,477 INFO  general.PaillierTest  [] - encM1 = -765118740 encM2 = -363913425
2016-08-11 10:00:10,477 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:00:10,477 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1796765162 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:00:14,853 INFO  encryption.Paillier  [] - Parameters = p = -1712242579 q = 160943657 N = -1631189131 NSquared = -181167239 lambdaN = 1053769272 bitLength = 3072
2016-08-11 10:00:14,967 INFO  general.PaillierTest  [] - encM1 = 175891114 encM2 = 986991473
2016-08-11 10:00:15,080 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:00:15,136 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1169029121 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:00:27,144 INFO  encryption.Paillier  [] - Parameters = p = 1493010839 q = 2084024673 N = -1214019273 NSquared = -1483347503 lambdaN = -248043744 bitLength = 4648
2016-08-11 10:00:27,539 INFO  general.PaillierTest  [] - encM1 = 492615931 encM2 = 805982845
2016-08-11 10:00:27,941 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:00:28,139 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1315281462 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:00:28,139 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-11 10:00:28,139 INFO  general.PaillierTest  [] - i = 0
2016-08-11 10:00:28,141 INFO  encryption.Paillier  [] - testBit true
 N = 10110000010001010011001011000100010100110010001110001110101100100111011110001011100011000100101111111100010000010110011000010110011100100111110010110101011100010111010101111100011110011011111000100011
2016-08-11 10:00:28,141 INFO  encryption.Paillier  [] - Parameters = p = 50311693 q = 1918866671 N = 2088353315 NSquared = 843970761 lambdaN = -2087896172 bitLength = 201
2016-08-11 10:00:28,142 INFO  general.PaillierTest  [] - encM1 = 790653698 encM2 = -1871806252
2016-08-11 10:00:28,142 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:00:28,142 INFO  general.PaillierTest  [] - encM1_times_encM2 = -249315862 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:00:28,728 INFO  encryption.Paillier  [] - testBit false

2016-08-11 10:00:29,114 INFO  encryption.Paillier  [] - testBit false

2016-08-11 10:00:30,878 INFO  encryption.Paillier  [] - testBit false

2016-08-11 10:00:33,632 INFO  encryption.Paillier  [] - testBit false
 N = 101110100110000110111000110101101001011100110000000011111001110011101101011011110111010010000111100111000010001100111111011100001101100100110001100001011110000100010110100111011000011100101111101011000110110111001010010111001101100100010101000101001001110000101000110100011101011101001001001010000010100111100100101001100000000010110011110000110000101101001010010101100001111000000101110010100101110111110111111101110011100001101001001010011011101101001001111101110010110100101100000110000111000000110101101001011101011001110100011000110100000111101111011011000111011100000011101110011001010101110111100100011111001000011010100100010011000111000010011110010101101100000111111001111000010011010000010101000111000000111011111001110000001000101000110110111111100110000001100101111110000101000100100100010100111010111111110110111010110110100000010001101110100001110100111001101110010000110001101000100011100110000000101010001000011100010110011100000111111001101011101101111100001101100100100111110010001100000100000000011001011011000001000110001101111110000111101110001100011011100000110101011101110110001100000110010010110000111101000010011001100100111011000101100000110111001010010001111101010101111101011111101010011100100001110101101000111011101110010101010000110111010000001011011011000111111011101111110000000111111000111011001001101000110000100101010110111101110111101110010010010110100111110001110010101110011111111101110100110101011111100111010111110001110111101010000110000110011001110110010011101111001101011100100001100110100100001111100010101101111100100010010111000100000100100001011110101101000111111111101001100001011100000001110111101101100001100011001100111011000100000011001000100100101101000010101111000110110001000100100010001101111010110011110101000001100001010000110001011001101100110111101100111011011111101000000100110001010010101001110010010111110010111110010100111101000110011000100110010111100101010101111100101000111111000110001110100101010010100101111101110000010001111100110111111111001011010111110111010001010010101001011101100001111100101011010111101000101011011010000101001001000110101111100101101010110011001100010000100001101100100001101010101001001101011110100010000100011001110011010110010100001011001110111011001011111100111010100010000101010111100010110111001100010100111100000111101100101001111010110101100111010010000101100101110110100111101110001111010000010000010100111111111011010011001010101100011101110001110000000010101100000100011001111101101011111001010100011101010001111110111110100111010100111010001100101000001011100000001000001000010110111011111001100000000011100111100011010101010101001111001010110011100011101001000010100011000110010011111110000001100011100101011101111001110101001101001001111010110111111011110111110000001010111011100010010011001100000111100110110000011010101001010011100100100111100010101010000110101100110100100010000110010100111011100001111101010101011111000001010101001110101101010111010110001010010101010101000010110100111101101100010011010000010000101101110000101100101011010000000111001110000001
2016-08-11 10:00:37,352 INFO  encryption.Paillier  [] - testBit false

2016-08-11 10:00:41,420 INFO  encryption.Paillier  [] - testBit false

2016-08-11 10:00:41,706 INFO  encryption.Paillier  [] - testBit true

2016-08-11 10:00:41,708 INFO  encryption.Paillier  [] - Parameters = p = -1261373445 q = 1516847681 N = -1125077829 NSquared = -81014631 lambdaN = 1457207616 bitLength = 3072
2016-08-11 10:00:41,826 INFO  general.PaillierTest  [] - encM1 = 505847012 encM2 = 512923688
2016-08-11 10:00:41,942 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:00:41,997 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1898317744 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:00:43,839 INFO  encryption.Paillier  [] - testBit false

2016-08-11 10:00:45,265 INFO  encryption.Paillier  [] - testBit false

2016-08-11 10:00:47,162 INFO  encryption.Paillier  [] - testBit false

2016-08-11 10:00:49,941 INFO  encryption.Paillier  [] - testBit true

2016-08-11 10:00:49,944 INFO  encryption.Paillier  [] - Parameters = p = 564380137 q = 940775939 N = 1659367355 NSquared = -1342655847 lambdaN = -2070378008 bitLength = 3464
2016-08-11 10:00:50,114 INFO  general.PaillierTest  [] - encM1 = -1378013409 encM2 = 313553714
2016-08-11 10:00:50,282 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:00:50,367 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1820522775 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:00:50,368 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-11 10:00:50,368 INFO  general.PaillierTest  [] - i = 0
2016-08-11 10:00:50,369 INFO  encryption.Paillier  [] - Parameters = p = -1166351595 q = 409848389 N = -499202391 NSquared = 939907985 lambdaN = -1009416620 bitLength = 201
2016-08-11 10:00:50,370 INFO  general.PaillierTest  [] - encM1 = 16518328 encM2 = -552306188
2016-08-11 10:00:50,370 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:00:50,371 INFO  general.PaillierTest  [] - encM1_times_encM2 = -354063813 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:00:52,498 INFO  encryption.Paillier  [] - Parameters = p = 1683258251 q = -1730104351 N = -498940373 NSquared = -1282241735 lambdaN = 1921436512 bitLength = 3072
2016-08-11 10:00:52,615 INFO  general.PaillierTest  [] - encM1 = 1432005564 encM2 = 929654481
2016-08-11 10:00:52,731 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:00:52,790 INFO  general.PaillierTest  [] - encM1_times_encM2 = -247502190 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:01:01,051 INFO  encryption.Paillier  [] - Parameters = p = 262889637 q = -589625699 N = 428155697 NSquared = 666922849 lambdaN = 188722940 bitLength = 4382
2016-08-11 10:01:01,372 INFO  general.PaillierTest  [] - encM1 = -640564395 encM2 = -1017056059
2016-08-11 10:01:01,683 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:01:01,844 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1435248224 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:01:01,844 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-11 10:01:01,844 INFO  general.PaillierTest  [] - i = 0
2016-08-11 10:01:01,848 INFO  encryption.Paillier  [] - testBit false
 N = 10111101000010100111000110101000100010111011100011111110111000110110001001001111000011011111000110000110011000000010100011000100010101101000001110000010100111010000010010001100101101100001010011000001
2016-08-11 10:01:01,852 INFO  encryption.Paillier  [] - testBit false
 N = 11001000101110011001101000000110010001010010110110100101110101101110111101000110101100110101101010001010010101011111000100101001110010011001101001100110111011100101010011001111101100111110100100011101
2016-08-11 10:01:01,854 INFO  encryption.Paillier  [] - testBit true
 N = 11011110111110000000100111101111010000101011101100111111111100010001111110111010000001101101011110010110000010010101010110011100110100001010111111010001110101000100110010001101001110101011111010100101
2016-08-11 10:01:01,854 INFO  encryption.Paillier  [] - Parameters = p = -1794236611 q = 1802277769 N = -1925529947 NSquared = -1296214439 lambdaN = -876958808 bitLength = 201
2016-08-11 10:01:01,855 INFO  general.PaillierTest  [] - encM1 = 1318386930 encM2 = -261268177
2016-08-11 10:01:01,855 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:01:01,855 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1855562421 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:01:03,215 INFO  encryption.Paillier  [] - testBit true

2016-08-11 10:01:03,217 INFO  encryption.Paillier  [] - Parameters = p = -1841135149 q = -360962985 N = -821048651 NSquared = 397943801 lambdaN = -1456958906 bitLength = 3072
2016-08-11 10:01:03,330 INFO  general.PaillierTest  [] - encM1 = 1422631787 encM2 = 303297316
2016-08-11 10:01:03,442 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:01:03,499 INFO  general.PaillierTest  [] - encM1_times_encM2 = 158772844 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:01:16,126 INFO  encryption.Paillier  [] - testBit true

2016-08-11 10:01:16,132 INFO  encryption.Paillier  [] - Parameters = p = -542027665 q = 623124597 N = -1061969221 NSquared = 2029204633 lambdaN = 1575950572 bitLength = 6164
2016-08-11 10:01:16,998 INFO  general.PaillierTest  [] - encM1 = 1849926007 encM2 = 1121493505
2016-08-11 10:01:17,882 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:01:18,321 INFO  general.PaillierTest  [] - encM1_times_encM2 = -2099498797 multDecrypt = 7 m1_plus_m2 = 7
2016-08-11 10:01:18,322 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-11 10:01:18,323 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-11 10:01:18,323 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-11 10:01:18,323 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-11 10:01:18,332 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-11 10:01:18,336 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-11 10:01:18,337 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-11 10:01:18,338 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-11 10:01:18,338 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-11 10:01:18,338 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-11 10:01:18,339 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-11 10:01:18,339 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-11 10:01:18,341 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-11 10:01:18,343 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-11 10:01:18,343 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-11 10:01:18,346 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-11 10:01:18,346 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-11 10:01:18,347 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-11 10:01:18,348 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-11 10:01:18,348 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-11 10:01:18,355 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4523044593909362438.xml
2016-08-11 10:01:18,395 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-11 10:01:18,396 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4523044593909362438.xml hdfs = false
2016-08-11 10:01:18,396 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4523044593909362438.xml
2016-08-11 10:01:18,398 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,399 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-11 10:01:18,400 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 10:01:18,400 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,400 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,401 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,401 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,401 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,401 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,401 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4523044593909362438.xml hdfs = false
2016-08-11 10:01:18,401 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile4523044593909362438.xml
2016-08-11 10:01:18,404 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,404 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-11 10:01:18,404 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 10:01:18,404 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,405 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,405 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,405 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,405 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,405 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,406 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-11 10:01:18,406 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml
2016-08-11 10:01:18,406 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml
2016-08-11 10:01:18,407 INFO  utils.TestUtils    [] - elementName = date
2016-08-11 10:01:18,407 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 10:01:18,407 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 10:01:18,408 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-11 10:01:18,408 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-11 10:01:18,408 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 10:01:18,409 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-11 10:01:18,410 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4967890851462260103.xml
2016-08-11 10:01:18,410 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4967890851462260103.xml
2016-08-11 10:01:18,411 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 10:01:18,411 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 10:01:18,411 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 10:01:18,412 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-11 10:01:18,413 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2945128306331646703.xml
2016-08-11 10:01:18,413 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4967890851462260103.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2945128306331646703.xml
2016-08-11 10:01:18,414 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 10:01:18,414 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-11 10:01:18,414 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 10:01:18,415 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-11 10:01:18,416 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1885958886433831503.xml
2016-08-11 10:01:18,416 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4967890851462260103.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2945128306331646703.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1885958886433831503.xml
2016-08-11 10:01:18,417 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 10:01:18,417 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 10:01:18,417 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 10:01:18,419 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-11 10:01:18,419 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6452512851287576582.xml
2016-08-11 10:01:18,419 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4967890851462260103.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2945128306331646703.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1885958886433831503.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6452512851287576582.xml
2016-08-11 10:01:18,420 INFO  utils.TestUtils    [] - elementName = qname
2016-08-11 10:01:18,421 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-11 10:01:18,421 INFO  utils.TestUtils    [] - elementName = ip
2016-08-11 10:01:18,424 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-11 10:01:18,424 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml
2016-08-11 10:01:18,425 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml
2016-08-11 10:01:18,426 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,427 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-11 10:01:18,427 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,427 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 10:01:18,427 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 10:01:18,428 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-11 10:01:18,428 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,428 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 10:01:18,428 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,428 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 10:01:18,428 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,429 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-11 10:01:18,429 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,429 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-11 10:01:18,429 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,429 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-11 10:01:18,430 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4967890851462260103.xml
2016-08-11 10:01:18,430 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4967890851462260103.xml
2016-08-11 10:01:18,432 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,432 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-11 10:01:18,432 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,433 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-11 10:01:18,433 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,433 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-11 10:01:18,433 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,434 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-11 10:01:18,434 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,434 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-11 10:01:18,434 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2945128306331646703.xml
2016-08-11 10:01:18,434 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2945128306331646703.xml
2016-08-11 10:01:18,436 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,436 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-11 10:01:18,436 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,436 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 10:01:18,436 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,437 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 10:01:18,437 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,437 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 10:01:18,437 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,437 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 10:01:18,437 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1885958886433831503.xml
2016-08-11 10:01:18,438 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1885958886433831503.xml
2016-08-11 10:01:18,439 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,439 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-11 10:01:18,439 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,439 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 10:01:18,440 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,440 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 10:01:18,440 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,440 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 10:01:18,440 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,440 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 10:01:18,440 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6452512851287576582.xml
2016-08-11 10:01:18,441 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6452512851287576582.xml
2016-08-11 10:01:18,443 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,443 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-11 10:01:18,443 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,443 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 10:01:18,444 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,444 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 10:01:18,444 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,444 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 10:01:18,444 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,444 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 10:01:18,445 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml
2016-08-11 10:01:18,445 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3309743251787913000.xml
2016-08-11 10:01:18,446 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,447 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-11 10:01:18,447 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,447 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 10:01:18,447 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-11 10:01:18,447 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-11 10:01:18,447 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,448 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 10:01:18,448 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,448 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 10:01:18,448 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,448 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-11 10:01:18,448 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,449 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-11 10:01:18,449 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,449 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-11 10:01:18,449 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4967890851462260103.xml
2016-08-11 10:01:18,449 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file4967890851462260103.xml
2016-08-11 10:01:18,452 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,452 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-11 10:01:18,452 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,453 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-11 10:01:18,453 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,453 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-11 10:01:18,454 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,454 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-11 10:01:18,454 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,454 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-11 10:01:18,454 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2945128306331646703.xml
2016-08-11 10:01:18,454 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2945128306331646703.xml
2016-08-11 10:01:18,456 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,456 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-11 10:01:18,456 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,457 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-11 10:01:18,457 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,457 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 10:01:18,457 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,457 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-11 10:01:18,457 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,457 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-11 10:01:18,457 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1885958886433831503.xml
2016-08-11 10:01:18,458 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1885958886433831503.xml
2016-08-11 10:01:18,459 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,459 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-11 10:01:18,460 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,460 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 10:01:18,460 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,460 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 10:01:18,460 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,460 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 10:01:18,461 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,461 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 10:01:18,461 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6452512851287576582.xml
2016-08-11 10:01:18,461 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file6452512851287576582.xml
2016-08-11 10:01:18,463 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,463 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-11 10:01:18,463 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-11 10:01:18,463 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-11 10:01:18,463 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,463 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-11 10:01:18,463 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,464 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-11 10:01:18,464 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,464 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-11 10:01:18,509 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,510 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,510 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,510 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,512 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,512 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-11 10:01:18,512 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,512 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-11 10:01:18,513 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,513 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-11 10:01:18,513 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,513 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-11 10:01:18,514 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,514 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-11 10:01:18,514 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,514 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-11 10:01:18,515 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,515 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-11 10:01:18,515 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,515 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-11 10:01:18,516 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,516 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,516 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,516 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,517 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,517 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-11 10:01:18,517 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,518 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-11 10:01:18,518 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,518 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,519 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,519 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,520 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,520 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-11 10:01:18,520 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,520 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-11 10:01:18,521 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,521 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-11 10:01:18,521 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,521 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-11 10:01:18,522 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,522 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-11 10:01:18,522 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,522 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-11 10:01:18,522 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,523 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-11 10:01:18,523 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,523 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-11 10:01:18,524 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,524 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,524 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,524 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,525 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,525 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-11 10:01:18,525 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,525 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-11 10:01:18,526 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,526 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,526 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,526 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,527 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,527 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-11 10:01:18,527 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,527 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-11 10:01:18,527 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,528 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-11 10:01:18,528 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,528 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-11 10:01:18,528 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,529 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-11 10:01:18,529 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,529 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-11 10:01:18,530 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,530 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-11 10:01:18,530 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,530 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-11 10:01:18,531 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,531 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,531 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,531 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,532 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,532 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-11 10:01:18,532 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,532 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-11 10:01:18,539 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-11 10:01:18,539 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-11 10:01:18,539 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-11 10:01:18,540 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-11 10:01:18,540 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-11 10:01:18,540 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-11 10:01:18,541 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-11 10:01:18,541 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-11 10:01:18,541 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-11 10:01:18,541 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-11 10:01:18,542 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-11 10:01:18,542 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-11 10:01:18,542 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-11 10:01:18,543 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-11 10:01:18,543 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-11 10:01:18,544 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-11 10:01:18,544 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-11 10:01:18,544 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-11 10:01:18,544 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-11 10:01:18,544 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-11 10:01:18,545 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-11 10:01:18,545 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-11 10:01:18,545 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-11 10:01:18,545 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,546 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,546 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,546 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,546 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,546 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,547 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-11 10:01:18,548 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-11 10:01:18,548 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 10:01:18,548 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,548 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,548 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,548 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,549 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,549 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,549 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,549 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-11 10:01:18,549 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-11 10:01:18,550 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,550 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,550 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,550 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,550 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,551 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,551 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-11 10:01:18,551 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-11 10:01:18,551 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-11 10:01:18,551 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-11 10:01:18,551 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,552 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 10:01:18,552 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-11 10:01:18,552 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,552 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 10:01:18,552 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-11 10:01:18,552 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,552 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 10:01:18,553 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-11 10:01:18,553 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 10:01:18,553 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-11 10:01:18,553 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 10:01:18,554 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-11 10:01:18,554 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-11 10:01:18,554 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-11 10:01:18,554 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-11 10:01:18,554 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-11 10:01:18,554 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-11 10:01:18,555 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-11 10:01:18,555 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-11 10:01:18,555 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,555 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,555 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,555 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,555 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,556 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,556 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-11 10:01:18,556 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-11 10:01:18,556 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 10:01:18,556 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,556 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,557 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,557 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,557 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,557 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,557 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,557 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-11 10:01:18,558 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-11 10:01:18,558 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,558 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,558 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,558 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,559 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,559 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,559 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-11 10:01:18,559 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-11 10:01:18,559 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-11 10:01:18,560 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-11 10:01:18,560 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,560 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 10:01:18,560 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-11 10:01:18,560 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,561 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 10:01:18,561 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-11 10:01:18,561 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,561 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 10:01:18,561 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-11 10:01:18,561 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 10:01:18,562 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-11 10:01:18,562 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 10:01:18,562 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-11 10:01:18,562 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-11 10:01:18,562 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-11 10:01:18,563 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,563 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-11 10:01:18,563 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,563 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-11 10:01:18,563 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,564 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-11 10:01:18,564 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 10:01:18,564 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-11 10:01:18,564 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-11 10:01:18,565 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-11 10:01:18,565 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,565 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-11 10:01:18,565 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,565 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-11 10:01:18,565 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,566 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-11 10:01:18,566 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-11 10:01:18,566 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-11 10:01:18,567 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-11 10:01:18,567 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-11 10:01:18,568 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-11 10:01:18,568 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-11 10:01:18,568 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-11 10:01:18,568 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-11 10:01:18,569 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,569 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,569 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,569 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,569 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,570 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,570 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-11 10:01:18,570 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-11 10:01:18,570 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 10:01:18,571 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,571 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,571 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,571 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,571 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,572 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,572 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,572 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-11 10:01:18,572 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-11 10:01:18,572 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,573 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,573 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,573 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,573 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-11 10:01:18,573 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,573 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-11 10:01:18,574 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-11 10:01:18,574 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-11 10:01:18,574 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-11 10:01:18,574 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,574 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 10:01:18,575 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-11 10:01:18,575 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,575 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 10:01:18,575 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-11 10:01:18,576 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,576 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-11 10:01:18,576 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-11 10:01:18,576 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 10:01:18,577 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-11 10:01:18,577 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-11 10:01:18,577 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-11 10:01:18,578 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-11 10:01:18,578 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-11 10:01:18,578 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,578 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-11 10:01:18,578 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,579 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-11 10:01:18,579 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,579 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-11 10:01:18,579 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-11 10:01:18,579 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-11 10:01:18,580 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-11 10:01:18,580 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-11 10:01:18,580 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,580 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-11 10:01:18,580 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,580 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-11 10:01:18,581 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-11 10:01:18,581 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-11 10:01:18,581 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,582 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,582 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,582 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,582 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,583 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,583 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,583 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,584 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,584 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,584 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,584 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,585 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,586 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,586 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,586 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,587 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,587 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,587 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,587 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,588 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,588 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,589 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,589 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,590 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,590 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,590 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,591 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,592 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,592 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,592 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,592 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,593 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,593 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,593 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,594 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,594 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,595 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,596 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,596 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,597 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,597 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,597 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,597 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-11 10:01:18,598 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-11 10:01:18,599 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-11 10:01:18,600 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-11 10:01:18,601 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-11 10:01:18,606 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6060350841546383777.xml
2016-08-11 10:01:18,610 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6060350841546383777.xml hdfs = false
2016-08-11 10:01:18,610 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6060350841546383777.xml
2016-08-11 10:01:18,613 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,613 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 10:01:18,615 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2847381444581042625.xml
2016-08-11 10:01:18,617 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2847381444581042625.xml hdfs = false
2016-08-11 10:01:18,618 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile2847381444581042625.xml
2016-08-11 10:01:18,619 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,620 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 10:01:18,620 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,620 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,620 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,621 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6760235017515100556.xml
2016-08-11 10:01:18,623 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6760235017515100556.xml hdfs = false
2016-08-11 10:01:18,624 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6760235017515100556.xml
2016-08-11 10:01:18,625 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,626 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 10:01:18,630 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-11 10:01:18,630 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-11 10:01:18,631 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5193837651318527663.xml
2016-08-11 10:01:18,631 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5193837651318527663.xml
2016-08-11 10:01:18,633 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-11 10:01:18,633 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-11 10:01:18,633 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-11 10:01:18,634 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5193837651318527663.xml
2016-08-11 10:01:18,635 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5193837651318527663.xml
2016-08-11 10:01:18,636 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,636 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-11 10:01:18,636 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-11 10:01:18,637 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-11 10:01:18,637 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-11 10:01:18,638 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-11 10:01:18,638 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-11 10:01:18,638 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile657300616755968518.tmp
2016-08-11 10:01:18,639 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1794147672442203022.xml
2016-08-11 10:01:18,642 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1794147672442203022.xml hdfs = false
2016-08-11 10:01:18,642 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1794147672442203022.xml
2016-08-11 10:01:18,643 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,644 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 10:01:18,644 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,644 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,644 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,648 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,649 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-11 10:01:18,650 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3788298372788171279.xml
2016-08-11 10:01:18,650 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3788298372788171279.xml
2016-08-11 10:01:18,651 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-11 10:01:18,651 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-11 10:01:18,651 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-11 10:01:18,652 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-11 10:01:18,653 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3788298372788171279.xml
2016-08-11 10:01:18,653 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile3788298372788171279.xml
2016-08-11 10:01:18,655 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:18,655 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-11 10:01:18,655 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-11 10:01:18,656 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-11 10:01:18,656 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,656 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-11 10:01:18,656 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:18,656 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-11 10:01:18,656 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:18,657 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-11 10:01:18,657 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-11 10:01:18,896 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-11 10:01:19,113 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-11 10:01:19,114 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-11 10:01:19,114 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8891455731668694708.xml
2016-08-11 10:01:19,117 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8891455731668694708.xml hdfs = false
2016-08-11 10:01:19,117 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile8891455731668694708.xml
2016-08-11 10:01:19,120 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 10:01:19,120 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 10:01:19,120 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:19,120 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:19,121 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:19,121 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:19,121 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-11 10:01:19,121 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6954708080581529365.xml
2016-08-11 10:01:19,121 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6954708080581529365.xml
2016-08-11 10:01:19,122 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-11 10:01:19,122 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-11 10:01:19,123 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-11 10:01:19,123 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-11 10:01:19,124 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6954708080581529365.xml
2016-08-11 10:01:19,124 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6954708080581529365.xml
2016-08-11 10:01:19,126 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:19,126 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-11 10:01:19,126 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-11 10:01:19,126 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-11 10:01:19,126 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-11 10:01:19,127 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile145051946299645000.xml
2016-08-11 10:01:19,129 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile145051946299645000.xml hdfs = false
2016-08-11 10:01:19,129 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile145051946299645000.xml
2016-08-11 10:01:19,131 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-11 10:01:19,131 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-11 10:01:19,131 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:19,131 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:19,131 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-11 10:01:19,132 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-11 10:01:19,132 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-11 10:01:19,132 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5186067120269582716.xml
2016-08-11 10:01:19,132 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5186067120269582716.xml
2016-08-11 10:01:19,133 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-11 10:01:19,133 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-11 10:01:19,133 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-11 10:01:19,134 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-11 10:01:19,135 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5186067120269582716.xml
2016-08-11 10:01:19,135 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile5186067120269582716.xml
2016-08-11 10:01:19,137 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-11 10:01:19,138 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-11 10:01:19,139 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-11 10:01:19,139 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-11 10:01:19,139 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-12 09:06:17,228 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-12 09:06:17,233 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-12 09:06:17,238 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-12 09:06:17,240 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-12 09:06:17,240 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-12 09:06:17,241 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-12 09:06:17,241 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-12 09:06:17,243 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-12 09:06:17,240 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-12 09:06:17,255 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-12 09:06:17,256 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-12 09:06:17,257 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-12 09:06:17,257 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-12 09:06:17,258 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-12 09:06:17,260 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-12 09:06:17,261 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-12 09:06:17,262 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-12 09:06:17,252 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-12 09:06:17,263 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-12 09:06:17,267 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-12 09:06:17,263 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-12 09:06:17,268 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-12 09:06:17,269 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-12 09:06:17,269 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-12 09:06:17,269 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-12 09:06:17,270 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-12 09:06:17,277 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5495933507628914589.xml
2016-08-12 09:06:17,351 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-12 09:06:17,352 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5495933507628914589.xml hdfs = false
2016-08-12 09:06:17,353 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5495933507628914589.xml
2016-08-12 09:06:17,358 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,361 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-12 09:06:17,365 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 09:06:17,365 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,367 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,367 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,368 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,369 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,370 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,371 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5495933507628914589.xml hdfs = false
2016-08-12 09:06:17,372 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile5495933507628914589.xml
2016-08-12 09:06:17,376 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,380 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-12 09:06:17,384 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 09:06:17,386 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,387 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,387 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,388 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,389 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,390 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,392 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-12 09:06:17,397 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml
2016-08-12 09:06:17,398 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml
2016-08-12 09:06:17,400 INFO  utils.TestUtils    [] - elementName = date
2016-08-12 09:06:17,400 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 09:06:17,400 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,400 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-12 09:06:17,401 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-12 09:06:17,401 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 09:06:17,403 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-12 09:06:17,404 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2889773151850030887.xml
2016-08-12 09:06:17,404 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2889773151850030887.xml
2016-08-12 09:06:17,405 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 09:06:17,406 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,406 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 09:06:17,408 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-12 09:06:17,409 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2898976443608988007.xml
2016-08-12 09:06:17,409 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2889773151850030887.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2898976443608988007.xml
2016-08-12 09:06:17,411 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 09:06:17,412 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 09:06:17,412 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,414 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-12 09:06:17,415 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file9082017978496098672.xml
2016-08-12 09:06:17,415 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2889773151850030887.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2898976443608988007.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file9082017978496098672.xml
2016-08-12 09:06:17,417 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 09:06:17,419 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,420 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 09:06:17,426 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-12 09:06:17,427 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file924585990101862477.xml
2016-08-12 09:06:17,427 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2889773151850030887.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2898976443608988007.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file9082017978496098672.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file924585990101862477.xml
2016-08-12 09:06:17,430 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-12 09:06:17,430 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-12 09:06:17,431 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-12 09:06:17,431 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-12 09:06:17,431 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-12 09:06:17,432 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-12 09:06:17,432 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-12 09:06:17,431 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 09:06:17,432 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,433 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 09:06:17,440 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-12 09:06:17,441 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-12 09:06:17,444 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-12 09:06:17,444 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-12 09:06:17,445 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-12 09:06:17,445 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml
2016-08-12 09:06:17,446 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-12 09:06:17,447 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml
2016-08-12 09:06:17,448 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 09:06:17,449 INFO  general.PaillierTest  [] - i = 0
2016-08-12 09:06:17,455 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-12 09:06:17,454 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,456 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-12 09:06:17,457 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,457 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 09:06:17,461 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 09:06:17,462 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-12 09:06:17,463 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,463 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:17,464 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,464 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 09:06:17,465 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,465 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-12 09:06:17,466 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,466 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-12 09:06:17,466 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,467 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-12 09:06:17,468 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2889773151850030887.xml
2016-08-12 09:06:17,468 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2889773151850030887.xml
2016-08-12 09:06:17,472 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,478 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-12 09:06:17,479 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,481 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-12 09:06:17,484 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,489 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-12 09:06:17,489 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,490 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-12 09:06:17,493 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,498 INFO  encryption.Paillier  [] - Parameters = p = 454604335 q = -654981997 N = 2108135677 NSquared = 126052873 lambdaN = -993226978 bitLength = 201
2016-08-12 09:06:17,496 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-12 09:06:17,501 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2898976443608988007.xml
2016-08-12 09:06:17,501 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2898976443608988007.xml
2016-08-12 09:06:17,506 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,506 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-12 09:06:17,507 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,508 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 09:06:17,508 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,508 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 09:06:17,509 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,509 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:17,509 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,510 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 09:06:17,510 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file9082017978496098672.xml
2016-08-12 09:06:17,510 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file9082017978496098672.xml
2016-08-12 09:06:17,512 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,513 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-12 09:06:17,513 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,513 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 09:06:17,513 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,513 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 09:06:17,514 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,514 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:17,514 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,515 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 09:06:17,515 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file924585990101862477.xml
2016-08-12 09:06:17,515 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file924585990101862477.xml
2016-08-12 09:06:17,518 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,518 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-12 09:06:17,519 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,519 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 09:06:17,519 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,519 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 09:06:17,520 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,520 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:17,520 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,521 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 09:06:17,521 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml
2016-08-12 09:06:17,522 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file2431219445890058107.xml
2016-08-12 09:06:17,525 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,525 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-12 09:06:17,525 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,525 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 09:06:17,526 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 09:06:17,526 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-12 09:06:17,526 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,526 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:17,526 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,527 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 09:06:17,527 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,527 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-12 09:06:17,527 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,527 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-12 09:06:17,528 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,528 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-12 09:06:17,528 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2889773151850030887.xml
2016-08-12 09:06:17,529 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2889773151850030887.xml
2016-08-12 09:06:17,531 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,531 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-12 09:06:17,532 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,532 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-12 09:06:17,532 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,532 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-12 09:06:17,533 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,533 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-12 09:06:17,533 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,533 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-12 09:06:17,533 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2898976443608988007.xml
2016-08-12 09:06:17,534 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2898976443608988007.xml
2016-08-12 09:06:17,535 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,535 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-12 09:06:17,536 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,536 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 09:06:17,536 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,536 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 09:06:17,537 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,537 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:17,537 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,537 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 09:06:17,537 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file9082017978496098672.xml
2016-08-12 09:06:17,538 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file9082017978496098672.xml
2016-08-12 09:06:17,540 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,540 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-12 09:06:17,541 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,541 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 09:06:17,541 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,541 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 09:06:17,542 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,542 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:17,542 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,542 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 09:06:17,543 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file924585990101862477.xml
2016-08-12 09:06:17,543 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file924585990101862477.xml
2016-08-12 09:06:17,545 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,545 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-12 09:06:17,545 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,545 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 09:06:17,546 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,546 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 09:06:17,546 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,547 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:17,547 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,547 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 09:06:17,575 INFO  general.PaillierTest  [] - encM1 = 1564958454 encM2 = -890886086
2016-08-12 09:06:17,576 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:06:17,576 INFO  general.PaillierTest  [] - encM1_times_encM2 = 447182044 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:06:17,671 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,672 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,672 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,672 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,679 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,679 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-12 09:06:17,680 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,680 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-12 09:06:17,681 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,681 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-12 09:06:17,681 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,681 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-12 09:06:17,682 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,683 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-12 09:06:17,685 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,686 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-12 09:06:17,687 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,688 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-12 09:06:17,688 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,688 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-12 09:06:17,689 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,689 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,690 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,690 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,691 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,691 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-12 09:06:17,691 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,691 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-12 09:06:17,692 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,692 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,693 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,693 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,694 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,694 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-12 09:06:17,694 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,694 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-12 09:06:17,695 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,695 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-12 09:06:17,695 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,695 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-12 09:06:17,696 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,697 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-12 09:06:17,697 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,697 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-12 09:06:17,698 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,698 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-12 09:06:17,699 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,699 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-12 09:06:17,700 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,700 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,700 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,700 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,701 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,702 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-12 09:06:17,702 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,702 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-12 09:06:17,703 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,703 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,703 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,704 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,704 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,705 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-12 09:06:17,705 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,706 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-12 09:06:17,707 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,708 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-12 09:06:17,708 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,708 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-12 09:06:17,709 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,709 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-12 09:06:17,709 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,709 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-12 09:06:17,710 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,710 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-12 09:06:17,711 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,711 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-12 09:06:17,711 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,712 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,712 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,712 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,713 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,713 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-12 09:06:17,713 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,714 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-12 09:06:17,721 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-12 09:06:17,721 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-12 09:06:17,722 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-12 09:06:17,722 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-12 09:06:17,723 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-12 09:06:17,723 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-12 09:06:17,724 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-12 09:06:17,724 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-12 09:06:17,724 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-12 09:06:17,725 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-12 09:06:17,725 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-12 09:06:17,726 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-12 09:06:17,726 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-12 09:06:17,726 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-12 09:06:17,727 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-12 09:06:17,728 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-12 09:06:17,728 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-12 09:06:17,728 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-12 09:06:17,728 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-12 09:06:17,728 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-12 09:06:17,729 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-12 09:06:17,729 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-12 09:06:17,729 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-12 09:06:17,729 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,730 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,730 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,730 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,730 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,730 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,731 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-12 09:06:17,731 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-12 09:06:17,731 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 09:06:17,731 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,731 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,732 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,732 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,732 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,732 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,732 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,733 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-12 09:06:17,733 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-12 09:06:17,733 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,733 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,733 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,734 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,734 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,734 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,734 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-12 09:06:17,735 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-12 09:06:17,735 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-12 09:06:17,735 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-12 09:06:17,735 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,735 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 09:06:17,736 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-12 09:06:17,736 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,736 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 09:06:17,736 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-12 09:06:17,736 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,737 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 09:06:17,737 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-12 09:06:17,737 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 09:06:17,737 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-12 09:06:17,738 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 09:06:17,738 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-12 09:06:17,739 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-12 09:06:17,739 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-12 09:06:17,739 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-12 09:06:17,740 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-12 09:06:17,740 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-12 09:06:17,740 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-12 09:06:17,741 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-12 09:06:17,741 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,741 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,742 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,742 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,742 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,742 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,742 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-12 09:06:17,743 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-12 09:06:17,743 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 09:06:17,743 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,743 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,743 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,743 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,744 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,744 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,744 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,744 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-12 09:06:17,744 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-12 09:06:17,745 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,745 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,745 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,745 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,746 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,746 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,746 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-12 09:06:17,746 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-12 09:06:17,749 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-12 09:06:17,750 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-12 09:06:17,750 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,750 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 09:06:17,750 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-12 09:06:17,751 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,751 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 09:06:17,751 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-12 09:06:17,752 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,752 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 09:06:17,753 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-12 09:06:17,753 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 09:06:17,753 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-12 09:06:17,754 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 09:06:17,754 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-12 09:06:17,754 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-12 09:06:17,755 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-12 09:06:17,755 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,755 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-12 09:06:17,755 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,755 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-12 09:06:17,756 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,756 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-12 09:06:17,756 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 09:06:17,756 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-12 09:06:17,757 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-12 09:06:17,758 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-12 09:06:17,759 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,759 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-12 09:06:17,759 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,760 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-12 09:06:17,760 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,760 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-12 09:06:17,761 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-12 09:06:17,761 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-12 09:06:17,761 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-12 09:06:17,761 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-12 09:06:17,762 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-12 09:06:17,762 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-12 09:06:17,762 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-12 09:06:17,763 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-12 09:06:17,763 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,763 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,763 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,763 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,764 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,764 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,764 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-12 09:06:17,764 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-12 09:06:17,765 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 09:06:17,765 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,765 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,765 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,766 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,766 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,766 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,766 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,766 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-12 09:06:17,767 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-12 09:06:17,768 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,768 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,768 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,769 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,769 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 09:06:17,769 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,769 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-12 09:06:17,769 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-12 09:06:17,770 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-12 09:06:17,770 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-12 09:06:17,770 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,772 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 09:06:17,772 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-12 09:06:17,772 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,773 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 09:06:17,773 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-12 09:06:17,773 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,773 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 09:06:17,773 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-12 09:06:17,774 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 09:06:17,774 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-12 09:06:17,776 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 09:06:17,778 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-12 09:06:17,778 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-12 09:06:17,779 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-12 09:06:17,779 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,779 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-12 09:06:17,779 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,779 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-12 09:06:17,780 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,780 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-12 09:06:17,780 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 09:06:17,780 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-12 09:06:17,780 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-12 09:06:17,781 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-12 09:06:17,781 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,781 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-12 09:06:17,781 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,781 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-12 09:06:17,781 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 09:06:17,782 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-12 09:06:17,782 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,782 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,783 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,783 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,784 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,784 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,784 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,784 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,785 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,785 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,786 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,786 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,786 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,787 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,787 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,787 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,787 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,788 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,788 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,788 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,788 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,789 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,789 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,789 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,790 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,790 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,790 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,790 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,791 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,791 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,791 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,792 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,792 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,792 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,793 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,793 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,793 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,794 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,794 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,794 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,795 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,795 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,796 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,796 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 09:06:17,801 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-12 09:06:17,805 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-12 09:06:17,806 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-12 09:06:17,807 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-12 09:06:17,811 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-12 09:06:17,814 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile9134469092600182187.tmp
2016-08-12 09:06:17,814 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile9134469092600182187.tmp
2016-08-12 09:06:17,815 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3557789288076146060.xml
2016-08-12 09:06:17,818 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3557789288076146060.xml hdfs = false
2016-08-12 09:06:17,818 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile3557789288076146060.xml
2016-08-12 09:06:17,820 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,820 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-12 09:06:17,820 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 09:06:17,821 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,821 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,821 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,821 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,821 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,822 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,822 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-12 09:06:17,822 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1090559236877660218.xml
2016-08-12 09:06:17,822 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1090559236877660218.xml
2016-08-12 09:06:17,824 INFO  utils.TestUtils    [] - elementName = date
2016-08-12 09:06:17,824 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 09:06:17,824 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,824 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-12 09:06:17,824 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-12 09:06:17,825 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 09:06:17,825 INFO  utils.TestUtils    [] - filterName = qname
2016-08-12 09:06:17,826 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-12 09:06:17,827 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3146666720087683820.xml
2016-08-12 09:06:17,827 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1090559236877660218.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3146666720087683820.xml
2016-08-12 09:06:17,828 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 09:06:17,828 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,828 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 09:06:17,829 INFO  utils.TestUtils    [] - filterName = qname
2016-08-12 09:06:17,830 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-12 09:06:17,830 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4476197878477607125.xml
2016-08-12 09:06:17,831 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1090559236877660218.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3146666720087683820.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4476197878477607125.xml
2016-08-12 09:06:17,832 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 09:06:17,832 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 09:06:17,832 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,833 INFO  utils.TestUtils    [] - filterName = qname
2016-08-12 09:06:17,834 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-12 09:06:17,835 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1197088520019897652.xml
2016-08-12 09:06:17,835 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1090559236877660218.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3146666720087683820.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4476197878477607125.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1197088520019897652.xml
2016-08-12 09:06:17,836 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 09:06:17,837 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,837 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 09:06:17,837 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-12 09:06:17,837 INFO  utils.TestUtils    [] - filterName = ip
2016-08-12 09:06:17,839 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-12 09:06:17,841 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1593447750596776236.xml
2016-08-12 09:06:17,841 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1090559236877660218.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3146666720087683820.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4476197878477607125.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1197088520019897652.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1593447750596776236.xml
2016-08-12 09:06:17,842 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 09:06:17,842 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 09:06:17,842 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 09:06:17,844 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1090559236877660218.xml
2016-08-12 09:06:17,844 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file1090559236877660218.xml
2016-08-12 09:06:17,845 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:17,846 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-12 09:06:17,847 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:17,847 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 09:06:17,847 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 09:06:17,849 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-12 09:06:17,849 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,849 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:17,850 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,853 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 09:06:17,853 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,853 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-12 09:06:17,853 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:17,853 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-12 09:06:17,854 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:17,854 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-12 09:06:17,854 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-12 09:06:18,182 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-12 09:06:18,507 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3146666720087683820.xml
2016-08-12 09:06:18,507 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file3146666720087683820.xml
2016-08-12 09:06:18,509 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:18,509 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-12 09:06:18,510 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:18,510 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-12 09:06:18,510 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:18,510 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-12 09:06:18,510 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:18,510 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-12 09:06:18,511 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:18,511 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-12 09:06:18,511 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-12 09:06:18,549 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4476197878477607125.xml
2016-08-12 09:06:18,549 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file4476197878477607125.xml
2016-08-12 09:06:18,552 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:18,552 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-12 09:06:18,552 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:18,552 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 09:06:18,553 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:18,553 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 09:06:18,553 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:18,553 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:18,553 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:18,554 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 09:06:18,554 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-12 09:06:18,592 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1197088520019897652.xml
2016-08-12 09:06:18,592 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file1197088520019897652.xml
2016-08-12 09:06:18,594 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:18,594 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-12 09:06:18,594 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:18,594 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 09:06:18,595 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:18,595 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 09:06:18,595 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:18,596 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:18,596 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:18,596 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 09:06:18,597 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-12 09:06:18,597 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-12 09:06:18,623 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1593447750596776236.xml
2016-08-12 09:06:18,624 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file1593447750596776236.xml
2016-08-12 09:06:18,625 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:06:18,625 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-12 09:06:18,625 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 09:06:18,626 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 09:06:18,626 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:06:18,626 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 09:06:18,626 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:18,627 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 09:06:18,627 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:06:18,627 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 09:06:18,631 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 09:06:18,638 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:18,641 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier8518562113753263152.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7593856371426887998.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6109810588657493098.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1519013149622699852.txt
2016-08-12 09:06:18,643 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 09:06:18,645 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-12 09:06:18,710 INFO  encryption.Paillier  [] - Parameters = p = -149551193 q = 408784627 N = 835904901 NSquared = 1174091545 lambdaN = 288335734 bitLength = 384
2016-08-12 09:06:18,710 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:19,822 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 09:06:19,825 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:20,115 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:20,281 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:20,282 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 09:06:20,289 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:20,294 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:20,299 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:20,302 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:20,305 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:20,307 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 09:06:20,311 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 09:06:20,315 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 09:06:20,318 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:20,318 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:20,328 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:20,328 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:20,518 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:20,518 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:20,521 INFO  utils.BaseTests    [] - results:
2016-08-12 09:06:20,522 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 09:06:20,524 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 09:06:20,524 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:20,524 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:20,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 09:06:20,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:20,525 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:20,526 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 09:06:20,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 09:06:20,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:20,527 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:20,528 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 09:06:20,528 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:20,528 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:20,528 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 09:06:20,529 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 09:06:20,530 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-12 09:06:20,535 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:20,536 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6158050573034230289.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1095393255254715347.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7231805683654117824.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2223861610049998012.txt
2016-08-12 09:06:20,537 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 09:06:20,560 INFO  encryption.Paillier  [] - Parameters = p = -2093846363 q = 193091689 N = 1899162541 NSquared = -1567943959 lambdaN = -1197504344 bitLength = 384
2016-08-12 09:06:20,560 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:21,218 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 09:06:21,219 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:21,410 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:21,501 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:21,501 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-12 09:06:21,503 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-12 09:06:21,505 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-12 09:06:21,508 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-12 09:06:21,510 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-12 09:06:21,512 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-12 09:06:21,514 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-12 09:06:21,517 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 09:06:21,519 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-12 09:06:21,521 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:21,521 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:21,523 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:21,523 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:21,678 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:21,678 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:21,679 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:21,679 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-12 09:06:21,679 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-12 09:06:21,680 INFO  utils.BaseTests    [] - correctResults:
2016-08-12 09:06:21,680 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":76d22d93-a342-42ae-b50b-b4f2871d29f5,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-12 09:06:21,681 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":76d22d93-a342-42ae-b50b-b4f2871d29f5,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:21,681 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":76d22d93-a342-42ae-b50b-b4f2871d29f5,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-12 09:06:21,682 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-12 09:06:21,682 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-12 09:06:21,682 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:21,683 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5083222269352626836.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4639126241362648179.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3825262793134488705.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8886507926193363491.txt
2016-08-12 09:06:21,683 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 09:06:21,711 INFO  encryption.Paillier  [] - Parameters = p = 665054949 q = -383958465 N = -2116037541 NSquared = 1555093593 lambdaN = 162968436 bitLength = 384
2016-08-12 09:06:21,711 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:22,470 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 09:06:22,470 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:22,635 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:22,709 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:22,710 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-12 09:06:22,711 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 09:06:22,713 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-12 09:06:22,715 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-12 09:06:22,717 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 09:06:22,718 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 09:06:22,720 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-12 09:06:22,725 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-12 09:06:22,728 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-12 09:06:22,731 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:22,731 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:22,733 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:22,733 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:22,827 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:22,827 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:22,828 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:22,829 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:22,829 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:22,829 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-12 09:06:22,829 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-12 09:06:22,830 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-12 09:06:22,831 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-12 09:06:22,832 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-12 09:06:22,832 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:22,833 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4930561698134632312.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7739181344450805107.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4608346678701365770.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2491558847919447930.txt
2016-08-12 09:06:22,833 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 09:06:22,865 INFO  encryption.Paillier  [] - Parameters = p = 1911829911 q = -1183920795 N = -1440411757 NSquared = -1116696983 lambdaN = -1084160436 bitLength = 384
2016-08-12 09:06:22,866 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:23,450 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 09:06:23,451 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:23,613 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:23,691 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:23,692 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:23,693 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:23,694 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:23,695 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:23,696 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:23,774 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:23,774 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:23,775 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-12 09:06:23,775 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-12 09:06:23,776 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 09:06:23,776 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:23,777 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier758908064404372811.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3358554151710995295.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8738821093771000300.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6993293234956751205.txt
2016-08-12 09:06:23,777 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 09:06:23,795 INFO  encryption.Paillier  [] - Parameters = p = -909691013 q = -935769583 N = 1856453931 NSquared = -793279175 lambdaN = 549520624 bitLength = 384
2016-08-12 09:06:23,795 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:24,148 INFO  encryption.Paillier  [] - Parameters = p = 1281288503 q = -461036579 N = 224713083 NSquared = 517587225 lambdaN = 1332399292 bitLength = 3072
2016-08-12 09:06:24,323 INFO  general.PaillierTest  [] - encM1 = -156037450 encM2 = 1572695519
2016-08-12 09:06:24,479 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:06:24,542 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1849587893 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:06:24,800 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 09:06:24,800 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:24,942 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:25,012 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:25,012 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 09:06:25,015 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:25,017 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:25,020 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:25,023 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:25,025 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:25,027 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 09:06:25,029 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 09:06:25,031 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 09:06:25,034 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:25,035 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:25,039 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:25,039 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:25,222 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:25,223 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:25,224 INFO  utils.BaseTests    [] - results:
2016-08-12 09:06:25,224 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 09:06:25,224 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 09:06:25,224 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:25,225 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:25,225 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 09:06:25,225 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:25,225 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:25,225 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 09:06:25,226 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 09:06:25,226 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:25,226 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:25,226 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 09:06:25,226 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:25,227 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:25,227 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 09:06:25,230 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 09:06:25,230 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 09:06:25,231 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:25,231 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier9075866851282865811.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8983940318239806910.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8105470688555625313.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2487768532929378410.txt
2016-08-12 09:06:25,232 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 09:06:25,248 INFO  encryption.Paillier  [] - Parameters = p = 1146178253 q = 1405656315 N = 1819362047 NSquared = 1587968513 lambdaN = -837906636 bitLength = 384
2016-08-12 09:06:25,248 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:26,600 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 09:06:26,601 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:26,734 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:26,837 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:26,839 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 09:06:26,842 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:26,846 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:26,851 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:26,854 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:26,858 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:26,860 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 09:06:26,862 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 09:06:26,868 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 09:06:26,871 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:26,871 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:26,881 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:26,882 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:27,140 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:27,140 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:27,143 INFO  utils.BaseTests    [] - results:
2016-08-12 09:06:27,143 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 09:06:27,143 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 09:06:27,143 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:27,144 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:27,144 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 09:06:27,144 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:27,144 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:27,144 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 09:06:27,145 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 09:06:27,145 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:27,145 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:27,145 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 09:06:27,146 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:27,146 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:27,146 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 09:06:27,147 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 09:06:27,147 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 09:06:27,147 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:27,148 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4831273526771357332.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query79020242984339560.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1066799662581504596.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile1395745867432319421.txt
2016-08-12 09:06:27,148 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 09:06:27,167 INFO  encryption.Paillier  [] - Parameters = p = -260930815 q = 1621135979 N = 255021931 NSquared = -506425671 lambdaN = 1594892032 bitLength = 384
2016-08-12 09:06:27,167 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:28,358 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 09:06:28,358 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:28,615 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:28,745 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:28,746 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 09:06:28,775 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:28,789 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:28,812 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:28,820 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:28,832 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:28,852 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 09:06:28,881 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 09:06:28,884 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 09:06:28,886 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:28,887 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:28,893 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:28,893 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:29,110 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:29,110 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:29,132 INFO  utils.BaseTests    [] - results:
2016-08-12 09:06:29,133 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 09:06:29,133 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 09:06:29,133 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:29,133 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:29,134 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 09:06:29,134 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:29,134 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:29,134 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 09:06:29,134 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 09:06:29,135 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:29,135 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:29,135 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 09:06:29,135 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:29,136 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:29,136 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 09:06:29,137 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 09:06:29,137 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 09:06:29,137 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:29,138 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7166483288548056432.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8949864802963979319.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6234037607401634215.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4292807583657654034.txt
2016-08-12 09:06:29,138 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-12 09:06:29,153 INFO  encryption.Paillier  [] - Parameters = p = -268734147 q = 2133050113 N = 898885693 NSquared = -893608311 lambdaN = -803881216 bitLength = 384
2016-08-12 09:06:29,153 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:30,504 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 09:06:30,505 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:30,779 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:30,870 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:30,871 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 09:06:30,873 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:30,876 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:30,878 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:30,880 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:30,882 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:30,883 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 09:06:30,884 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 09:06:30,885 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 09:06:30,887 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:30,887 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:30,890 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:30,890 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:30,981 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:30,981 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:30,983 INFO  utils.BaseTests    [] - results:
2016-08-12 09:06:30,983 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 09:06:30,983 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 09:06:30,983 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:30,983 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:30,984 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 09:06:30,984 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:30,984 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:30,984 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 09:06:30,984 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 09:06:30,985 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:30,985 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:30,985 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 09:06:30,985 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:30,985 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:30,986 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 09:06:30,986 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 09:06:30,986 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-12 09:06:30,986 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:30,987 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier4228071502958592687.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5810525620303999470.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2988600810794763546.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3204544331223793511.txt
2016-08-12 09:06:30,987 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-12 09:06:30,999 INFO  encryption.Paillier  [] - Parameters = p = -1919783087 q = 834389091 N = -1375334317 NSquared = -1729201431 lambdaN = -144970160 bitLength = 384
2016-08-12 09:06:30,999 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:31,863 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 09:06:31,863 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:32,026 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:32,098 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:32,098 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-12 09:06:32,099 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-12 09:06:32,101 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-12 09:06:32,103 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-12 09:06:32,105 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-12 09:06:32,107 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-12 09:06:32,109 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-12 09:06:32,111 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 09:06:32,113 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-12 09:06:32,114 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:32,114 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:32,116 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:32,116 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:32,191 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:32,191 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:32,194 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:32,195 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-12 09:06:32,195 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-12 09:06:32,195 INFO  utils.BaseTests    [] - correctResults:
2016-08-12 09:06:32,195 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":76d22d93-a342-42ae-b50b-b4f2871d29f5,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-12 09:06:32,195 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":76d22d93-a342-42ae-b50b-b4f2871d29f5,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:32,196 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":76d22d93-a342-42ae-b50b-b4f2871d29f5,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-12 09:06:32,196 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-12 09:06:32,196 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-12 09:06:32,196 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:32,197 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7684230311230142299.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1994437226502014481.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse4811892537811127062.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6254000450445877026.txt
2016-08-12 09:06:32,197 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-12 09:06:32,221 INFO  encryption.Paillier  [] - Parameters = p = -575070099 q = 1268655561 N = -900712811 NSquared = 1287860921 lambdaN = -1472316392 bitLength = 384
2016-08-12 09:06:32,221 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:32,802 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 09:06:32,803 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:33,038 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:33,124 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:33,124 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-12 09:06:33,125 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 09:06:33,127 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-12 09:06:33,128 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-12 09:06:33,129 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 09:06:33,131 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 09:06:33,132 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-12 09:06:33,136 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-12 09:06:33,138 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-12 09:06:33,139 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:33,140 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:33,142 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:33,142 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:33,221 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:33,221 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:33,222 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:33,222 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:33,222 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 09:06:33,223 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-12 09:06:33,223 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-12 09:06:33,223 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-12 09:06:33,224 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-12 09:06:33,224 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-12 09:06:33,224 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:33,225 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier3625372809945413411.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query436096089099281520.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse9145995519399209735.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8644063598640348212.txt
2016-08-12 09:06:33,225 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-12 09:06:33,242 INFO  encryption.Paillier  [] - Parameters = p = -348358051 q = -540566513 N = -999893133 NSquared = 2096520617 lambdaN = 2091999364 bitLength = 384
2016-08-12 09:06:33,243 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:33,640 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 09:06:33,640 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:33,802 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:33,915 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:33,915 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:33,916 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:33,916 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:33,917 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:33,917 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:34,027 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:34,027 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:34,028 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-12 09:06:34,029 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-12 09:06:34,036 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 09:06:34,037 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 09:06:34,038 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7348030019460687242.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query4072548950523047025.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse6664481806296913397.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7762546616664491474.txt
2016-08-12 09:06:34,038 INFO  wideskies.QueryInfo  [] - identifier = 76d22d93-a342-42ae-b50b-b4f2871d29f5 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 09:06:34,050 INFO  encryption.Paillier  [] - Parameters = p = 1850826567 q = 1247280703 N = -911219591 NSquared = 727040305 lambdaN = -2004663430 bitLength = 384
2016-08-12 09:06:34,051 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 09:06:35,494 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 09:06:35,495 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 09:06:35,495 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-12 09:06:35,671 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 09:06:35,743 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 09:06:35,783 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 09:06:35,849 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:35,871 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:35,877 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:35,879 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:35,881 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 09:06:35,883 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 09:06:35,886 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 09:06:35,891 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 09:06:35,893 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 09:06:35,893 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 09:06:35,897 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 09:06:35,898 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 09:06:36,032 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 09:06:36,032 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 09:06:36,034 INFO  utils.BaseTests    [] - results:
2016-08-12 09:06:36,034 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 09:06:36,034 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:36,034 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:36,035 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 09:06:36,035 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:36,035 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 09:06:36,035 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 09:06:36,035 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 09:06:36,036 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:36,036 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:36,036 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 09:06:36,037 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:36,038 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"76d22d93-a342-42ae-b50b-b4f2871d29f5","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 09:06:36,038 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 09:07:48,684 INFO  encryption.Paillier  [] - Parameters = p = 990008777 q = -2072903377 N = -1354397465 NSquared = -407093135 lambdaN = 2011732216 bitLength = 5947
2016-08-12 09:07:50,244 INFO  general.PaillierTest  [] - encM1 = -221428558 encM2 = 366284988
2016-08-12 09:07:51,987 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:07:52,848 INFO  general.PaillierTest  [] - encM1_times_encM2 = 857947112 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:07:52,848 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 09:07:52,849 INFO  general.PaillierTest  [] - i = 0
2016-08-12 09:07:52,856 INFO  encryption.Paillier  [] - testBit false
 N = 10111110010000101010101110100111111001100010111011010010001010100000000011100010001011110000010001011111101011010010100110101001000100100111000111100011111101110010010101110101110110100111111010010111
2016-08-12 09:07:52,868 INFO  encryption.Paillier  [] - testBit false
 N = 11010000110011011011111110100001100001101000111101110000111101100011100111000101001010001001111010001010010010100001101000100010000000001001001100000011001110001001101000001010100100101111100000000101
2016-08-12 09:07:52,874 INFO  encryption.Paillier  [] - testBit true
 N = 11001110110010101000101001011011101010000101011001000001110111010110101010010001111000010111001101110111100010000111100010011000000010000011111101100010110010110011010111110001010100000110001111100011
2016-08-12 09:07:52,874 INFO  encryption.Paillier  [] - Parameters = p = -106742811 q = 1429009447 N = -246389789 NSquared = -86418615 lambdaN = -784328212 bitLength = 201
2016-08-12 09:07:52,875 INFO  general.PaillierTest  [] - encM1 = 966813049 encM2 = 394131872
2016-08-12 09:07:52,875 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:07:52,876 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2020236687 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:07:58,909 INFO  encryption.Paillier  [] - testBit true

2016-08-12 09:07:58,920 INFO  encryption.Paillier  [] - Parameters = p = -2097072613 q = -624881363 N = -467055169 NSquared = 919237761 lambdaN = -1020034244 bitLength = 3072
2016-08-12 09:07:59,201 INFO  general.PaillierTest  [] - encM1 = 1313689469 encM2 = -1490582302
2016-08-12 09:07:59,446 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:07:59,520 INFO  general.PaillierTest  [] - encM1_times_encM2 = -366144323 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:09:21,737 INFO  encryption.Paillier  [] - testBit false

2016-08-12 09:10:24,603 INFO  encryption.Paillier  [] - testBit true

2016-08-12 09:10:24,608 INFO  encryption.Paillier  [] - Parameters = p = 60281227 q = -1408159065 N = 1295112109 NSquared = 1475218153 lambdaN = -825988674 bitLength = 6043
2016-08-12 09:10:25,509 INFO  general.PaillierTest  [] - encM1 = -870025446 encM2 = 372704381
2016-08-12 09:10:26,510 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:10:27,322 INFO  general.PaillierTest  [] - encM1_times_encM2 = 6527811 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:10:27,323 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 09:10:27,323 INFO  general.PaillierTest  [] - i = 0
2016-08-12 09:10:27,330 INFO  encryption.Paillier  [] - Parameters = p = 1986701659 q = -791403451 N = 434925959 NSquared = -515869391 lambdaN = -380186124 bitLength = 201
2016-08-12 09:10:27,331 INFO  general.PaillierTest  [] - encM1 = 463378422 encM2 = -1921625511
2016-08-12 09:10:27,331 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:10:27,332 INFO  general.PaillierTest  [] - encM1_times_encM2 = 588576524 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:10:29,148 INFO  encryption.Paillier  [] - Parameters = p = 1367798761 q = -61902543 N = -848983911 NSquared = 463268721 lambdaN = 804381808 bitLength = 3072
2016-08-12 09:10:29,475 INFO  general.PaillierTest  [] - encM1 = 995674412 encM2 = -9457475
2016-08-12 09:10:29,802 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:10:30,100 INFO  general.PaillierTest  [] - encM1_times_encM2 = 359716360 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:11:02,319 INFO  encryption.Paillier  [] - Parameters = p = 313853611 q = -1304894847 N = -1736224213 NSquared = 1113690937 lambdaN = 197210240 bitLength = 5544
2016-08-12 09:11:04,210 INFO  general.PaillierTest  [] - encM1 = -60425564 encM2 = -742513419
2016-08-12 09:11:05,604 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:11:06,071 INFO  general.PaillierTest  [] - encM1_times_encM2 = -452635120 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:11:06,071 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 09:11:06,071 INFO  general.PaillierTest  [] - i = 0
2016-08-12 09:11:06,079 INFO  encryption.Paillier  [] - testBit false
 N = 11011010010000101101001010101110011001000000100100000001110110000000001001101011011000001110101111000010110101001111001110100011100111110011101100101011100011000010100111000100110111100110101011001111
2016-08-12 09:11:06,085 INFO  encryption.Paillier  [] - testBit false
 N = 10101100111101001101101010001001010011011101000010000101101101000100110111100110010010011110010000011111100100110100011001010011011001100000110010101110101111101001001101011101001011010000010100000011
2016-08-12 09:11:06,089 INFO  encryption.Paillier  [] - testBit false
 N = 10101010101101011111001110000111111110000001001110100110010100100011000001110110010001101111000000111101111001101101000101010110110001000001010010000000000010110010101100001010001101111010000011011011
2016-08-12 09:11:06,092 INFO  encryption.Paillier  [] - testBit false
 N = 10000011001111000101001100111100101110100010100010100000010000101010010011000110011010101111010101011001010110110010011011100010010110000101111011011111010101011101100100011100011010000010111111010111
2016-08-12 09:11:06,102 INFO  encryption.Paillier  [] - testBit false
 N = 10101011110100010101101011111100111101111101100001110011001010011110001001111101011110111001011110011000000000100100010100110010101001001011011101101010110000001001010101100111000001000111000110011001
2016-08-12 09:11:06,106 INFO  encryption.Paillier  [] - testBit false
 N = 11010011111001001100110111101001010101000000010110010000110000000101100000010011011011011011111011010110010100100001011011001100011100010101010100011001101010010000111101111100110110110001000010011011
2016-08-12 09:11:06,114 INFO  encryption.Paillier  [] - testBit true
 N = 11001010000100110101000110000000101011110011011111101101001111100101111001100000001110000011101100000010000111000001001111010110010010100101010101011100011100010000110000110101101001010100101011110011
2016-08-12 09:11:06,114 INFO  encryption.Paillier  [] - Parameters = p = 864117567 q = 23482189 N = 900025075 NSquared = 1362059945 lambdaN = -2141270988 bitLength = 201
2016-08-12 09:11:06,115 INFO  general.PaillierTest  [] - encM1 = -1627604757 encM2 = -80072043
2016-08-12 09:11:06,115 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:11:06,117 INFO  general.PaillierTest  [] - encM1_times_encM2 = -87641137 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:11:10,594 INFO  encryption.Paillier  [] - testBit true

2016-08-12 09:11:10,597 INFO  encryption.Paillier  [] - Parameters = p = -1319919047 q = -208376261 N = -1309744861 NSquared = -921531703 lambdaN = -2038208424 bitLength = 3072
2016-08-12 09:11:10,719 INFO  general.PaillierTest  [] - encM1 = 217377008 encM2 = 1527239916
2016-08-12 09:11:10,845 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:11:10,904 INFO  general.PaillierTest  [] - encM1_times_encM2 = 500271526 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:11:20,334 INFO  encryption.Paillier  [] - testBit true
 N = 1011001100101111010110110010011000101110011011000101100110001010000101100001010001000101101100111101010110101111101001100011110000101100100011110010011100100111110101001001011111010100010000100001111000111001101110000010000111010000110110101110000010011000100101010101101110110000001010010011010010011001100010011101101000100000110101101000111010001001111110000110001110000110110100011100111010101010011111011010110010111001001011101111000101100011000011100010010000111100010111011010010010100011000100111000010101000101001100010110100111001100111011101001111000000111111110001000110100010010011001010000101001110000101011011011101001010010011100110010010011001000101111000000101101011111110110100001001000011000001000000011001011100111110010100010100011100000010100111111111101100110110010101001111000001101100100101111001101101101111010110001101010011001111010100101010110101001110111001100110010101001011011000000001111000011100110100111110100101001000000010001100011000111010100100010110010101000100101111110101110101011010100010011001011001001111010101101001011001001011101000100101010000110001111011000001000110100100010100110001101001100100110000001001001111000110110000000010000111100010011010001001000011001101100111111110110111000001100010010101011000001001010110100111000111101110110100101100101101011100011110111110111110000001100000011111011011001110001101101001010001111010101100101010001111111100111101111101100100000001000110001100001001101001011101100010110000111100010010011110000011011100101010101111100110111011011011001100001100110111011101100100111000010110001000110101101001001001000001111110111111101010101100101001010110011101011000011010101001000100010100000101110011011101110010001011110110000110101100101010101000100110100001110010001110101011100100011110001000010100111101110001000100001001001001010010011000110000110111101101110110001111101110011100001010100010100000111101001000101101001100011010011010111100111111101000110001100100010010010000000001011010111010110000001001111101001010100100010001101011111010001001010001001010010101001011000111111100100001011110000000111101110010000110000110000000111100001111110100010001010100000111000000011000001000110110010101001101100110110010110110100001000100110100101011011000010001000010001110000000000011010111101001011000000111011101000010000101111101001001101010110010101011000011100001101111000000111010101010100010001110110010001001010111001110010000101000101000000000001010111101111011001011001100000001110100001100010000001100000111100000001100011110101110110100010011000110011101000101011001010001100000100110101000010011101110101000110000000001010111101111010011011000010111001111001100101000101000100110001011010000111101111010111000001000010011010001011111011000100000000011000000001000011010101010010001001011110011100010110100010011100110010110110001010101100111001111101110100100000010101001000000001100110000100010110001111100000001000011011001001101000010011010110001011010111000010111100111010001101101101101000010011101010010001111011000111100001011101101111100100100101111111001011011010011000010101110101111000111001101011011000111111111001111000011001001010101001100001101111001011011010101000010110000000110011011110010111111000101110011010111001000011000110000111000110011111000000000110011011110110010100110111001001011010011001010101111001110001110011111001110010101111011101011101000110100000110101011001100000000010101011101111101011001010011100011101111110100111100110101101110000100110101110101100000100110000110110100000111100100010101001100000100101011011110111010000010111111001001101010111000110001100011110001101001101000111100011111010011001000001001001100101111100100001011010100011110100101011000110111010101101010111100101000110110001011010011111011101110011111011111001011111000111011111010111111111110100101000010110100011011111100101001111110111010000111101110100011010101001111001000000001101011011001111010111001100110011011110101100111010011110100101110011000010110000111110000011100100100111101011010111001000011101011011001101001100110010011100000101100000100101000000011011101010111111011000100000010110111010111100001011001111101110100001000001101000100011110001011001001001001101010111000111000111000101011110100010101001100100110001000101101110100001001001100100011011001110100110010001111010001001001011000101111100111110100111011011000010100010100101111001100100101101101011001011011101011001100011110000011001110100100101110010100111110001100000110111011101111100101111111110100110111001110111011011010110000101100111111010001011110100100011001100101000111001010100111000010010011100010011010101010111011000101001100100110000110011011010000001010000001000001011111100010010100110101111111001001000111001011101000011110000001000010110011001001101100101011000011000101100100010010100001000010000000001001000010011010110111110001011001100100011101010101010001110001111000100001011001000010111101001011010110001100001000101000011000101101110001000001010101110110010111010110101110101011111111111000111010110010101000000011110110111101011010100100100101000110100010100011100000110100101111000100111010011001111001111100001111011111010010111010111011000000001111001111000100011110101101111011001101001001000101011
2016-08-12 09:11:20,339 INFO  encryption.Paillier  [] - Parameters = p = -989740343 q = -811363501 N = 1868993067 NSquared = 398005049 lambdaN = 1655499880 bitLength = 5236
2016-08-12 09:11:20,897 INFO  general.PaillierTest  [] - encM1 = -1360147487 encM2 = -406868947
2016-08-12 09:11:21,458 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:11:21,735 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1244612922 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:11:21,736 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 09:11:21,736 INFO  general.PaillierTest  [] - i = 0
2016-08-12 09:11:21,738 INFO  encryption.Paillier  [] - Parameters = p = 287213049 q = 828457245 N = 483550773 NSquared = 1875003129 lambdaN = -158029880 bitLength = 201
2016-08-12 09:11:21,738 INFO  general.PaillierTest  [] - encM1 = 1747916157 encM2 = -2369098
2016-08-12 09:11:21,738 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:11:21,738 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1526558523 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:11:24,718 INFO  encryption.Paillier  [] - Parameters = p = -1177687325 q = -140094405 N = -1212572079 NSquared = 16389537 lambdaN = 52604826 bitLength = 3072
2016-08-12 09:11:24,844 INFO  general.PaillierTest  [] - encM1 = 762994003 encM2 = -1500417325
2016-08-12 09:11:24,960 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:11:25,017 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1136630062 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:11:57,584 INFO  encryption.Paillier  [] - Parameters = p = 1247288287 q = 548049999 N = 1130595793 NSquared = 731436193 lambdaN = -332371246 bitLength = 6872
2016-08-12 09:11:58,817 INFO  general.PaillierTest  [] - encM1 = 1652608926 encM2 = 1990583518
2016-08-12 09:12:00,236 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:12:01,247 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1395541991 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:12:01,247 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 09:12:01,247 INFO  general.PaillierTest  [] - i = 0
2016-08-12 09:12:01,255 INFO  encryption.Paillier  [] - testBit true
 N = 11011101110111001011110100100101110000000100000001101000111001000100110011001010000101101010010000100101011000100001110111110000111101000010101101001010110001110101000101101010111101111111011111100001
2016-08-12 09:12:01,255 INFO  encryption.Paillier  [] - Parameters = p = -506646925 q = -1165265061 N = 1794635745 NSquared = -1741556799 lambdaN = 1733273866 bitLength = 201
2016-08-12 09:12:01,256 INFO  general.PaillierTest  [] - encM1 = 684417221 encM2 = 1320342988
2016-08-12 09:12:01,256 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:12:01,257 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1075719273 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:12:04,454 INFO  encryption.Paillier  [] - testBit false

2016-08-12 09:12:08,235 INFO  encryption.Paillier  [] - testBit false

2016-08-12 09:12:13,164 INFO  encryption.Paillier  [] - testBit true

2016-08-12 09:12:13,166 INFO  encryption.Paillier  [] - Parameters = p = -1206800455 q = 1024400715 N = 1324183603 NSquared = 60467753 lambdaN = -632128808 bitLength = 3072
2016-08-12 09:12:13,285 INFO  general.PaillierTest  [] - encM1 = -1181331701 encM2 = 1091891802
2016-08-12 09:12:13,403 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:12:13,462 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1796034407 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:12:17,277 INFO  encryption.Paillier  [] - testBit true

2016-08-12 09:12:17,280 INFO  encryption.Paillier  [] - Parameters = p = 968016201 q = -1374979999 N = -1820822359 NSquared = -1449551983 lambdaN = -713603232 bitLength = 4015
2016-08-12 09:12:17,539 INFO  general.PaillierTest  [] - encM1 = 703878040 encM2 = 1243424688
2016-08-12 09:12:17,802 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:12:17,924 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2067842816 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:12:17,924 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 09:12:17,924 INFO  general.PaillierTest  [] - i = 0
2016-08-12 09:12:17,926 INFO  encryption.Paillier  [] - Parameters = p = -930288411 q = -1341624001 N = 1718051163 NSquared = 4200025 lambdaN = -766661836 bitLength = 201
2016-08-12 09:12:17,926 INFO  general.PaillierTest  [] - encM1 = 1707019038 encM2 = 67566023
2016-08-12 09:12:17,927 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:12:17,927 INFO  general.PaillierTest  [] - encM1_times_encM2 = 739247071 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:12:18,191 INFO  encryption.Paillier  [] - Parameters = p = 1968643555 q = -884831703 N = 1989551963 NSquared = 145807961 lambdaN = -1694613592 bitLength = 3072
2016-08-12 09:12:18,307 INFO  general.PaillierTest  [] - encM1 = -1324479961 encM2 = -324066656
2016-08-12 09:12:18,421 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:12:18,482 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1060761440 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:12:24,093 INFO  encryption.Paillier  [] - Parameters = p = 693873993 q = 11545627 N = 1084478131 NSquared = 2103191849 lambdaN = -1957954392 bitLength = 3309
2016-08-12 09:12:24,326 INFO  general.PaillierTest  [] - encM1 = 2110807747 encM2 = 520364476
2016-08-12 09:12:24,510 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:12:24,612 INFO  general.PaillierTest  [] - encM1_times_encM2 = -553494552 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:12:24,612 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 09:12:24,612 INFO  general.PaillierTest  [] - i = 0
2016-08-12 09:12:24,617 INFO  encryption.Paillier  [] - testBit false
 N = 10011111100001001011001000011000010110110110101001100110111011011000101100001110010000010101001111011000000001111010000100001111101000100101000100011111110101110011001001010010011011010011001111011101
2016-08-12 09:12:24,623 INFO  encryption.Paillier  [] - testBit false
 N = 10100110111101011011000101000010010110010110111111100101101111110110010011000111110000010110101011101101100000011100010000010110110111000101001101001010000110100001100110101011001010001010001100010011
2016-08-12 09:12:24,625 INFO  encryption.Paillier  [] - testBit true
 N = 11100000110000110101010100101100000000011111011111010110111000010010011110010001101001100000101100101101101101111101001011110100111001100100001100110110001000010110010110000000111101111100111011110101
2016-08-12 09:12:24,625 INFO  encryption.Paillier  [] - Parameters = p = 1495221065 q = 163185229 N = -2131243275 NSquared = 68499065 lambdaN = 400023752 bitLength = 201
2016-08-12 09:12:24,625 INFO  general.PaillierTest  [] - encM1 = -643476493 encM2 = 1421473708
2016-08-12 09:12:24,626 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:12:24,626 INFO  general.PaillierTest  [] - encM1_times_encM2 = 397851408 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:12:29,317 INFO  encryption.Paillier  [] - testBit true

2016-08-12 09:12:29,320 INFO  encryption.Paillier  [] - Parameters = p = -1110310129 q = -1092385063 N = -1393856073 NSquared = -528674607 lambdaN = -2012677128 bitLength = 3072
2016-08-12 09:12:29,438 INFO  general.PaillierTest  [] - encM1 = 550505227 encM2 = -1121544749
2016-08-12 09:12:29,555 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:12:29,612 INFO  general.PaillierTest  [] - encM1_times_encM2 = 371223595 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:13:05,606 INFO  encryption.Paillier  [] - testBit true

2016-08-12 09:13:05,611 INFO  encryption.Paillier  [] - Parameters = p = 280523499 q = 60009315 N = 1778936289 NSquared = 500848577 lambdaN = 719201738 bitLength = 6643
2016-08-12 09:13:06,735 INFO  general.PaillierTest  [] - encM1 = 1288141363 encM2 = -1792692417
2016-08-12 09:13:07,848 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:13:08,417 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1199359852 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 09:13:08,418 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-12 09:13:08,421 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-12 09:13:08,423 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-12 09:13:08,424 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-12 09:13:08,429 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-12 09:13:08,433 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-12 09:13:08,434 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-12 09:13:08,436 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-12 09:13:08,436 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-12 09:13:08,436 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 09:13:08,436 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-12 09:13:08,436 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-12 09:13:08,439 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-12 09:13:08,442 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-12 09:13:08,442 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-12 09:13:08,446 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-12 09:13:08,446 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-12 09:13:08,447 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-12 09:13:08,447 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-12 09:13:08,448 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-12 09:13:08,450 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6847836623669909139.xml
2016-08-12 09:13:08,494 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-12 09:13:08,494 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6847836623669909139.xml hdfs = false
2016-08-12 09:13:08,494 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6847836623669909139.xml
2016-08-12 09:13:08,496 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:13:08,497 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 09:13:08,499 ERROR data.DataSchemaLoader  [] - Caught exception: 
2016-08-12 09:13:08,501 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6847836623669909139.xml hdfs = false
2016-08-12 09:13:08,501 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6847836623669909139.xml
2016-08-12 09:13:08,504 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:13:08,504 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 09:13:08,505 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile8983081206159936882.xml
2016-08-12 09:13:08,512 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile8983081206159936882.xml hdfs = false
2016-08-12 09:13:08,512 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile8983081206159936882.xml
2016-08-12 09:13:08,514 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:13:08,514 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 09:13:08,515 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:08,515 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:08,515 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:13:08,517 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType1897356990148658000.xml
2016-08-12 09:13:08,519 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType1897356990148658000.xml hdfs = false
2016-08-12 09:13:08,519 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType1897356990148658000.xml
2016-08-12 09:13:08,521 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:13:08,521 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 09:13:08,523 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-12 09:13:08,524 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-12 09:13:08,525 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6070851630571823855.xml
2016-08-12 09:13:08,525 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6070851630571823855.xml
2016-08-12 09:13:08,526 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-12 09:13:08,527 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-12 09:13:08,527 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-12 09:13:08,531 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-12 09:13:08,532 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6070851630571823855.xml
2016-08-12 09:13:08,532 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6070851630571823855.xml
2016-08-12 09:13:08,534 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:13:08,535 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-12 09:13:08,535 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-12 09:13:08,535 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-12 09:13:08,535 ERROR query.QuerySchemaLoader  [] - Caught exception: 
2016-08-12 09:13:08,537 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6070851630571823855.xml
2016-08-12 09:13:08,537 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6070851630571823855.xml
2016-08-12 09:13:08,539 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:13:08,541 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-12 09:13:08,542 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-12 09:13:08,542 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-12 09:13:08,542 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-12 09:13:08,543 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-12 09:13:08,546 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-12 09:13:08,547 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile5050121067297882277.tmp
2016-08-12 09:13:08,548 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7195826722869314891.xml
2016-08-12 09:13:08,551 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7195826722869314891.xml hdfs = false
2016-08-12 09:13:08,551 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7195826722869314891.xml
2016-08-12 09:13:08,553 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:13:08,553 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 09:13:08,553 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:08,553 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:08,554 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:13:08,554 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:08,555 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-12 09:13:08,555 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1823195341334942315.xml
2016-08-12 09:13:08,555 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1823195341334942315.xml
2016-08-12 09:13:08,558 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-12 09:13:08,558 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-12 09:13:08,558 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-12 09:13:08,559 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-12 09:13:08,560 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1823195341334942315.xml
2016-08-12 09:13:08,561 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile1823195341334942315.xml
2016-08-12 09:13:08,565 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:13:08,566 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-12 09:13:08,566 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-12 09:13:08,566 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-12 09:13:08,567 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:08,567 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-12 09:13:08,567 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:08,567 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-12 09:13:08,567 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:13:08,567 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-12 09:13:08,567 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-12 09:13:08,842 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-12 09:13:09,075 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-12 09:13:09,076 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-12 09:13:09,077 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile5807476400293159656.xml
2016-08-12 09:13:09,080 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile5807476400293159656.xml hdfs = false
2016-08-12 09:13:09,080 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile5807476400293159656.xml
2016-08-12 09:13:09,081 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:13:09,082 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 09:13:09,082 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:09,082 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:09,082 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:13:09,083 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:09,083 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-12 09:13:09,083 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7736689236917045182.xml
2016-08-12 09:13:09,083 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7736689236917045182.xml
2016-08-12 09:13:09,084 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-12 09:13:09,084 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-12 09:13:09,085 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-12 09:13:09,085 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-12 09:13:09,087 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7736689236917045182.xml
2016-08-12 09:13:09,087 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile7736689236917045182.xml
2016-08-12 09:13:09,089 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:13:09,089 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-12 09:13:09,089 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-12 09:13:09,089 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-12 09:13:09,090 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-12 09:13:09,090 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2412528980739213811.xml
2016-08-12 09:13:09,092 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2412528980739213811.xml hdfs = false
2016-08-12 09:13:09,092 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2412528980739213811.xml
2016-08-12 09:13:09,094 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 09:13:09,094 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 09:13:09,095 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:09,095 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:09,095 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 09:13:09,095 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 09:13:09,095 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-12 09:13:09,096 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile4001180896787176621.xml
2016-08-12 09:13:09,096 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile4001180896787176621.xml
2016-08-12 09:13:09,097 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-12 09:13:09,097 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-12 09:13:09,097 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-12 09:13:09,098 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-12 09:13:09,099 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile4001180896787176621.xml
2016-08-12 09:13:09,099 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile4001180896787176621.xml
2016-08-12 09:13:09,100 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 09:13:09,101 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-12 09:13:09,101 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-12 09:13:09,101 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-12 09:13:09,101 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-12 12:51:03,833 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-12 12:51:03,837 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-12 12:51:03,840 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-12 12:51:03,841 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-12 12:51:03,841 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-12 12:51:03,841 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-12 12:51:03,842 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-12 12:51:03,842 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-12 12:51:03,849 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-12 12:51:03,850 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-12 12:51:03,850 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-12 12:51:03,850 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-12 12:51:03,851 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-12 12:51:03,851 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-12 12:51:03,852 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-12 12:51:03,852 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-12 12:51:03,852 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-12 12:51:03,852 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-12 12:51:03,853 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-12 12:51:03,854 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-12 12:51:03,854 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-12 12:51:03,855 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-12 12:51:03,855 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-12 12:51:03,945 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-12 12:51:03,946 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-12 12:51:03,946 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-12 12:51:03,946 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-12 12:51:03,947 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-12 12:51:03,947 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-12 12:51:03,947 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-12 12:51:03,950 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-12 12:51:03,952 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-12 12:51:03,958 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-12 12:51:03,960 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-12 12:51:03,961 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-12 12:51:03,963 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 12:51:03,964 INFO  general.PaillierTest  [] - i = 0
2016-08-12 12:51:03,969 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-12 12:51:04,015 INFO  encryption.Paillier  [] - Parameters = p = -565903277 q = -703853457 N = 30607357 NSquared = 625856521 lambdaN = -1497301602 bitLength = 201
2016-08-12 12:51:04,063 INFO  general.PaillierTest  [] - encM1 = -370991676 encM2 = 997323642
2016-08-12 12:51:04,063 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:51:04,064 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1309505378 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:51:07,653 INFO  encryption.Paillier  [] - Parameters = p = -197852117 q = -22363765 N = -8671655 NSquared = 1313020657 lambdaN = 105772114 bitLength = 3072
2016-08-12 12:51:07,774 INFO  general.PaillierTest  [] - encM1 = 884762151 encM2 = 386183858
2016-08-12 12:51:07,889 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:51:07,948 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1339820826 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:51:53,602 INFO  encryption.Paillier  [] - Parameters = p = 1822175561 q = -1058646983 N = 1988685121 NSquared = -588158335 lambdaN = -1457468168 bitLength = 6109
2016-08-12 12:51:54,522 INFO  general.PaillierTest  [] - encM1 = 1715822255 encM2 = -1218069223
2016-08-12 12:51:55,435 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:51:55,909 INFO  general.PaillierTest  [] - encM1_times_encM2 = 143297869 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:51:55,910 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 12:51:55,910 INFO  general.PaillierTest  [] - i = 0
2016-08-12 12:51:55,915 INFO  encryption.Paillier  [] - testBit true
 N = 10001111000111101001000011011111011011001001111110011100001100110011110101110000100111111110000100000000111010100001110101001010010010011000110011011011010100010000010111000011010100011111101001111111
2016-08-12 12:51:55,916 INFO  encryption.Paillier  [] - Parameters = p = -965389833 q = 244611513 N = -1018037633 NSquared = -210089215 lambdaN = 666284664 bitLength = 201
2016-08-12 12:51:55,916 INFO  general.PaillierTest  [] - encM1 = -468760112 encM2 = 1743424934
2016-08-12 12:51:55,917 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:51:55,917 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1442184219 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:51:58,103 INFO  encryption.Paillier  [] - testBit true

2016-08-12 12:51:58,106 INFO  encryption.Paillier  [] - Parameters = p = -477823585 q = -1522447875 N = -1491075805 NSquared = -221760823 lambdaN = 1516521708 bitLength = 3072
2016-08-12 12:51:58,224 INFO  general.PaillierTest  [] - encM1 = 1877746442 encM2 = -796165212
2016-08-12 12:51:58,346 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:51:58,406 INFO  general.PaillierTest  [] - encM1_times_encM2 = 519131156 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:52:25,318 INFO  encryption.Paillier  [] - testBit true

2016-08-12 12:52:25,329 INFO  encryption.Paillier  [] - Parameters = p = 613492627 q = 134983723 N = 988263857 NSquared = -1704868767 lambdaN = -2027589894 bitLength = 6697
2016-08-12 12:52:26,489 INFO  general.PaillierTest  [] - encM1 = 214393528 encM2 = 81161767
2016-08-12 12:52:27,649 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:52:28,220 INFO  general.PaillierTest  [] - encM1_times_encM2 = -628786813 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:52:28,220 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 12:52:28,220 INFO  general.PaillierTest  [] - i = 0
2016-08-12 12:52:28,225 INFO  encryption.Paillier  [] - Parameters = p = -1681743299 q = -2120243061 N = -838263009 NSquared = 402032065 lambdaN = 493953892 bitLength = 201
2016-08-12 12:52:28,225 INFO  general.PaillierTest  [] - encM1 = 1700823238 encM2 = 1713940609
2016-08-12 12:52:28,225 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:52:28,225 INFO  general.PaillierTest  [] - encM1_times_encM2 = -748927748 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:52:31,274 INFO  encryption.Paillier  [] - Parameters = p = 645527881 q = -846693781 N = 428866435 NSquared = -1988877047 lambdaN = -1832467480 bitLength = 3072
2016-08-12 12:52:31,396 INFO  general.PaillierTest  [] - encM1 = -1934661646 encM2 = -884224567
2016-08-12 12:52:31,511 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:52:31,565 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1203928047 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:52:44,930 INFO  encryption.Paillier  [] - Parameters = p = 60864491 q = -508108403 N = -1925392529 NSquared = -145513951 lambdaN = -739074308 bitLength = 5781
2016-08-12 12:52:45,723 INFO  general.PaillierTest  [] - encM1 = -1190090209 encM2 = -885624024
2016-08-12 12:52:46,479 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:52:46,856 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1387469347 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:52:46,856 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 12:52:46,857 INFO  general.PaillierTest  [] - i = 0
2016-08-12 12:52:46,861 INFO  encryption.Paillier  [] - testBit false
 N = 10010000101110110011110000010010100000000010011001000100111110011101110011001110010011011101110101000010110000001100101010010000111001110011011001110011001101000111000010010110000011001111110001011001
2016-08-12 12:52:46,863 INFO  encryption.Paillier  [] - testBit false
 N = 10111001101000010010100100110001011100000110110101010100111011111101110111111111100110101100011011011101101111011001101100010010001011100101010010001010010001000110111001000110101101001001001101000001
2016-08-12 12:52:46,867 INFO  encryption.Paillier  [] - testBit true
 N = 10111111101110100011110010111000011101101001010101001101110010011100000110000001101101000110010000011111111111001110010011011010110001100001100100010100110110100111010011100100010001010100001001100101
2016-08-12 12:52:46,867 INFO  encryption.Paillier  [] - Parameters = p = -1422721675 q = 422896433 N = -465223067 NSquared = -1012253735 lambdaN = -2013833104 bitLength = 201
2016-08-12 12:52:46,868 INFO  general.PaillierTest  [] - encM1 = 1603679525 encM2 = -1805561629
2016-08-12 12:52:46,868 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:52:46,868 INFO  general.PaillierTest  [] - encM1_times_encM2 = 566951720 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:52:48,995 INFO  encryption.Paillier  [] - testBit false

2016-08-12 12:52:52,751 INFO  encryption.Paillier  [] - testBit false

2016-08-12 12:52:55,397 INFO  encryption.Paillier  [] - testBit false

2016-08-12 12:52:57,517 INFO  encryption.Paillier  [] - testBit true

2016-08-12 12:52:57,520 INFO  encryption.Paillier  [] - Parameters = p = 880972901 q = -1653937701 N = 664199015 NSquared = -240608399 lambdaN = 718581908 bitLength = 3072
2016-08-12 12:52:57,642 INFO  general.PaillierTest  [] - encM1 = 1428425345 encM2 = -481801014
2016-08-12 12:52:57,781 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:52:57,840 INFO  general.PaillierTest  [] - encM1_times_encM2 = 457423700 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:39,264 INFO  encryption.Paillier  [] - testBit true

2016-08-12 12:53:39,275 INFO  encryption.Paillier  [] - Parameters = p = -98639801 q = -1214236581 N = -1754709699 NSquared = -1968568183 lambdaN = -740374178 bitLength = 6537
2016-08-12 12:53:40,401 INFO  general.PaillierTest  [] - encM1 = -1967311313 encM2 = -38368833
2016-08-12 12:53:41,522 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:42,207 INFO  general.PaillierTest  [] - encM1_times_encM2 = 937674771 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:42,208 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 12:53:42,209 INFO  general.PaillierTest  [] - i = 0
2016-08-12 12:53:42,218 INFO  encryption.Paillier  [] - Parameters = p = 1569670693 q = -703313299 N = -1456762943 NSquared = 1838100353 lambdaN = -1654521908 bitLength = 201
2016-08-12 12:53:42,219 INFO  general.PaillierTest  [] - encM1 = 2132397752 encM2 = -1826271400
2016-08-12 12:53:42,219 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:42,219 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1454472214 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:44,757 INFO  encryption.Paillier  [] - Parameters = p = 2129482263 q = 1392049203 N = -899809643 NSquared = 426640057 lambdaN = 2084296742 bitLength = 3072
2016-08-12 12:53:44,873 INFO  general.PaillierTest  [] - encM1 = 196693056 encM2 = -155976941
2016-08-12 12:53:44,995 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:45,053 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1300344755 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:51,181 INFO  encryption.Paillier  [] - Parameters = p = 1424231929 q = -1473250673 N = 432011287 NSquared = -1598123503 lambdaN = -1906968632 bitLength = 3242
2016-08-12 12:53:51,331 INFO  general.PaillierTest  [] - encM1 = 1479911326 encM2 = -1647696300
2016-08-12 12:53:51,484 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:51,556 INFO  general.PaillierTest  [] - encM1_times_encM2 = 848780265 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:51,557 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 12:53:51,557 INFO  general.PaillierTest  [] - i = 0
2016-08-12 12:53:51,559 INFO  encryption.Paillier  [] - testBit true
 N = 10111000000101001000000011110001100000010100110011000100110100010011000011110110111010110100111100011000001101101010110111101011100110010111001110001100100101100110010000001011101110111100010001111011
2016-08-12 12:53:51,560 INFO  encryption.Paillier  [] - Parameters = p = -1032534053 q = -289576991 N = 196854907 NSquared = 880710425 lambdaN = -1388000672 bitLength = 201
2016-08-12 12:53:51,560 INFO  general.PaillierTest  [] - encM1 = -127324037 encM2 = 581466081
2016-08-12 12:53:51,561 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:51,561 INFO  general.PaillierTest  [] - encM1_times_encM2 = 629670126 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:52,563 INFO  encryption.Paillier  [] - testBit true

2016-08-12 12:53:52,565 INFO  encryption.Paillier  [] - Parameters = p = 1207702763 q = 26885349 N = -104609225 NSquared = -1383802927 lambdaN = 1477884980 bitLength = 3072
2016-08-12 12:53:52,687 INFO  general.PaillierTest  [] - encM1 = 1098799064 encM2 = 1407609278
2016-08-12 12:53:52,815 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:52,875 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2047782112 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:55,256 INFO  encryption.Paillier  [] - testBit true

2016-08-12 12:53:55,258 INFO  encryption.Paillier  [] - Parameters = p = -982964261 q = -2104666715 N = 1352754983 NSquared = 1218340849 lambdaN = 72709332 bitLength = 4102
2016-08-12 12:53:55,537 INFO  general.PaillierTest  [] - encM1 = -1466617930 encM2 = 1202191189
2016-08-12 12:53:55,813 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:55,951 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1461629037 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:55,952 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 12:53:55,952 INFO  general.PaillierTest  [] - i = 0
2016-08-12 12:53:55,955 INFO  encryption.Paillier  [] - Parameters = p = 437931877 q = 2105176951 N = 453461747 NSquared = 921946793 lambdaN = 1083381252 bitLength = 201
2016-08-12 12:53:55,956 INFO  general.PaillierTest  [] - encM1 = 1874473982 encM2 = 1227732037
2016-08-12 12:53:55,956 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:55,956 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1381398530 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:58,191 INFO  encryption.Paillier  [] - Parameters = p = -1583144339 q = 1899889673 N = -1364465195 NSquared = -1004311751 lambdaN = -420302632 bitLength = 3072
2016-08-12 12:53:58,313 INFO  general.PaillierTest  [] - encM1 = -363449404 encM2 = -2055068301
2016-08-12 12:53:58,456 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:58,517 INFO  general.PaillierTest  [] - encM1_times_encM2 = 554101560 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:59,408 INFO  encryption.Paillier  [] - Parameters = p = -2000309679 q = -1612823611 N = -284464299 NSquared = 474884665 lambdaN = 832167248 bitLength = 3506
2016-08-12 12:53:59,581 INFO  general.PaillierTest  [] - encM1 = -1628926232 encM2 = 153049661
2016-08-12 12:53:59,751 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:59,838 INFO  general.PaillierTest  [] - encM1_times_encM2 = -549994312 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:53:59,838 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 12:53:59,838 INFO  general.PaillierTest  [] - i = 0
2016-08-12 12:53:59,846 INFO  encryption.Paillier  [] - testBit false
 N = 11000110001101001011110000010011001101101100011111101111100010011110001110110110001000101101101001001101010101011010111001000101101000100010100001111100001111001000100010110100001011100010001110010011
2016-08-12 12:53:59,847 INFO  encryption.Paillier  [] - testBit true
 N = 11010001110111110010101111111011001000101111111000010010110011100111111010111111101000100011100111010001001111111010110110100000101101010100011111111111010001011000000100000011101000111000001100100101
2016-08-12 12:53:59,848 INFO  encryption.Paillier  [] - Parameters = p = -1130672311 q = -1880299267 N = 61047589 NSquared = 575464281 lambdaN = 768004792 bitLength = 201
2016-08-12 12:53:59,848 INFO  general.PaillierTest  [] - encM1 = -955541155 encM2 = -776065812
2016-08-12 12:53:59,848 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:53:59,848 INFO  general.PaillierTest  [] - encM1_times_encM2 = 972376849 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:54:01,063 INFO  encryption.Paillier  [] - testBit true

2016-08-12 12:54:01,065 INFO  encryption.Paillier  [] - Parameters = p = -1922472417 q = 1314515173 N = -157584965 NSquared = 1324916377 lambdaN = -1922297508 bitLength = 3072
2016-08-12 12:54:01,181 INFO  general.PaillierTest  [] - encM1 = 2102805979 encM2 = -1643674471
2016-08-12 12:54:01,303 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:54:01,368 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1732294704 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:54:06,042 INFO  encryption.Paillier  [] - testBit true
 N = 1010010111001111010110111101111101111010001110101100110001100000110010010001001101010010111011011101011001001110101010101101001110101011000111110110010111101100100110010010011101000111001111010111010011000001001010101010000001000100111001110011001011110101110101000000110110010111001100000110100110011110111111000001001111011110111011101001101001011001011101110000000010101010110001100000000001011110110000011111101110110110111010111111110110100000100100000000011001001010010111010011011101011111011100000001100100010101111010010001110110001011111001010001000111110010101110010000100001110110110001100110101100001110100010001100101111101010011110111110111101011001101101111000101000011101010011101110100011000011101111000010010101010010011000100110111100110000101010000111010000100111100000100101111011000101011010111110110011100011101010000110010011011110011101010001010110001000011111001100100110011110000010110100111011001010100010001100110011111101011111010010101011000100000001000111010111011000001011111011101101100111011001100001110010010001101100110000100001110000100011110100101100001100011010001100110001111010110110011000111011111010001010000101111101001100001110011000101000111001101010011000010000001001001100110110000000100011000010100101100111110111101101000010110000111111011000101111101010101001111111101101010101101010000101101110010000101011110000011011000011101100110110001111000111001110000011100001110101011011111100100001100101000001111101010101110000101010110100001100010111011101100001000100100111101110101110011010101111010001000100111000111011011111110010110100100101000111010011111101011101111001111000110000101110000100011101010111111010001010011001101001011001110100111001100110001110110110110110011011101010001001000110101101000000000010110010001001110001000001000001001000100101001011111111110110010110100110001111100010000010110110000000001001100110000011101001011000111010100010100100000110010100011101111110111011000000011110010101111100110100101100100010010101110010011000001000001100101100111010110001010110100000101110111101000111000101000010011001100011011111011001011110001110110111010101101010001101011011111111111111010000000001010100101000001001011000111101001001000001011001000000011010111110001110100001110100100000110110111100011101111100011100111001110110010001100101011001100111001110000110111110111110111011111101110001001111010011110001101111110110101100011001100011100001011101101111011110000100001001111001000000100010101001011110000100011001010011010101100100011011001110100000000010100010010100101110010000111010100110100110010101000100101101000101010011101001101001110010001111010001000010111101111101001000000111000011010101001001110110000100100000000000100101000110110010000011111101111110100111101110011011100011010000011101001010000001110101011101000110010101001000111000000110100011111010000011011100000101010001100111101011110110110001110111010010100011111011010101110110111101000010001101000110110100100011010101111101010000001000111100000100000011111100101010001110010010110100001010010100111010101010101100110001010010011111101100100010110011010011100000001000111000100111011100011011111110011100011010001110010010000100101000111110100110101001010111100011101100100101010001101100100100110000011010001100101000010011111111110111100010011100011001011001010101011001110110111100100101011001100010000100100011110111110100001001001111010011111110101001100111101001100010011100110111001010110100000101100000110101110000111100100000000000001010101100001000011111111001101010010011111011101100110100101110101110001000001110011111001000001000100001110110011001001100010000000001000011001000111000101000011001010111100010010000111010100100010010010011011100110110011100001111110001010010100001100111101100001110011011110111111111011001011011000011010001101110011011011010001101101101100010101111110100010110101111010110100010100110110000000011011111100111011000001100110110111111010111000000110000010001101001011100111111001110011000001110100111100100001110101010101011001101101101111111000100100110101100101011110011101000011111111100111100011000111000100110011010111001100100000101001010101010110001001110111010100000100100001000101000110110110011011001010100011000000000111011111110000110110110010010100011101011100010101000111100110001010110001001101100111001010010000110101101110010001010011000110000001000110001000000000001110010010110101011010101011011111011011111010001100101010101101111111011100101111100010100001110000111000001110100011111111100010011100100011000111110100101001100110011111011101011101101
2016-08-12 12:54:06,046 INFO  encryption.Paillier  [] - Parameters = p = 1477607355 q = 522838391 N = 1288682221 NSquared = -1950138519 lambdaN = 421588246 bitLength = 4571
2016-08-12 12:54:06,426 INFO  general.PaillierTest  [] - encM1 = -974279065 encM2 = -1335028806
2016-08-12 12:54:06,813 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:54:07,000 INFO  general.PaillierTest  [] - encM1_times_encM2 = -744106583 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 12:54:07,000 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-12 12:54:07,004 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-12 12:54:07,005 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-12 12:54:07,006 INFO  general.PaillierTest  [] - Ending testPaillierWithKeyGeneration: 
2016-08-12 12:54:07,010 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-12 12:54:07,013 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-12 12:54:07,014 INFO  general.PaillierTest  [] - Starting testPaillierGivenAllParameters: 
2016-08-12 12:54:07,015 INFO  encryption.Paillier  [] - Parameters = p = 7 q = 17 N = 119 NSquared = 14161 lambdaN = 48 bitLength = 201
2016-08-12 12:54:07,016 INFO  general.PaillierTest  [] - encM1 = 14019 encM2 = 8836
2016-08-12 12:54:07,016 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 12:54:07,016 INFO  general.PaillierTest  [] - encM1_times_encM2 = 5617 encM1plusM2 = 5617
2016-08-12 12:54:07,016 INFO  general.PaillierTest  [] - Successfully completed testPaillierGivenAllParameters: 
2016-08-12 12:54:07,022 INFO  general.PartitionUtilsTest  [] - Starting testMask: 
2016-08-12 12:54:07,023 INFO  general.PartitionUtilsTest  [] - Successfully completed testMask
2016-08-12 12:54:07,023 INFO  general.PartitionUtilsTest  [] - Starting testToPartitions:
2016-08-12 12:54:07,026 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 10
2016-08-12 12:54:07,026 INFO  general.PartitionUtilsTest  [] - testString.getBytes().length = 1
2016-08-12 12:54:07,027 INFO  general.PartitionUtilsTest  [] - Sucessfully completed testToPartitions:
2016-08-12 12:54:07,028 INFO  general.PartitionUtilsTest  [] - Starting testPartitionBits: 
2016-08-12 12:54:07,029 INFO  general.PartitionUtilsTest  [] - Successfully completed testPartitionBits
2016-08-12 12:54:07,039 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2456602012650497072.xml
2016-08-12 12:54:07,087 INFO  data.DataSchemaLoader  [] - Loading pre-configured data schemas: 
2016-08-12 12:54:07,088 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2456602012650497072.xml hdfs = false
2016-08-12 12:54:07,088 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2456602012650497072.xml
2016-08-12 12:54:07,091 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,093 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-12 12:54:07,094 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 12:54:07,094 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,094 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,095 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,095 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,095 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,096 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,096 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2456602012650497072.xml hdfs = false
2016-08-12 12:54:07,096 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile2456602012650497072.xml
2016-08-12 12:54:07,099 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,099 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-12 12:54:07,100 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 12:54:07,100 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,100 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,100 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,101 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,101 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,101 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,101 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-12 12:54:07,102 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml
2016-08-12 12:54:07,103 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml
2016-08-12 12:54:07,105 INFO  utils.TestUtils    [] - elementName = date
2016-08-12 12:54:07,107 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 12:54:07,109 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:07,110 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-12 12:54:07,110 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-12 12:54:07,110 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 12:54:07,114 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-12 12:54:07,114 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8160824003801090064.xml
2016-08-12 12:54:07,114 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8160824003801090064.xml
2016-08-12 12:54:07,116 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 12:54:07,116 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:07,116 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 12:54:07,118 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-12 12:54:07,118 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7861612515244244701.xml
2016-08-12 12:54:07,119 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8160824003801090064.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7861612515244244701.xml
2016-08-12 12:54:07,120 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 12:54:07,120 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 12:54:07,121 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:07,122 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-12 12:54:07,122 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5239071482127276681.xml
2016-08-12 12:54:07,123 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8160824003801090064.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7861612515244244701.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5239071482127276681.xml
2016-08-12 12:54:07,124 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 12:54:07,124 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:07,124 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 12:54:07,126 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-12 12:54:07,127 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5813418189270399986.xml
2016-08-12 12:54:07,127 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8160824003801090064.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7861612515244244701.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5239071482127276681.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5813418189270399986.xml
2016-08-12 12:54:07,128 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 12:54:07,129 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:07,129 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 12:54:07,133 INFO  query.QuerySchemaLoader  [] - Loading query schemas: 
2016-08-12 12:54:07,133 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml
2016-08-12 12:54:07,134 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml
2016-08-12 12:54:07,136 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,137 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-12 12:54:07,137 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,137 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 12:54:07,137 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 12:54:07,138 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-12 12:54:07,138 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,138 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:07,138 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,138 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 12:54:07,139 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,139 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-12 12:54:07,139 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,139 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-12 12:54:07,140 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,140 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-12 12:54:07,141 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8160824003801090064.xml
2016-08-12 12:54:07,142 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8160824003801090064.xml
2016-08-12 12:54:07,143 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,144 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-12 12:54:07,144 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,144 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-12 12:54:07,144 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,144 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-12 12:54:07,145 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,145 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-12 12:54:07,145 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,145 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-12 12:54:07,145 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7861612515244244701.xml
2016-08-12 12:54:07,146 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7861612515244244701.xml
2016-08-12 12:54:07,147 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,148 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-12 12:54:07,148 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,148 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 12:54:07,148 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,148 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 12:54:07,148 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,148 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:07,149 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,149 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 12:54:07,149 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5239071482127276681.xml
2016-08-12 12:54:07,149 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5239071482127276681.xml
2016-08-12 12:54:07,151 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,152 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-12 12:54:07,152 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,152 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 12:54:07,152 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,152 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 12:54:07,153 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,153 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:07,153 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,153 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 12:54:07,153 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5813418189270399986.xml
2016-08-12 12:54:07,153 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5813418189270399986.xml
2016-08-12 12:54:07,156 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,157 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-12 12:54:07,157 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,157 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 12:54:07,157 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,157 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 12:54:07,158 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,158 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:07,158 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,158 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 12:54:07,158 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml
2016-08-12 12:54:07,159 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file7765985303774018597.xml
2016-08-12 12:54:07,161 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,161 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-12 12:54:07,161 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,162 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 12:54:07,162 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 12:54:07,162 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-12 12:54:07,162 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,162 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:07,162 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,163 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 12:54:07,163 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,163 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-12 12:54:07,163 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,163 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-12 12:54:07,164 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,164 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-12 12:54:07,164 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8160824003801090064.xml
2016-08-12 12:54:07,164 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file8160824003801090064.xml
2016-08-12 12:54:07,167 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,167 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-12 12:54:07,167 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,167 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-12 12:54:07,168 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,168 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-12 12:54:07,168 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,168 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-12 12:54:07,168 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,168 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-12 12:54:07,169 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7861612515244244701.xml
2016-08-12 12:54:07,169 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file7861612515244244701.xml
2016-08-12 12:54:07,171 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,171 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-12 12:54:07,171 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,171 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 12:54:07,171 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,172 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 12:54:07,172 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,172 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:07,172 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,172 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 12:54:07,172 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5239071482127276681.xml
2016-08-12 12:54:07,173 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file5239071482127276681.xml
2016-08-12 12:54:07,175 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,175 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-12 12:54:07,175 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,175 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 12:54:07,175 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,175 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 12:54:07,176 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,176 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:07,176 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,176 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 12:54:07,176 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5813418189270399986.xml
2016-08-12 12:54:07,177 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file5813418189270399986.xml
2016-08-12 12:54:07,179 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,179 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-12 12:54:07,179 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:07,179 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 12:54:07,179 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,180 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 12:54:07,180 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,180 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:07,180 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,180 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 12:54:07,241 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,241 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,242 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,242 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,243 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,244 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-12 12:54:07,244 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,244 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-12 12:54:07,244 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,245 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-12 12:54:07,245 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,245 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-12 12:54:07,246 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,246 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-12 12:54:07,246 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,246 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-12 12:54:07,247 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,247 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-12 12:54:07,247 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,247 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-12 12:54:07,248 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,248 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,248 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,248 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,249 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,249 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-12 12:54:07,249 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,249 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-12 12:54:07,250 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,250 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,250 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,250 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,251 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,251 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-12 12:54:07,251 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,251 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-12 12:54:07,252 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,252 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-12 12:54:07,252 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,252 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-12 12:54:07,253 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,253 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-12 12:54:07,253 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,253 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-12 12:54:07,254 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,254 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-12 12:54:07,254 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,254 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-12 12:54:07,257 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,258 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,259 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,259 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,260 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,262 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-12 12:54:07,262 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,263 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-12 12:54:07,264 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,265 INFO  utils.QueryParserUtils  [] - query:2014-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,266 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,266 INFO  utils.QueryParserUtils  [] - ranges[0] = 2014-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,268 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,269 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-04-20T23:29:05.000Z
2016-08-12 12:54:07,269 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,269 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-04-20T23:29:05.000Z
2016-08-12 12:54:07,270 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,270 INFO  utils.QueryParserUtils  [] - query:2016-02-20T23:29:05.000Z+TO+2017-02-20T23:29:05.000Z
2016-08-12 12:54:07,270 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,271 INFO  utils.QueryParserUtils  [] - ranges[0] = 2016-02-20T23:29:05.000Z ranges[1] = 2017-02-20T23:29:05.000Z
2016-08-12 12:54:07,271 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,271 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2016-02-20T23:30:05.000Z
2016-08-12 12:54:07,272 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,272 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2016-02-20T23:30:05.000Z
2016-08-12 12:54:07,273 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,273 INFO  utils.QueryParserUtils  [] - query:2013-05-05T20:33:07.000Z+TO+2014-07-05T20:33:07.000Z
2016-08-12 12:54:07,273 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,273 INFO  utils.QueryParserUtils  [] - ranges[0] = 2013-05-05T20:33:07.000Z ranges[1] = 2014-07-05T20:33:07.000Z
2016-08-12 12:54:07,274 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,275 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,275 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,275 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,276 INFO  utils.QueryParserUtils  [] - inclusive = false field = date query = {2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z} value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,276 INFO  utils.QueryParserUtils  [] - query:2015-06-05T20:33:07.000Z+TO+2015-07-05T20:33:07.000Z
2016-08-12 12:54:07,276 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,276 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-06-05T20:33:07.000Z ranges[1] = 2015-07-05T20:33:07.000Z
2016-08-12 12:54:07,281 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-12 12:54:07,282 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-12 12:54:07,282 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-12 12:54:07,283 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-12 12:54:07,283 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-12 12:54:07,283 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-12 12:54:07,284 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-12 12:54:07,284 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-12 12:54:07,284 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-12 12:54:07,285 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-12 12:54:07,285 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [0+TO+2] value = 0
2016-08-12 12:54:07,285 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {-1+TO+2} value = 0
2016-08-12 12:54:07,286 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [-1+TO+0] value = 0
2016-08-12 12:54:07,286 INFO  utils.QueryParserUtils  [] - inclusive = false field = rcode query = {0+TO+3} value = 0
2016-08-12 12:54:07,286 INFO  utils.QueryParserUtils  [] - inclusive = true field = rcode query = [3+TO+10] value = 0
2016-08-12 12:54:07,287 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-12 12:54:07,287 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-12 12:54:07,287 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-12 12:54:07,288 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-12 12:54:07,288 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-12 12:54:07,288 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-12 12:54:07,288 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-12 12:54:07,288 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-12 12:54:07,289 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,289 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,289 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,289 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,289 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,289 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,289 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-12 12:54:07,290 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-12 12:54:07,290 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 12:54:07,290 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,290 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,290 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,290 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,290 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,291 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,291 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,291 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-12 12:54:07,291 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-12 12:54:07,291 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,292 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,292 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,292 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,292 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,292 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,292 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-12 12:54:07,293 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-12 12:54:07,293 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-12 12:54:07,293 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-12 12:54:07,293 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,294 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 12:54:07,294 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-12 12:54:07,294 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,294 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 12:54:07,294 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-12 12:54:07,294 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,295 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 12:54:07,295 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-12 12:54:07,295 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 12:54:07,295 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-12 12:54:07,295 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 12:54:07,305 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-12 12:54:07,306 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-12 12:54:07,306 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-12 12:54:07,306 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-12 12:54:07,307 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-12 12:54:07,307 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-12 12:54:07,307 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-12 12:54:07,307 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-12 12:54:07,308 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,308 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,308 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,308 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,308 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,308 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,309 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-12 12:54:07,309 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-12 12:54:07,309 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 12:54:07,309 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,310 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,310 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,310 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,310 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,312 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,312 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,312 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-12 12:54:07,313 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-12 12:54:07,313 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,313 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,313 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,313 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,314 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,314 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,314 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-12 12:54:07,314 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-12 12:54:07,314 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-12 12:54:07,315 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-12 12:54:07,315 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,315 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 12:54:07,315 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-12 12:54:07,315 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,316 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 12:54:07,316 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-12 12:54:07,316 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,316 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 12:54:07,316 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-12 12:54:07,316 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 12:54:07,316 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-12 12:54:07,317 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 12:54:07,317 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-12 12:54:07,317 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-12 12:54:07,317 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-12 12:54:07,317 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,318 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-12 12:54:07,318 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,318 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-12 12:54:07,318 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,318 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-12 12:54:07,318 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 12:54:07,318 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-12 12:54:07,319 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-12 12:54:07,319 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-12 12:54:07,320 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,320 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-12 12:54:07,320 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,320 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-12 12:54:07,320 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,320 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-12 12:54:07,320 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+173.248.255.255] value = 55.55.55.55
2016-08-12 12:54:07,321 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 173.248.255.255
2016-08-12 12:54:07,321 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 173
2016-08-12 12:54:07,321 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 248
2016-08-12 12:54:07,322 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 255
2016-08-12 12:54:07,322 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 255
2016-08-12 12:54:07,322 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.0+TO+55.55.55.100] value = 55.55.55.55
2016-08-12 12:54:07,322 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.0 ranges[1] = 55.55.55.100
2016-08-12 12:54:07,322 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,322 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,322 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,323 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,323 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,323 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,323 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 100
2016-08-12 12:54:07,323 INFO  utils.QueryParserUtils  [] - inclusive = true field = src_ip query = [55.55.55.2+TO+55.55.55.55] value = 55.55.55.55
2016-08-12 12:54:07,323 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 12:54:07,324 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,324 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,324 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,324 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,324 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,324 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,324 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,325 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.57} value = 55.55.55.55
2016-08-12 12:54:07,325 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.57
2016-08-12 12:54:07,325 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,325 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,326 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,326 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,326 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 55 blocksUpper[ipBlock] = 55
2016-08-12 12:54:07,326 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,326 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 2 blocksUpper[ipBlock] = 57
2016-08-12 12:54:07,327 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {173.248.188.0+TO+173.248.188.10} value = 55.55.55.55
2016-08-12 12:54:07,327 INFO  utils.QueryParserUtils  [] - ranges[0] = 173.248.188.0 ranges[1] = 173.248.188.10
2016-08-12 12:54:07,328 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 173 blocksUpper[ipBlock] = 173
2016-08-12 12:54:07,328 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,328 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 12:54:07,329 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 248 blocksUpper[ipBlock] = 248
2016-08-12 12:54:07,329 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,329 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 12:54:07,329 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 188 blocksUpper[ipBlock] = 188
2016-08-12 12:54:07,329 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,329 INFO  utils.QueryParserUtils  [] - !ipValue[ipBlock].equals(blocksLower[ipBlock]
2016-08-12 12:54:07,330 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 55 blocksLower[ipBlock] = 0 blocksUpper[ipBlock] = 10
2016-08-12 12:54:07,330 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 12:54:07,330 INFO  utils.QueryParserUtils  [] - inclusive = false field = src_ip query = {55.55.55.2+TO+55.55.55.55} value = 55.55.55.55
2016-08-12 12:54:07,330 INFO  utils.QueryParserUtils  [] - ranges[0] = 55.55.55.2 ranges[1] = 55.55.55.55
2016-08-12 12:54:07,331 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.40
2016-08-12 12:54:07,331 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-12 12:54:07,332 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-12 12:54:07,332 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,333 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-12 12:54:07,333 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,333 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-12 12:54:07,333 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,334 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 40 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-12 12:54:07,334 INFO  utils.QueryParserUtils  [] - IP block not within given range
2016-08-12 12:54:07,334 INFO  utils.QueryParserUtils  [] - inclusive = true field = ip query = [10.20.30.50+TO+10.20.30.69] value = 10.20.30.60
2016-08-12 12:54:07,335 INFO  utils.QueryParserUtils  [] - ranges[0] = 10.20.30.50 ranges[1] = 10.20.30.69
2016-08-12 12:54:07,335 INFO  utils.QueryParserUtils  [] - ipBlock = 0 ipValue[ipBlock] = 10 blocksLower[ipBlock] = 10 blocksUpper[ipBlock] = 10
2016-08-12 12:54:07,335 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,335 INFO  utils.QueryParserUtils  [] - ipBlock = 1 ipValue[ipBlock] = 20 blocksLower[ipBlock] = 20 blocksUpper[ipBlock] = 20
2016-08-12 12:54:07,335 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,336 INFO  utils.QueryParserUtils  [] - ipBlock = 2 ipValue[ipBlock] = 30 blocksLower[ipBlock] = 30 blocksUpper[ipBlock] = 30
2016-08-12 12:54:07,336 INFO  utils.QueryParserUtils  [] - blocksLower[ipBlock].equals(blocksUpper[ipBlock])
2016-08-12 12:54:07,336 INFO  utils.QueryParserUtils  [] - ipBlock = 3 ipValue[ipBlock] = 60 blocksLower[ipBlock] = 50 blocksUpper[ipBlock] = 69
2016-08-12 12:54:07,337 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,338 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,338 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,339 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,340 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,340 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,340 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,340 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,341 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,342 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,342 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,342 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,345 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,346 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,346 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,346 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,347 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,347 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,347 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,348 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,349 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,349 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,349 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,350 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,350 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,351 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,351 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,351 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,352 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,352 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,352 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,352 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,352 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,353 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,353 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,353 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,353 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,354 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,354 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,354 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,354 INFO  utils.QueryParserUtils  [] - inclusive = true field = date query = [2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z] value = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,354 INFO  utils.QueryParserUtils  [] - query:2015-05-05T20:33:07.000Z+TO+2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,355 INFO  utils.QueryParserUtils  [] - value:2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,355 INFO  utils.QueryParserUtils  [] - ranges[0] = 2015-05-05T20:33:07.000Z ranges[1] = 2016-02-20T23:29:05.000Z
2016-08-12 12:54:07,356 INFO  general.QueryParserUtilsTest  [] - running testIgnoreCase
2016-08-12 12:54:07,356 INFO  general.QueryParserUtilsTest  [] - completed testIgnoreCase
2016-08-12 12:54:07,357 INFO  general.QueryParserUtilsTest  [] - running testQueryFieldDoesNotExist
2016-08-12 12:54:07,358 INFO  general.QueryParserUtilsTest  [] - completed testQueryFieldDoesNotExist
2016-08-12 12:54:07,361 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6561262864683680646.xml
2016-08-12 12:54:07,363 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6561262864683680646.xml hdfs = false
2016-08-12 12:54:07,364 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/unknownPartitioner6561262864683680646.xml
2016-08-12 12:54:07,365 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,365 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 12:54:07,366 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile3886333649963432385.xml
2016-08-12 12:54:07,370 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile3886333649963432385.xml hdfs = false
2016-08-12 12:54:07,370 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/schemaFile3886333649963432385.xml
2016-08-12 12:54:07,371 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,372 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 12:54:07,372 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,372 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,372 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,373 INFO  data.LoadDataSchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6228072830076495441.xml
2016-08-12 12:54:07,376 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6228072830076495441.xml hdfs = false
2016-08-12 12:54:07,376 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/wrongJavaType6228072830076495441.xml
2016-08-12 12:54:07,377 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,377 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 12:54:07,380 INFO  query.LoadQuerySchemaTest  [] - Starting testDataSchemaDoesNotExist: 
2016-08-12 12:54:07,381 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-12 12:54:07,381 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile9148716275356975950.xml
2016-08-12 12:54:07,381 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile9148716275356975950.xml
2016-08-12 12:54:07,382 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-12 12:54:07,382 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-12 12:54:07,382 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-12 12:54:07,384 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile9148716275356975950.xml
2016-08-12 12:54:07,384 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile9148716275356975950.xml
2016-08-12 12:54:07,385 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,386 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-12 12:54:07,386 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-12 12:54:07,386 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-12 12:54:07,386 INFO  query.LoadQuerySchemaTest  [] - Finished testDataSchemaDoesNotExist 
2016-08-12 12:54:07,387 INFO  query.LoadQuerySchemaTest  [] - Starting testGeneralSchemaLoad: 
2016-08-12 12:54:07,387 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-12 12:54:07,387 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile577055278562997724.tmp
2016-08-12 12:54:07,388 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7794888189012839965.xml
2016-08-12 12:54:07,390 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7794888189012839965.xml hdfs = false
2016-08-12 12:54:07,391 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile7794888189012839965.xml
2016-08-12 12:54:07,392 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,393 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 12:54:07,393 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,393 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,393 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,393 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,394 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-12 12:54:07,395 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile855712792387476215.xml
2016-08-12 12:54:07,395 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile855712792387476215.xml
2016-08-12 12:54:07,396 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-12 12:54:07,397 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-12 12:54:07,397 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-12 12:54:07,397 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-12 12:54:07,399 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile855712792387476215.xml
2016-08-12 12:54:07,399 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile855712792387476215.xml
2016-08-12 12:54:07,401 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,402 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-12 12:54:07,402 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-12 12:54:07,402 INFO  query.QuerySchemaLoader  [] - selectorName = elementName4
2016-08-12 12:54:07,402 INFO  query.QuerySchemaLoader  [] - name = elementName1 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,403 INFO  query.QuerySchemaLoader  [] - name = elementName1 bits = 64 dataElementSize = 64
2016-08-12 12:54:07,403 INFO  query.QuerySchemaLoader  [] - name = elementName2 partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,403 INFO  query.QuerySchemaLoader  [] - name = elementName2 bits = 64 dataElementSize = 128
2016-08-12 12:54:07,403 INFO  query.QuerySchemaLoader  [] - name = elementName3 partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,403 INFO  query.QuerySchemaLoader  [] - name = elementName3 bits = 64 dataElementSize = 192
2016-08-12 12:54:07,403 INFO  query.QuerySchemaLoader  [] - filterName = elementName2
2016-08-12 12:54:07,675 WARN  util.NativeCodeLoader  [] - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
2016-08-12 12:54:07,929 INFO  query.LoadQuerySchemaTest  [] - Finished testGeneralSchemaLoad: 
2016-08-12 12:54:07,929 INFO  query.LoadQuerySchemaTest  [] - Starting testSelectorDoesNotExistInDataSchema: 
2016-08-12 12:54:07,929 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1326232351910696700.xml
2016-08-12 12:54:07,932 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1326232351910696700.xml hdfs = false
2016-08-12 12:54:07,932 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile1326232351910696700.xml
2016-08-12 12:54:07,933 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,933 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 12:54:07,933 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,934 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,934 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,934 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,934 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-12 12:54:07,934 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6676358066787223579.xml
2016-08-12 12:54:07,934 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6676358066787223579.xml
2016-08-12 12:54:07,936 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-12 12:54:07,936 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-12 12:54:07,936 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-12 12:54:07,936 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-12 12:54:07,938 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6676358066787223579.xml
2016-08-12 12:54:07,938 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6676358066787223579.xml
2016-08-12 12:54:07,939 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,940 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-12 12:54:07,940 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-12 12:54:07,940 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-12 12:54:07,940 INFO  query.LoadQuerySchemaTest  [] - Finished testSelectorDoesNotExistInDataSchema 
2016-08-12 12:54:07,941 INFO  query.LoadQuerySchemaTest  [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2524419697185920354.xml
2016-08-12 12:54:07,943 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2524419697185920354.xml hdfs = false
2016-08-12 12:54:07,943 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dataSchemaFile2524419697185920354.xml
2016-08-12 12:54:07,945 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,945 INFO  data.DataSchemaLoader  [] - schemaName = fakeDataSchema
2016-08-12 12:54:07,945 INFO  data.DataSchemaLoader  [] - name = elementName1 javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,945 INFO  data.DataSchemaLoader  [] - name = elementName2 javaType = int isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,946 INFO  data.DataSchemaLoader  [] - name = elementName3 javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:07,946 INFO  data.DataSchemaLoader  [] - name = elementName4 javaType = byte isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:07,946 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = fakeQuerySchema
2016-08-12 12:54:07,946 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6763696497603174346.xml
2016-08-12 12:54:07,946 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6763696497603174346.xml
2016-08-12 12:54:07,947 INFO  utils.TestUtils    [] - elementName = elementName1
2016-08-12 12:54:07,948 INFO  utils.TestUtils    [] - elementName = elementName2
2016-08-12 12:54:07,948 INFO  utils.TestUtils    [] - elementName = elementName3
2016-08-12 12:54:07,948 INFO  utils.TestUtils    [] - filterName = elementName2
2016-08-12 12:54:07,950 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6763696497603174346.xml
2016-08-12 12:54:07,950 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySchemaFile6763696497603174346.xml
2016-08-12 12:54:07,951 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:07,952 INFO  query.QuerySchemaLoader  [] - schemaName = fakeQuerySchema
2016-08-12 12:54:07,952 INFO  query.QuerySchemaLoader  [] - dataSchemaName = fakeDataSchema
2016-08-12 12:54:07,952 INFO  query.QuerySchemaLoader  [] - selectorName = nonExistentElement
2016-08-12 12:54:07,952 INFO  query.LoadQuerySchemaTest  [] - Finished testFunkyFilterScenarios
2016-08-12 12:54:08,229 INFO  utils.Inputs       [] - PIR stopList file being created
2016-08-12 12:54:08,230 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile5972506906035715471.tmp
2016-08-12 12:54:08,230 INFO  standalone.StandaloneTest  [] - stopListFileProp = stopListFile new prop = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testStopListFile5972506906035715471.tmp
2016-08-12 12:54:08,230 INFO  utils.Inputs       [] - file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7097459489251920701.xml
2016-08-12 12:54:08,233 INFO  data.DataSchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7097459489251920701.xml hdfs = false
2016-08-12 12:54:08,233 INFO  data.DataSchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/testDataSchemaFile7097459489251920701.xml
2016-08-12 12:54:08,235 INFO  data.DataSchemaLoader  [] - Root element: schema
2016-08-12 12:54:08,235 INFO  data.DataSchemaLoader  [] - schemaName = testDataSchema
2016-08-12 12:54:08,235 INFO  data.DataSchemaLoader  [] - name = date javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 12:54:08,236 INFO  data.DataSchemaLoader  [] - name = qname javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:08,236 INFO  data.DataSchemaLoader  [] - name = src_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,236 INFO  data.DataSchemaLoader  [] - name = dest_ip javaType = string isArray = false partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,236 INFO  data.DataSchemaLoader  [] - name = qtype javaType = short isArray = true partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:08,236 INFO  data.DataSchemaLoader  [] - name = rcode javaType = int isArray = false partitioner org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:08,237 INFO  data.DataSchemaLoader  [] - name = ip javaType = string isArray = true partitioner org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,237 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-hostname-query
2016-08-12 12:54:08,237 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3400528970543947724.xml
2016-08-12 12:54:08,237 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3400528970543947724.xml
2016-08-12 12:54:08,239 INFO  utils.TestUtils    [] - elementName = date
2016-08-12 12:54:08,239 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 12:54:08,239 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:08,239 INFO  utils.TestUtils    [] - elementName = qtype
2016-08-12 12:54:08,239 INFO  utils.TestUtils    [] - elementName = rcode
2016-08-12 12:54:08,240 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 12:54:08,240 INFO  utils.TestUtils    [] - filterName = qname
2016-08-12 12:54:08,241 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-ip-query
2016-08-12 12:54:08,242 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2900835703901407503.xml
2016-08-12 12:54:08,242 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3400528970543947724.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2900835703901407503.xml
2016-08-12 12:54:08,243 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 12:54:08,243 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:08,243 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 12:54:08,243 INFO  utils.TestUtils    [] - filterName = qname
2016-08-12 12:54:08,244 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-nxdomain-query
2016-08-12 12:54:08,245 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2348113755961525122.xml
2016-08-12 12:54:08,245 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3400528970543947724.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2900835703901407503.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2348113755961525122.xml
2016-08-12 12:54:08,246 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 12:54:08,246 INFO  utils.TestUtils    [] - elementName = src_ip
2016-08-12 12:54:08,246 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:08,246 INFO  utils.TestUtils    [] - filterName = qname
2016-08-12 12:54:08,247 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query
2016-08-12 12:54:08,248 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4238910145027311779.xml
2016-08-12 12:54:08,248 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3400528970543947724.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2900835703901407503.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2348113755961525122.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4238910145027311779.xml
2016-08-12 12:54:08,249 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 12:54:08,249 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:08,249 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 12:54:08,249 INFO  utils.TestUtils    [] - filterName = src_ip
2016-08-12 12:54:08,249 INFO  utils.TestUtils    [] - filterName = ip
2016-08-12 12:54:08,250 INFO  utils.TestUtils    [] - createQuerySchema: querySchemaName = dns-srcip-query-no-filter
2016-08-12 12:54:08,250 INFO  utils.TestUtils    [] - localFS: file = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9156673650744486157.xml
2016-08-12 12:54:08,251 INFO  utils.TestUtils    [] - query.schemas = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3400528970543947724.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2900835703901407503.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2348113755961525122.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4238910145027311779.xml,/var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9156673650744486157.xml
2016-08-12 12:54:08,252 INFO  utils.TestUtils    [] - elementName = qname
2016-08-12 12:54:08,252 INFO  utils.TestUtils    [] - elementName = dest_ip
2016-08-12 12:54:08,252 INFO  utils.TestUtils    [] - elementName = ip
2016-08-12 12:54:08,253 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3400528970543947724.xml
2016-08-12 12:54:08,253 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-hostname-query_file3400528970543947724.xml
2016-08-12 12:54:08,254 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:08,254 INFO  query.QuerySchemaLoader  [] - schemaName = dns-hostname-query
2016-08-12 12:54:08,254 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:08,254 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 12:54:08,254 INFO  query.QuerySchemaLoader  [] - name = date partitionerName = org.apache.pirk.schema.data.partitioner.ISO8601DatePartitioner
2016-08-12 12:54:08,254 INFO  query.QuerySchemaLoader  [] - name = date bits = 64 dataElementSize = 64
2016-08-12 12:54:08,254 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - name = qtype partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - name = qtype bits = 32 dataElementSize = 160
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - name = rcode partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - name = rcode bits = 32 dataElementSize = 192
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 256
2016-08-12 12:54:08,255 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-12 12:54:08,294 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2900835703901407503.xml
2016-08-12 12:54:08,294 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-ip-query_file2900835703901407503.xml
2016-08-12 12:54:08,296 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:08,296 INFO  query.QuerySchemaLoader  [] - schemaName = dns-ip-query
2016-08-12 12:54:08,296 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:08,297 INFO  query.QuerySchemaLoader  [] - selectorName = ip
2016-08-12 12:54:08,297 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,297 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 32
2016-08-12 12:54:08,297 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,297 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 64
2016-08-12 12:54:08,297 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,297 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 128
2016-08-12 12:54:08,298 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-12 12:54:08,336 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2348113755961525122.xml
2016-08-12 12:54:08,336 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-nxdomain-query_file2348113755961525122.xml
2016-08-12 12:54:08,339 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:08,339 INFO  query.QuerySchemaLoader  [] - schemaName = dns-nxdomain-query
2016-08-12 12:54:08,339 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:08,339 INFO  query.QuerySchemaLoader  [] - selectorName = qname
2016-08-12 12:54:08,339 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:08,340 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 12:54:08,340 INFO  query.QuerySchemaLoader  [] - name = src_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,340 INFO  query.QuerySchemaLoader  [] - name = src_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:08,340 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,340 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 128
2016-08-12 12:54:08,340 INFO  query.QuerySchemaLoader  [] - filterName = qname
2016-08-12 12:54:08,368 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4238910145027311779.xml
2016-08-12 12:54:08,368 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query_file4238910145027311779.xml
2016-08-12 12:54:08,370 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:08,370 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query
2016-08-12 12:54:08,370 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:08,370 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 12:54:08,370 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:08,370 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 12:54:08,371 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,371 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:08,371 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,371 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 12:54:08,371 INFO  query.QuerySchemaLoader  [] - filterName = src_ip
2016-08-12 12:54:08,371 INFO  query.QuerySchemaLoader  [] - filterName = ip
2016-08-12 12:54:08,392 INFO  query.QuerySchemaLoader  [] - Loading schemaFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9156673650744486157.xml
2016-08-12 12:54:08,392 INFO  query.QuerySchemaLoader  [] - localFS: inputFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/dns-srcip-query-no-filter_file9156673650744486157.xml
2016-08-12 12:54:08,393 INFO  query.QuerySchemaLoader  [] - Root element: schema
2016-08-12 12:54:08,394 INFO  query.QuerySchemaLoader  [] - schemaName = dns-srcip-query-no-filter
2016-08-12 12:54:08,394 INFO  query.QuerySchemaLoader  [] - dataSchemaName = testDataSchema
2016-08-12 12:54:08,394 INFO  query.QuerySchemaLoader  [] - selectorName = src_ip
2016-08-12 12:54:08,394 INFO  query.QuerySchemaLoader  [] - name = qname partitionerName = org.apache.pirk.schema.data.partitioner.PrimitiveTypePartitioner
2016-08-12 12:54:08,394 INFO  query.QuerySchemaLoader  [] - name = qname bits = 64 dataElementSize = 64
2016-08-12 12:54:08,394 INFO  query.QuerySchemaLoader  [] - name = dest_ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,395 INFO  query.QuerySchemaLoader  [] - name = dest_ip bits = 32 dataElementSize = 96
2016-08-12 12:54:08,395 INFO  query.QuerySchemaLoader  [] - name = ip partitionerName = org.apache.pirk.schema.data.partitioner.IPDataPartitioner
2016-08-12 12:54:08,395 INFO  query.QuerySchemaLoader  [] - name = ip bits = 64 dataElementSize = 160
2016-08-12 12:54:08,398 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 12:54:08,400 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:08,403 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier5005586465713098887.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8385416206300261201.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse5452661701068726878.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile283596355277588232.txt
2016-08-12 12:54:08,404 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 12:54:08,419 INFO  encryption.Paillier  [] - Parameters = p = 293010915 q = 1788529951 N = 524649853 NSquared = -2130895095 lambdaN = 1369038142 bitLength = 384
2016-08-12 12:54:08,419 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:09,374 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 12:54:09,377 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:09,635 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:09,764 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:09,764 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 12:54:09,768 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:09,772 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:09,775 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:09,778 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:09,780 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:09,783 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 12:54:09,787 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 12:54:09,790 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 12:54:09,794 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:09,794 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:09,804 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:09,804 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:09,948 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:09,949 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:09,951 INFO  utils.BaseTests    [] - results:
2016-08-12 12:54:09,951 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 12:54:09,952 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 12:54:09,952 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:09,952 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:09,952 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 12:54:09,953 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:09,953 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:09,953 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 12:54:09,953 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 12:54:09,954 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:09,954 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:09,954 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 12:54:09,954 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:09,955 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:09,955 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 12:54:09,956 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 12:54:09,956 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-12 12:54:09,956 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:09,957 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2069131394150074514.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2418115966672559676.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8917002184305592164.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7262978189854133527.txt
2016-08-12 12:54:09,958 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 24 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 12:54:09,969 INFO  encryption.Paillier  [] - Parameters = p = -1560420881 q = -1175007897 N = -645485015 NSquared = 1265091217 lambdaN = 1044971882 bitLength = 384
2016-08-12 12:54:09,970 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:10,451 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 12:54:10,451 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:10,611 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:10,698 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:10,699 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-12 12:54:10,702 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-12 12:54:10,704 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-12 12:54:10,706 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-12 12:54:10,708 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-12 12:54:10,710 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-12 12:54:10,714 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-12 12:54:10,716 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 12:54:10,718 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-12 12:54:10,724 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:10,724 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:10,726 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:10,726 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:10,793 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:10,793 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:10,795 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:10,795 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-12 12:54:10,795 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-12 12:54:10,795 INFO  utils.BaseTests    [] - correctResults:
2016-08-12 12:54:10,795 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":451d79ea-835e-482d-ba3d-8f8e2da70e54,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-12 12:54:10,795 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":451d79ea-835e-482d-ba3d-8f8e2da70e54,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:10,796 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":451d79ea-835e-482d-ba3d-8f8e2da70e54,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-12 12:54:10,796 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-12 12:54:10,796 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-12 12:54:10,796 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:10,796 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7147069616281948083.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query7981773257895085753.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2729976072634497954.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile3233457334842757878.txt
2016-08-12 12:54:10,797 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 12:54:10,807 INFO  encryption.Paillier  [] - Parameters = p = -1921786559 q = -1461058265 N = -1251804697 NSquared = -288412047 lambdaN = 1065520064 bitLength = 384
2016-08-12 12:54:10,807 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:11,231 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 12:54:11,231 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:11,352 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:11,402 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:11,402 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-12 12:54:11,403 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 12:54:11,406 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-12 12:54:11,407 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-12 12:54:11,409 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 12:54:11,410 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 12:54:11,411 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-12 12:54:11,412 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-12 12:54:11,413 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-12 12:54:11,414 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:11,415 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:11,416 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:11,416 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:11,487 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:11,487 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:11,489 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:11,489 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:11,489 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:11,489 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-12 12:54:11,489 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-12 12:54:11,489 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-12 12:54:11,490 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-12 12:54:11,490 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-12 12:54:11,490 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:11,491 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier3278354450701843454.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query1596805980839566738.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2802500887190824607.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile5912469142132460169.txt
2016-08-12 12:54:11,491 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 20 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 12:54:11,501 INFO  encryption.Paillier  [] - Parameters = p = 742485277 q = -1311342739 N = -1875191719 NSquared = -550875407 lambdaN = 747158260 bitLength = 384
2016-08-12 12:54:11,502 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:11,913 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 12:54:11,913 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:12,038 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:12,090 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:12,090 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:12,091 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:12,091 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:12,092 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:12,092 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:12,148 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:12,148 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:12,149 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-12 12:54:12,149 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-12 12:54:12,149 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 12:54:12,149 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:12,150 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier2882381054576100782.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query529004368464693088.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8645865468480906168.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8768216615980379889.txt
2016-08-12 12:54:12,150 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 12:54:12,171 INFO  encryption.Paillier  [] - Parameters = p = -842844667 q = -870997853 N = 1870103855 NSquared = -654582111 lambdaN = 597324396 bitLength = 384
2016-08-12 12:54:12,171 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:13,041 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 12:54:13,042 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:13,195 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:13,265 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:13,265 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 12:54:13,267 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:13,272 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:13,274 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:13,278 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:13,280 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:13,281 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 12:54:13,283 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 12:54:13,288 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 12:54:13,290 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:13,290 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:13,296 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:13,296 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:13,401 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:13,401 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:13,402 INFO  utils.BaseTests    [] - results:
2016-08-12 12:54:13,402 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 12:54:13,403 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 12:54:13,403 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:13,403 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:13,403 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 12:54:13,403 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:13,403 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:13,404 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 12:54:13,404 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 12:54:13,404 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:13,404 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:13,404 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 12:54:13,405 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:13,405 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:13,405 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 12:54:13,406 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 12:54:13,406 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 12:54:13,406 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:13,407 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7078521916447320481.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3080765106973798847.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse2523395080742164544.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7694131334321655222.txt
2016-08-12 12:54:13,407 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 12:54:13,414 INFO  encryption.Paillier  [] - Parameters = p = -1742657639 q = -1336484061 N = 728543467 NSquared = -1299449927 lambdaN = 1903842584 bitLength = 384
2016-08-12 12:54:13,414 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:14,297 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 12:54:14,297 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:14,467 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:14,523 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:14,523 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 12:54:14,527 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:14,528 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:14,530 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:14,531 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:14,532 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:14,534 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 12:54:14,535 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 12:54:14,537 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 12:54:14,539 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:14,539 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:14,542 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:14,542 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:14,632 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:14,632 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:14,634 INFO  utils.BaseTests    [] - results:
2016-08-12 12:54:14,635 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 12:54:14,635 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 12:54:14,635 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:14,635 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:14,635 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 12:54:14,635 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:14,636 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:14,636 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 12:54:14,636 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 12:54:14,637 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:14,637 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:14,637 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 12:54:14,637 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:14,637 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:14,638 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 12:54:14,638 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 12:54:14,639 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 12:54:14,639 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:14,639 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier7183206317263378999.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2053208535654723766.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8085604038169368588.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile7842989039734089572.txt
2016-08-12 12:54:14,640 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 12:54:14,645 INFO  encryption.Paillier  [] - Parameters = p = 1832623017 q = -1843422347 N = 1056208701 NSquared = 265405577 lambdaN = -1880731640 bitLength = 384
2016-08-12 12:54:14,645 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:15,489 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 12:54:15,489 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:15,623 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:15,679 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:15,679 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 12:54:15,681 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:15,683 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:15,684 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:15,686 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:15,687 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:15,689 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 12:54:15,690 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 12:54:15,693 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 12:54:15,696 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:15,696 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:15,701 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:15,701 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:15,818 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:15,818 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:15,820 INFO  utils.BaseTests    [] - results:
2016-08-12 12:54:15,820 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 12:54:15,820 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 12:54:15,820 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:15,820 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:15,820 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 12:54:15,820 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:15,820 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:15,821 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 12:54:15,821 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 12:54:15,821 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:15,821 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:15,821 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 12:54:15,821 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:15,821 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:15,821 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 12:54:15,822 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 12:54:15,822 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 12:54:15,822 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:15,822 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6844610072101709385.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query5548334155102758590.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse1447779388039241455.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile425510578983762545.txt
2016-08-12 12:54:15,822 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 32 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-12 12:54:15,834 INFO  encryption.Paillier  [] - Parameters = p = 203394539 q = -1262878113 N = 395280437 NSquared = 23792377 lambdaN = 727382006 bitLength = 384
2016-08-12 12:54:15,834 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:16,668 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 12:54:16,668 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:16,783 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:16,837 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:16,837 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 12:54:16,838 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:16,840 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:16,841 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:16,842 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:16,843 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:16,845 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 12:54:16,846 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 12:54:16,848 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 12:54:16,849 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:16,849 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:16,852 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:16,852 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:16,941 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:16,941 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:16,946 INFO  utils.BaseTests    [] - results:
2016-08-12 12:54:16,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 12:54:16,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","ip":["3.3.3.3","0.0.0.0"],"qname":"something.else","match":"something.else","rcode":0}
2016-08-12 12:54:16,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:16,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:16,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 12:54:16,947 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:16,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:16,948 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 12:54:16,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 12:54:16,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:16,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:16,948 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 12:54:16,949 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:16,949 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:16,949 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:11.000Z","src_ip":"1.1.1.1","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"2.2.2.2","qname":"something.else","ip":["3.3.3.3","0.0.0.0"],"match":"something.else","rcode":0}
2016-08-12 12:54:16,949 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 12:54:16,950 INFO  utils.BaseTests    [] - Running testSRCIPQuery(): 
2016-08-12 12:54:16,950 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:16,951 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier6596033700385525447.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query2150217962810711442.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse3953853272623731247.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile2001936559997881727.txt
2016-08-12 12:54:16,951 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 160 numPartitionsPerDataElement = 20 queryType = dns-srcip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-12 12:54:16,966 INFO  encryption.Paillier  [] - Parameters = p = -2038609825 q = -1608394809 N = 2003438297 NSquared = -1171674127 lambdaN = 677737818 bitLength = 384
2016-08-12 12:54:16,966 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:17,460 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 12:54:17,460 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:17,576 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:17,627 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:17,627 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-12 12:54:17,628 INFO  utils.StandaloneQuery  [] - selector = 127.128.129.130 numDataElements = 7
2016-08-12 12:54:17,630 INFO  utils.StandaloneQuery  [] - selector = 131.132.133.134 numDataElements = 7
2016-08-12 12:54:17,631 INFO  utils.StandaloneQuery  [] - selector = 135.136.137.138 numDataElements = 7
2016-08-12 12:54:17,632 INFO  utils.StandaloneQuery  [] - selector = 139.140.141.142 numDataElements = 7
2016-08-12 12:54:17,633 INFO  utils.StandaloneQuery  [] - selector = 143.144.145.146 numDataElements = 7
2016-08-12 12:54:17,634 INFO  utils.StandaloneQuery  [] - selector = 1.1.1.1 numDataElements = 7
2016-08-12 12:54:17,635 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 12:54:17,636 INFO  utils.StandaloneQuery  [] - selector = 55.55.55.55 numDataElements = 7
2016-08-12 12:54:17,637 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:17,637 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:17,638 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:17,638 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:17,705 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:17,705 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:17,707 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:17,707 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-12 12:54:17,708 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-12 12:54:17,708 INFO  utils.BaseTests    [] - correctResults:
2016-08-12 12:54:17,708 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":451d79ea-835e-482d-ba3d-8f8e2da70e54,"qname":"a.b.c.co","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"55.55.55.55"}
2016-08-12 12:54:17,708 INFO  utils.BaseTests    [] - {"src_ip":"5.6.7.8","event_type":"dns-srcip-query","query_id":451d79ea-835e-482d-ba3d-8f8e2da70e54,"qname":"somethin","dest_ip":"2.2.2.22","ip":["3.3.3.132","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:17,709 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-srcip-query","query_id":451d79ea-835e-482d-ba3d-8f8e2da70e54,"qname":"somethin","dest_ip":"2.2.2.232","ip":["3.3.3.132","0.0.0.0"],"match":"55.55.55.55"}
2016-08-12 12:54:17,709 INFO  utils.BaseTests    [] - Completed testSRCIPQuery(): 
2016-08-12 12:54:17,709 INFO  utils.BaseTests    [] - Running testDNSIPQuery(): 
2016-08-12 12:54:17,709 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:17,710 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1748391472205713412.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query8090409982461240108.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse8683916709730138748.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile4354733705867099078.txt
2016-08-12 12:54:17,710 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 5 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-ip-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-12 12:54:17,714 INFO  encryption.Paillier  [] - Parameters = p = -1603953127 q = 1730192541 N = 1236924757 NSquared = -911182279 lambdaN = -1869812312 bitLength = 384
2016-08-12 12:54:17,714 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:18,159 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 12:54:18,159 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:18,279 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:18,334 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:18,334 INFO  utils.StandaloneQuery  [] - selector = 10.20.30.40 numDataElements = 7
2016-08-12 12:54:18,335 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 12:54:18,336 INFO  utils.StandaloneQuery  [] - selector = 13.14.15.16 numDataElements = 7
2016-08-12 12:54:18,337 INFO  utils.StandaloneQuery  [] - selector = 21.22.23.24 numDataElements = 7
2016-08-12 12:54:18,338 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 12:54:18,338 INFO  utils.StandaloneQuery  [] - selector = 5.6.7.8 numDataElements = 7
2016-08-12 12:54:18,339 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.3 numDataElements = 7
2016-08-12 12:54:18,340 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-12 12:54:18,341 INFO  utils.StandaloneQuery  [] - selector = 3.3.3.132 numDataElements = 7
2016-08-12 12:54:18,342 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:18,342 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:18,343 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:18,343 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:18,409 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:18,410 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:18,411 INFO  utils.BaseTests    [] - {"src_ip":"127.128.129.130","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:18,411 INFO  utils.BaseTests    [] - {"src_ip":"139.140.141.142","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:18,411 INFO  utils.BaseTests    [] - {"src_ip":"143.144.145.146","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"match":"5.6.7.8"}
2016-08-12 12:54:18,411 INFO  utils.BaseTests    [] - {"src_ip":"131.132.133.134","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"match":"13.14.15.16"}
2016-08-12 12:54:18,412 INFO  utils.BaseTests    [] - {"src_ip":"55.55.55.55","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"match":"10.20.30.40"}
2016-08-12 12:54:18,412 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-ip-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"match":"21.22.23.24"}
2016-08-12 12:54:18,412 INFO  utils.BaseTests    [] - Completed testDNSIPQuery(): 
2016-08-12 12:54:18,412 INFO  utils.BaseTests    [] - Running testDNSNXDOMAINQuery(): 
2016-08-12 12:54:18,412 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:18,413 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier443775328168439183.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query3126721129961771932.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse9177128958010195899.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile6299236899204817150.txt
2016-08-12 12:54:18,413 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 128 numPartitionsPerDataElement = 16 queryType = dns-nxdomain-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = false
2016-08-12 12:54:18,421 INFO  encryption.Paillier  [] - Parameters = p = 746061531 q = -892166811 N = 4840295 NSquared = -590912655 lambdaN = 75472788 bitLength = 384
2016-08-12 12:54:18,422 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:18,831 INFO  encrypt.EncryptQuery  [] - Completed parallel creation of encrypted query vectors
2016-08-12 12:54:18,831 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:18,945 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:18,999 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:18,999 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:19,000 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:19,001 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:19,002 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:19,002 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:19,057 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:19,057 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:19,057 INFO  utils.BaseTests    [] - {"src_ip":"135.136.137.138","event_type":"dns-nxdomain-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qname":"d.e.com","dest_ip":"17.18.19.20","match":"d.e.com"}
2016-08-12 12:54:19,057 INFO  utils.BaseTests    [] - Completed testDNSNXDOMAINQuery(): 
2016-08-12 12:54:19,058 INFO  utils.BaseTests    [] - Running testDNSHostnameQuery(): 
2016-08-12 12:54:19,058 INFO  utils.StandaloneQuery  [] - Performing watchlisting: 
2016-08-12 12:54:19,058 INFO  utils.StandaloneQuery  [] - fileQuerier = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-querier1124337599933357903.txt fileQuery  = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/querySideOut-query634100649741446062.txt responseFile = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/encryptedResponse7823120440067597011.txt fileFinalResults = /var/folders/83/07wq_8t55pn3mgj99512hb8c0000gn/T/finalResultFile8751546433203192288.txt
2016-08-12 12:54:19,058 INFO  wideskies.QueryInfo  [] - identifier = 451d79ea-835e-482d-ba3d-8f8e2da70e54 numSelectors = 6 hashBitSize = 12 hashKey = someKey dataPartitionBitSize = 8 numBitsPerDataElement = 256 numPartitionsPerDataElement = 36 queryType = dns-hostname-query useExpLookupTable = false useHDFSExpLookupTable = false embedSelector = true
2016-08-12 12:54:19,064 INFO  encryption.Paillier  [] - Parameters = p = -458596595 q = -1680130963 N = 2045805705 NSquared = 1199411537 lambdaN = -9202836 bitLength = 384
2016-08-12 12:54:19,065 INFO  utils.StandaloneQuery  [] - Performing encryption of the selectors - forming encrypted query vectors:
2016-08-12 12:54:19,893 INFO  encrypt.EncryptQuery  [] - Completed serial creation of encrypted query vectors
2016-08-12 12:54:19,893 INFO  utils.StandaloneQuery  [] - Completed encryption of the selectors - completed formation of the encrypted query vectors:
2016-08-12 12:54:19,893 INFO  utils.StandaloneQuery  [] - embedSelectorMap((embedSelectorMap.size()-2)) = 650527453 selector = something.else
2016-08-12 12:54:20,007 INFO  utils.StandaloneQuery  [] - Performing the PIR Query and constructing the response elements:
2016-08-12 12:54:20,061 INFO  utils.StandaloneQuery  [] - Query and Responder elements constructed
2016-08-12 12:54:20,061 INFO  utils.StandaloneQuery  [] - selector = a.b.c.com numDataElements = 7
2016-08-12 12:54:20,063 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:20,064 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:20,065 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:20,067 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:20,068 INFO  utils.StandaloneQuery  [] - selector = d.e.com numDataElements = 7
2016-08-12 12:54:20,070 INFO  utils.StandaloneQuery  [] - selector = something.else numDataElements = 7
2016-08-12 12:54:20,072 INFO  utils.StandaloneQuery  [] - selector = something.else2 numDataElements = 7
2016-08-12 12:54:20,074 INFO  utils.StandaloneQuery  [] - selector = something.else.on.stoplist numDataElements = 7
2016-08-12 12:54:20,075 INFO  utils.StandaloneQuery  [] - Completed the PIR Query and construction of the response elements:
2016-08-12 12:54:20,075 INFO  utils.StandaloneQuery  [] - Forming response from response elements; writing to a file
2016-08-12 12:54:20,078 INFO  utils.StandaloneQuery  [] - Completed forming response from response elements and writing to a file
2016-08-12 12:54:20,078 INFO  utils.StandaloneQuery  [] - Performing decryption; writing final results file
2016-08-12 12:54:20,166 INFO  utils.StandaloneQuery  [] - Completed performing decryption and writing final results file
2016-08-12 12:54:20,166 INFO  utils.StandaloneQuery  [] - Reading in and checking results
2016-08-12 12:54:20,168 INFO  utils.BaseTests    [] - results:
2016-08-12 12:54:20,168 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","ip":["10.20.30.40","10.20.30.60"],"qname":"a.b.c.com","match":"a.b.c.com","rcode":0}
2016-08-12 12:54:20,168 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:20,168 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","ip":["13.14.15.16","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:20,168 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","ip":["21.22.23.24","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":3}
2016-08-12 12:54:20,168 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:20,168 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","ip":["5.6.7.8","0.0.0.0"],"qname":"d.e.com","match":"d.e.com","rcode":0}
2016-08-12 12:54:20,169 INFO  utils.BaseTests    [] - correctResults: 
2016-08-12 12:54:20,169 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:05.000Z","src_ip":"55.55.55.55","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.6","qname":"a.b.c.com","ip":["10.20.30.40","10.20.30.60"],"match":"a.b.c.com","rcode":0}
2016-08-12 12:54:20,169 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:06.000Z","src_ip":"127.128.129.130","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"1.2.3.4","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:20,169 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:07.000Z","src_ip":"131.132.133.134","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"9.10.11.12","qname":"d.e.com","ip":["13.14.15.16","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:20,169 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:08.000Z","src_ip":"135.136.137.138","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"17.18.19.20","qname":"d.e.com","ip":["21.22.23.24","0.0.0.0"],"match":"d.e.com","rcode":3}
2016-08-12 12:54:20,169 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:09.000Z","src_ip":"139.140.141.142","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"25.26.27.28","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:20,169 INFO  utils.BaseTests    [] - {"date":"2016-02-20T23:29:10.000Z","src_ip":"143.144.145.146","event_type":"dns-hostname-query","query_id":"451d79ea-835e-482d-ba3d-8f8e2da70e54","qtype":[1,0],"dest_ip":"33.34.35.36","qname":"d.e.com","ip":["5.6.7.8","0.0.0.0"],"match":"d.e.com","rcode":0}
2016-08-12 12:54:20,169 INFO  utils.BaseTests    [] - Completed testDNSHostnameQuery(): 
2016-08-12 13:14:42,211 INFO  general.ISO8601DateParserTest  [] - Starting testDateParsing: 
2016-08-12 13:14:42,214 INFO  general.ISO8601DateParserTest  [] - Successfully completed testDateParsing
2016-08-12 13:14:42,217 INFO  general.KeyedHashTest  [] - Starting testKeyedHash: 
2016-08-12 13:14:42,219 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-12 13:14:42,219 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-12 13:14:42,220 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-12 13:14:42,220 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHash
2016-08-12 13:14:42,221 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: MD5
2016-08-12 13:14:42,229 INFO  general.KeyedHashTest  [] - hash1 = 26 hash1 = 11010
2016-08-12 13:14:42,230 INFO  general.KeyedHashTest  [] - hash2 = 2047168538 hash2 = 1111010000001010101000000011010
2016-08-12 13:14:42,230 INFO  general.KeyedHashTest  [] - hash3 = 2047168538 hash3 = 1111010000001010101000000011010
2016-08-12 13:14:42,230 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: MD5
2016-08-12 13:14:42,231 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-1
2016-08-12 13:14:42,231 INFO  general.KeyedHashTest  [] - hash1 = 1116 hash1 = 10001011100
2016-08-12 13:14:42,232 INFO  general.KeyedHashTest  [] - hash2 = 1614103644 hash2 = 1100000001101010100010001011100
2016-08-12 13:14:42,232 INFO  general.KeyedHashTest  [] - hash3 = 1614103644 hash3 = 1100000001101010100010001011100
2016-08-12 13:14:42,232 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-1
2016-08-12 13:14:42,232 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: SHA-256
2016-08-12 13:14:42,233 INFO  general.KeyedHashTest  [] - hash1 = 2100 hash1 = 100000110100
2016-08-12 13:14:42,234 INFO  general.KeyedHashTest  [] - hash2 = 1097439284 hash2 = 1000001011010011001100000110100
2016-08-12 13:14:42,234 INFO  general.KeyedHashTest  [] - hash3 = 1097439284 hash3 = 1000001011010011001100000110100
2016-08-12 13:14:42,235 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: SHA-256
2016-08-12 13:14:42,235 INFO  general.KeyedHashTest  [] - Starting testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-12 13:14:42,322 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-12 13:14:42,323 INFO  general.KeyedHashTest  [] - hash1 = 3381 hash1 = 110100110101
2016-08-12 13:14:42,323 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-12 13:14:42,324 INFO  general.KeyedHashTest  [] - hash2 = 507510069 hash2 = 11110001111111111110100110101
2016-08-12 13:14:42,325 INFO  utils.KeyedHash    [] - java.security.NoSuchAlgorithmException: FAKE-HASH-TYPE MessageDigest not available
2016-08-12 13:14:42,325 INFO  general.KeyedHashTest  [] - hash3 = 507510069 hash3 = 11110001111111111110100110101
2016-08-12 13:14:42,326 INFO  general.KeyedHashTest  [] - Successfully completed testKeyedHashType with type: FAKE-HASH-TYPE
2016-08-12 13:14:42,332 INFO  general.PaillierTest  [] - p = 7 q = 17 N = 119 bitLength = 7 lambdaN = 48 m1 = 5 m2 = 2 r1 = 3 r2 = 4
2016-08-12 13:14:42,333 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGeneration: 
2016-08-12 13:14:42,336 INFO  utils.SystemConfiguration  [] - Loading file 'pirk.properties'
2016-08-12 13:14:42,337 INFO  utils.SystemConfiguration  [] - Loading file 'querier.properties'
2016-08-12 13:14:42,338 INFO  utils.SystemConfiguration  [] - Loading file 'responder.properties'
2016-08-12 13:14:42,339 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 13:14:42,340 INFO  general.PaillierTest  [] - i = 0
2016-08-12 13:14:42,342 INFO  encryption.Paillier  [] - Using secure random from SUN:NativePRNG
2016-08-12 13:14:42,393 INFO  encryption.Paillier  [] - Parameters = p = -1619517387 q = -641356381 N = 1829327551 NSquared = -1842550143 lambdaN = -102382988 bitLength = 201
2016-08-12 13:14:42,458 INFO  general.PaillierTest  [] - encM1 = -1819776785 encM2 = 1457004255
2016-08-12 13:14:42,458 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:14:42,459 INFO  general.PaillierTest  [] - encM1_times_encM2 = -735560010 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:14:44,694 INFO  encryption.Paillier  [] - Parameters = p = -223627741 q = -1060096367 N = -400716845 NSquared = 1781321705 lambdaN = -1284487888 bitLength = 3072
2016-08-12 13:14:44,826 INFO  general.PaillierTest  [] - encM1 = -1518334590 encM2 = 146776067
2016-08-12 13:14:44,951 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:14:45,011 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1034075564 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:14:55,559 INFO  encryption.Paillier  [] - Parameters = p = 1804349143 q = 1460293303 N = 2095119793 NSquared = 1764185185 lambdaN = -584761326 bitLength = 4425
2016-08-12 13:14:55,919 INFO  general.PaillierTest  [] - encM1 = 1419702031 encM2 = 135419059
2016-08-12 13:14:56,274 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:14:56,458 INFO  general.PaillierTest  [] - encM1_times_encM2 = -1935130081 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:14:56,458 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 13:14:56,458 INFO  general.PaillierTest  [] - i = 0
2016-08-12 13:14:56,463 INFO  encryption.Paillier  [] - testBit false
 N = 10011000101101101110010110000001010001001111001011000001010010001000111100100011001111101001011001001110011001000000011110011001011001000000011111010000000011000101011100101011110011000100001010001101
2016-08-12 13:14:56,466 INFO  encryption.Paillier  [] - testBit false
 N = 10000100100010111000001100110000100001110100010111010000011110111000010100111001001101110101111110011011111010001001010000011111000111001110101100010001101010001111111010000110100101010110100000000111
2016-08-12 13:14:56,471 INFO  encryption.Paillier  [] - testBit true
 N = 10101111111011011010010001111000110110111001111100101100011101000101000100001111101101011100011000011110110100001010001000011010111010000110001001110101011000111110101101101100010010100011110010100101
2016-08-12 13:14:56,472 INFO  encryption.Paillier  [] - Parameters = p = 1511723091 q = 248660007 N = 1816804517 NSquared = 1438761561 lambdaN = 28210710 bitLength = 201
2016-08-12 13:14:56,472 INFO  general.PaillierTest  [] - encM1 = -534256064 encM2 = 2134858740
2016-08-12 13:14:56,473 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:14:56,473 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1189046249 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:14:57,159 INFO  encryption.Paillier  [] - testBit true

2016-08-12 13:14:57,163 INFO  encryption.Paillier  [] - Parameters = p = 1698219707 q = 117091447 N = -1484258067 NSquared = 1911047017 lambdaN = -329956922 bitLength = 3072
2016-08-12 13:14:57,282 INFO  general.PaillierTest  [] - encM1 = -1129069526 encM2 = -1807835901
2016-08-12 13:14:57,403 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:14:57,462 INFO  general.PaillierTest  [] - encM1_times_encM2 = 252517096 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:15:03,580 INFO  encryption.Paillier  [] - testBit true
 N = 100111100110100101111000010001001100111101001110100000101000010001010011110001010101011110000001001011010111011100110001101000000000011100100110111000100000101101111111010010111000000111011000111000111110011111101000010000111101010111001101110101100100101001100110101011100000110011000001001101011001110110101100001110011010001101111010000110101101010010010101001000010110111010110111011100100100110001001000000000000000111010101000110111000110110011001000101100001110101011101011111001010101110100000000110111011000000100010100101100000111001100101001010111010010100111011111111000011100101101110001101110100111111100101011010100110111001111111110110111101000000111100111111001011011100111001110001111011001100000011011010111100010011100011011100101010111101010000111111101010100011011110011111000110111101010111010100000111110111001110111011001110100101101011110001001111111010111000101011101100100100010100000010100011101100100000111110001110110000110110110100011100110100001110000111110101111110100101111101100111101111111111000011101101101001000001101000110110010010011010110110000011100100101101110100111110111100001101101001100000000101001100111000111011101111100001000010010100010100101100110001001111110010100100111101100000111011100100011111011010010111110000000001101011100011100011101110110010101101010100101110101010000000111100011000011100100000100101111111000101000011000000101001110010100100001000111001001100111001000011010001001010010001000001001000110010100101110111001011010011000010010111101111000100111100011010111011111000010000101111001001011010110101101001111000010011100001011010010101011100101111011111111001011001011101111000010010000001001000100100000110011100001011010000111101000100011010110001011101100001101111110001110011110110101101010011011000110011101010100111101000110000100100110011111101011101100000100100000110101100010101101110111011100111010100000010011011111111010011010100011110010000011010011001001101011110001001110001011101111110100000111110111100001101011110001101000011011100110001001010110110010001101110111101000010001010011000100000111001101100000000011110011011010110100110001111111010010010010010110100010000111011100110100111111111000100000001100110100011011101000110100010000011110111010110010001011100011010001000001001001010011110101000001010110001100000101111101000110011110101101010001110010011111011111010100110110011100001110101101100111011001000011101011100101010110011110111111010101111010011101011010110110110111001100100110101000111010000010100000011100111101100110101110010001100001010000100100111100101011100000100011110100110111110111111110010000010010100011000111011110010111011111101100001010001100001110011100101110011010101001010000001110110101110110000110111011010111101001010001111101001000000111110111001010000010111001110101110100001000100100011001010000110100110100110110011101000111000111000000011000000001101000100100011110110110010011000001000011100100010000110100001101000100101100010110100110111011110000010110100010100001010010011101001000011100101000010011110110101101110111111001010101110100000100101001100101001011001001011111100111010101000010011100111011111100110100110100000011010111111011101011001010000110010011001111110011001001110110111101011101101010111011100110101010011111000000011110011000111101110111101001101001001111110111010100101110110001110001101100111011010011101010101111001110111001110000100110000100101101011110100111000001101111100001011110110000111001011111010001001111011110001000001111010011011111001100000101100000100101010111111001111100010011100101110101100100101111111110010111001010110010010010001010000111111011000100001100011010100001111010000011001101000110011001000001101111011111101011001000011110101111111101101001101101111010001111000010110110111000000011001011110101111101010010000000101000011110010110100001010000100111100010110111011011000010111101001001011010110010001111001000110010110111010010011001010001100001011111110011010101100110110101101110101100000100010010000110010011110010111101010011100111001000010111001111001011110111011011001111100001011001100001110100101100010001010001111101100010011101001011011011000101000001001110100100001101101101011010100100011010010111011110000110011011001110010011101110100101001011011000100101001101110001011001000101010100100010101000101000110101111011001001011000101011000101010011100110001010101100000111100101001000000011101001001110111100100000110110111110101111001110000011110011010110111010100011101100101001100101110000110111111111111101001101110111001110110000001110001110011010110111000011100000011101011010011000111011110110001111101110010111110111110001010001101010000100010001011100001110100001111101011110110111000110110000000011111011001000111110011110000001110011000010011101100001001110011001110000101101000001111010000100100101000110111000111000110011110110101001111000001100000000000001101010111110110011001101111001010111000110111011011101101000110100011001111110001001000000111011
2016-08-12 13:15:03,587 INFO  encryption.Paillier  [] - Parameters = p = -1036873449 q = 1687750781 N = 435720251 NSquared = 1234333081 lambdaN = 2039905108 bitLength = 4974
2016-08-12 13:15:04,085 INFO  general.PaillierTest  [] - encM1 = 1967323052 encM2 = -1900108695
2016-08-12 13:15:04,577 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:15:04,830 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1780323396 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:15:04,830 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = false
2016-08-12 13:15:04,830 INFO  general.PaillierTest  [] - i = 0
2016-08-12 13:15:04,837 INFO  encryption.Paillier  [] - Parameters = p = 818406499 q = 1914586977 N = -978387325 NSquared = -1793313015 lambdaN = -839540576 bitLength = 201
2016-08-12 13:15:04,838 INFO  general.PaillierTest  [] - encM1 = -8958129 encM2 = 403577956
2016-08-12 13:15:04,838 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:15:04,838 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1436099861 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:15:06,812 INFO  encryption.Paillier  [] - Parameters = p = 6970247 q = 880115063 N = 1624536769 NSquared = -1497465471 lambdaN = -1778757918 bitLength = 3072
2016-08-12 13:15:06,931 INFO  general.PaillierTest  [] - encM1 = -516373318 encM2 = -618899946
2016-08-12 13:15:07,050 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:15:07,107 INFO  general.PaillierTest  [] - encM1_times_encM2 = 2065619634 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:15:16,366 INFO  encryption.Paillier  [] - Parameters = p = 865413537 q = 1793302895 N = -1063367217 NSquared = -1557516959 lambdaN = -2052003040 bitLength = 5508
2016-08-12 13:15:17,638 INFO  general.PaillierTest  [] - encM1 = 1008918108 encM2 = -756786295
2016-08-12 13:15:18,332 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:15:18,687 INFO  general.PaillierTest  [] - encM1_times_encM2 = 179062724 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:15:18,687 INFO  general.PaillierTest  [] - Starting testPaillierWithKeyGenerationBitSetOption with ensureHighBitSet = true
2016-08-12 13:15:18,687 INFO  general.PaillierTest  [] - i = 0
2016-08-12 13:15:18,691 INFO  encryption.Paillier  [] - testBit true
 N = 10101010000101010001100010001111100111000101010011000111111011010010111111100100010011011111100010010101110111001101101010000001001101111110010010001100001010100000111010010100111111111111001110110101
2016-08-12 13:15:18,691 INFO  encryption.Paillier  [] - Parameters = p = 1493853061 q = 1771163249 N = -1795165259 NSquared = -1298719239 lambdaN = 882438256 bitLength = 201
2016-08-12 13:15:18,692 INFO  general.PaillierTest  [] - encM1 = 339232992 encM2 = 1543300198
2016-08-12 13:15:18,693 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:15:18,693 INFO  general.PaillierTest  [] - encM1_times_encM2 = 1643316636 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:15:22,154 INFO  encryption.Paillier  [] - testBit true

2016-08-12 13:15:22,158 INFO  encryption.Paillier  [] - Parameters = p = -366207665 q = -128423173 N = 2022404725 NSquared = 775580025 lambdaN = -1012149838 bitLength = 3072
2016-08-12 13:15:22,274 INFO  general.PaillierTest  [] - encM1 = -1422942200 encM2 = -1879923696
2016-08-12 13:15:22,395 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
2016-08-12 13:15:22,457 INFO  general.PaillierTest  [] - encM1_times_encM2 = -898176230 multDecrypt = 7 m1_plus_m2 = 7
2016-08-12 13:15:25,335 INFO  encryption.Paillier  [] - testBit false

2016-08-12 13:15:28,625 INFO  encryption.Paillier  [] - testBit false

2016-08-12 13:15:32,199 INFO  encryption.Paillier  [] - testBit false
 N = 10100110101001111001010111010111011011110101111110101001011100110001110100011010001011011001001011101000110110111110011000000110001111010011010111011001110100010110000011001101101010010000101010000110000111101010101100101011000011010001101101011100111000110101011111001001110011000100101111100000010001000111101001001100101011011000111101000001011000111011001011001001111011001000101101001111100010001010100010000101010110101010110110111101011101011000010010111011100001001101101110100110010110010010000110000101000000101011100000001011110111011110101101011001111001111110110100100011101101001011100111010101111111011110110111011000101001101000010101000001111010101101110010010111010000101101110010011101000011010111001010101001010110101001010101100111111110111100000011100110100011011001011111000000000001100100110010001110110101100010101001000011100011110010110011000000010000110000100000110010001100000010001110000111001000010110111000000110000000001010100111001000111001001001110011110000010111010100000001010111010000010111101101110000110001001001110011000011000001110011000111000111100001111001000010011100111010110100000101011100100001000111110000101001011000101110110110111011100010100000011101010001110010101111000100111100001111110100110010000001001010000101000100110010110001101101011110100010001000010100010101100101100001111011110111111010111000011011010011110110011011010111010010100101000111011101101101001001000001001101000011111100000111010010111001001011101101100010010101101100111001110011011110010010100010010011111100110111100000111001111001110000000010101011010001001000001011111110000111000100111111110110100011001111010111011011000111001010001011101000001111100000101101001111011000100100111111011100010100111011100100000100111001110010000100011010101000101010000001111001000011010100010000000001010010000000110101000011010111101110110011101100101101101011000010011100100010000111101111101111101111010101100010000001100111110110001101000100010110100010110101110001110110000001111101101111010010000110000110001110100100001011101011001000000000110101111000010100001111011111001000010110011110010000101110011110000010101101001111010101011010100101101010010111011110110010111110111100110001000101011011000001100100101011110111111101010011011101001111111100101111000110111110111110101001111010100010110011111101010100101111001001111101111011111010110110010100111111101110111000010001000001111010010000111001010110110101100110000000010011000101000111110111011000010011010101111111010100000000100011100111101111000000111100110011101100011100100110101111101100111010111011100011011110001111111000101010010110011011001011110001110100100101010011001100001110111000100000100001001101000100000010000110100110011011011000000100110001111111001111000001001101010101011101111010100101001111101101000100101001101000110000101011111110000111111101110010100111011110001111100110000001101100101101001101011011011110011110001001100001110000101110011101100001111000000111100111101100011001001001011110001111001101111110111000101101110000101010111001101000010001000111000101011000111010110000100101010010100001011011101101100111001111000100101000000000101111011011011010000010100000101101101011110011111101011100010101010001101010111001010101111000001111011111100100111110001001001010011001
2016-08-12 13:15:37,238 INFO  encryption.Paillier  [] - testBit false

2016-08-12 13:15:39,592 INFO  encryption.Paillier  [] - testBit true

2016-08-12 13:15:39,595 INFO  encryption.Paillier  [] - Parameters = p = -514178993 q = 1610929189 N = -259475605 NSquared = 85599929 lambdaN = 1469370748 bitLength = 3290
2016-08-12 13:15:39,745 INFO  general.PaillierTest  [] - encM1 = -1627688397 encM2 = -1942180588
2016-08-12 13:15:39,890 INFO  general.PaillierTest  [] - decM1 = 5 decM2 = 2
